/* This C header file is generated by NIT to compile modules and programs that requires ./global/reachable_as_init. */
#ifndef global___reachable_as_init_sep
#define global___reachable_as_init_sep
#include "program._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_global___reachable_as_init___ReachableAsInitAnalysis[];

extern const classtable_elt_t VFT_global___reachable_as_init___DefaultReachableAsInitAnalysis[];
extern const char LOCATE_global___reachable_as_init[];
extern const int SFT_global___reachable_as_init[];
#define ATTR_global___reachable_as_init___Program____rai(recv) ATTR(recv, (SFT_global___reachable_as_init[0] + 0))
#define CALL_global___reachable_as_init___Program___rai(recv) ((global___reachable_as_init___Program___rai_t)CALL((recv), (SFT_global___reachable_as_init[1] + 0)))
#define CALL_global___reachable_as_init___Program___rai__eq(recv) ((global___reachable_as_init___Program___rai__eq_t)CALL((recv), (SFT_global___reachable_as_init[1] + 1)))
#define CALL_global___reachable_as_init___Program___dump_reachable_as_init_methods(recv) ((global___reachable_as_init___Program___dump_reachable_as_init_methods_t)CALL((recv), (SFT_global___reachable_as_init[1] + 2)))
#define ID_global___reachable_as_init___ReachableAsInitAnalysis (SFT_global___reachable_as_init[2])
#define COLOR_global___reachable_as_init___ReachableAsInitAnalysis (SFT_global___reachable_as_init[3])
#define INIT_TABLE_POS_global___reachable_as_init___ReachableAsInitAnalysis (SFT_global___reachable_as_init[4] + 0)
#define CALL_global___reachable_as_init___ReachableAsInitAnalysis___is_method_reachable_as_init(recv) ((global___reachable_as_init___ReachableAsInitAnalysis___is_method_reachable_as_init_t)CALL((recv), (SFT_global___reachable_as_init[4] + 1)))
#define ID_global___reachable_as_init___DefaultReachableAsInitAnalysis (SFT_global___reachable_as_init[5])
#define COLOR_global___reachable_as_init___DefaultReachableAsInitAnalysis (SFT_global___reachable_as_init[6])
#define INIT_TABLE_POS_global___reachable_as_init___DefaultReachableAsInitAnalysis (SFT_global___reachable_as_init[7] + 0)
#define CALL_global___reachable_as_init___DefaultReachableAsInitAnalysis___init(recv) ((global___reachable_as_init___DefaultReachableAsInitAnalysis___init_t)CALL((recv), (SFT_global___reachable_as_init[7] + 1)))
val_t global___reachable_as_init___Program___rai(val_t p0);
typedef val_t (*global___reachable_as_init___Program___rai_t)(val_t p0);
void global___reachable_as_init___Program___rai__eq(val_t p0, val_t p1);
typedef void (*global___reachable_as_init___Program___rai__eq_t)(val_t p0, val_t p1);
void global___reachable_as_init___Program___dump_reachable_as_init_methods(val_t p0, val_t p1);
typedef void (*global___reachable_as_init___Program___dump_reachable_as_init_methods_t)(val_t p0, val_t p1);
  void OC_global___reachable_as_init___Program___dump_reachable_as_init_methods_4(struct stack_frame_t *closctx, val_t p0);
  typedef void (*OC_global___reachable_as_init___Program___dump_reachable_as_init_methods_4_t)(struct stack_frame_t *closctx, val_t p0);
    typedef void (*CLOS_OC_global___reachable_as_init___Program___dump_reachable_as_init_methods_5_0)(struct stack_frame_t *);
    void OC_global___reachable_as_init___Program___dump_reachable_as_init_methods_5(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
    typedef void (*OC_global___reachable_as_init___Program___dump_reachable_as_init_methods_5_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_Program_program___Program___init(val_t p0, val_t p1);
val_t global___reachable_as_init___ReachableAsInitAnalysis___is_method_reachable_as_init(val_t p0, val_t p1, val_t p2);
typedef val_t (*global___reachable_as_init___ReachableAsInitAnalysis___is_method_reachable_as_init_t)(val_t p0, val_t p1, val_t p2);
val_t global___reachable_as_init___DefaultReachableAsInitAnalysis___is_method_reachable_as_init(val_t p0, val_t p1, val_t p2);
typedef val_t (*global___reachable_as_init___DefaultReachableAsInitAnalysis___is_method_reachable_as_init_t)(val_t p0, val_t p1, val_t p2);
void global___reachable_as_init___DefaultReachableAsInitAnalysis___init(val_t p0, int* init_table);
typedef void (*global___reachable_as_init___DefaultReachableAsInitAnalysis___init_t)(val_t p0, int* init_table);
val_t NEW_DefaultReachableAsInitAnalysis_global___reachable_as_init___DefaultReachableAsInitAnalysis___init();
#endif
