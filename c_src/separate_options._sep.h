/* This C header file is generated by NIT to compile modules and programs that requires ./separate_options. */
#ifndef separate_options_sep
#define separate_options_sep
#include "ffi._sep.h"
#include <nit_common.h>
extern const char LOCATE_separate_options[];
extern const int SFT_separate_options[];
#define ATTR_separate_options___ToolContext_____atseparate_options(recv) ATTR(recv, (SFT_separate_options[0] + 0))
#define ATTR_separate_options___ToolContext_____atopt_cc_lib_paths(recv) ATTR(recv, (SFT_separate_options[0] + 1))
#define ATTR_separate_options___ToolContext_____atopt_cc_libs(recv) ATTR(recv, (SFT_separate_options[0] + 2))
#define ATTR_separate_options___ToolContext_____atopt_cc_include_paths(recv) ATTR(recv, (SFT_separate_options[0] + 3))
#define CALL_separate_options___ToolContext___separate_options(recv) ((separate_options___ToolContext___separate_options_t)CALL((recv), (SFT_separate_options[1] + 0)))
#define CALL_separate_options___ToolContext___separate_options__eq(recv) ((separate_options___ToolContext___separate_options__eq_t)CALL((recv), (SFT_separate_options[1] + 1)))
#define CALL_separate_options___ToolContext___opt_cc_lib_paths(recv) ((separate_options___ToolContext___opt_cc_lib_paths_t)CALL((recv), (SFT_separate_options[1] + 2)))
#define CALL_separate_options___ToolContext___opt_cc_lib_paths__eq(recv) ((separate_options___ToolContext___opt_cc_lib_paths__eq_t)CALL((recv), (SFT_separate_options[1] + 3)))
#define CALL_separate_options___ToolContext___opt_cc_libs(recv) ((separate_options___ToolContext___opt_cc_libs_t)CALL((recv), (SFT_separate_options[1] + 4)))
#define CALL_separate_options___ToolContext___opt_cc_libs__eq(recv) ((separate_options___ToolContext___opt_cc_libs__eq_t)CALL((recv), (SFT_separate_options[1] + 5)))
#define CALL_separate_options___ToolContext___opt_cc_include_paths(recv) ((separate_options___ToolContext___opt_cc_include_paths_t)CALL((recv), (SFT_separate_options[1] + 6)))
#define CALL_separate_options___ToolContext___opt_cc_include_paths__eq(recv) ((separate_options___ToolContext___opt_cc_include_paths__eq_t)CALL((recv), (SFT_separate_options[1] + 7)))
#define CALL_SUPER_separate_options___ToolContext___init(recv) ((separate_options___ToolContext___init_t)CALL((recv), (SFT_separate_options[1] + 8)))
#define CALL_separate_options___ToolContext___integrate_separate_options(recv) ((separate_options___ToolContext___integrate_separate_options_t)CALL((recv), (SFT_separate_options[1] + 9)))
#define CALL_SUPER_separate_options___MMSrcModule___compile_separate_module(recv) ((separate_options___MMSrcModule___compile_separate_module_t)CALL((recv), (SFT_separate_options[2] + 0)))
val_t separate_options___ToolContext___separate_options(val_t p0);
typedef val_t (*separate_options___ToolContext___separate_options_t)(val_t p0);
void separate_options___ToolContext___separate_options__eq(val_t p0, val_t p1);
typedef void (*separate_options___ToolContext___separate_options__eq_t)(val_t p0, val_t p1);
val_t separate_options___ToolContext___opt_cc_lib_paths(val_t p0);
typedef val_t (*separate_options___ToolContext___opt_cc_lib_paths_t)(val_t p0);
void separate_options___ToolContext___opt_cc_lib_paths__eq(val_t p0, val_t p1);
typedef void (*separate_options___ToolContext___opt_cc_lib_paths__eq_t)(val_t p0, val_t p1);
val_t separate_options___ToolContext___opt_cc_libs(val_t p0);
typedef val_t (*separate_options___ToolContext___opt_cc_libs_t)(val_t p0);
void separate_options___ToolContext___opt_cc_libs__eq(val_t p0, val_t p1);
typedef void (*separate_options___ToolContext___opt_cc_libs__eq_t)(val_t p0, val_t p1);
val_t separate_options___ToolContext___opt_cc_include_paths(val_t p0);
typedef val_t (*separate_options___ToolContext___opt_cc_include_paths_t)(val_t p0);
void separate_options___ToolContext___opt_cc_include_paths__eq(val_t p0, val_t p1);
typedef void (*separate_options___ToolContext___opt_cc_include_paths__eq_t)(val_t p0, val_t p1);
void separate_options___ToolContext___init(val_t p0, int* init_table);
typedef void (*separate_options___ToolContext___init_t)(val_t p0, int* init_table);
val_t NEW_ToolContext_toolcontext___ToolContext___init();
void separate_options___ToolContext___integrate_separate_options(val_t p0, val_t p1, val_t p2);
typedef void (*separate_options___ToolContext___integrate_separate_options_t)(val_t p0, val_t p1, val_t p2);
void separate_options___MMSrcModule___compile_separate_module(val_t p0, val_t p1);
typedef void (*separate_options___MMSrcModule___compile_separate_module_t)(val_t p0, val_t p1);
val_t NEW_MMSrcModule_syntax___syntax_base___MMSrcModule___init(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
#endif
