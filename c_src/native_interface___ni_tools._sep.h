/* This C header file is generated by NIT to compile modules and programs that requires ./native_interface/ni_tools. */
#ifndef native_interface___ni_tools_sep
#define native_interface___ni_tools_sep
#include "compiling._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_native_interface___ni_tools___FunctionCompiler[];
extern const char LOCATE_native_interface___ni_tools[];
extern const int SFT_native_interface___ni_tools[];
#define ID_native_interface___ni_tools___FunctionCompiler (SFT_native_interface___ni_tools[0])
#define COLOR_native_interface___ni_tools___FunctionCompiler (SFT_native_interface___ni_tools[1])
#define ATTR_native_interface___ni_tools___FunctionCompiler_____atsignature(recv) ATTR(recv, (SFT_native_interface___ni_tools[2] + 0))
#define ATTR_native_interface___ni_tools___FunctionCompiler_____atdecls(recv) ATTR(recv, (SFT_native_interface___ni_tools[2] + 1))
#define ATTR_native_interface___ni_tools___FunctionCompiler_____atexprs(recv) ATTR(recv, (SFT_native_interface___ni_tools[2] + 2))
#define INIT_TABLE_POS_native_interface___ni_tools___FunctionCompiler (SFT_native_interface___ni_tools[3] + 0)
#define CALL_native_interface___ni_tools___FunctionCompiler___signature(recv) ((native_interface___ni_tools___FunctionCompiler___signature_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 1)))
#define CALL_native_interface___ni_tools___FunctionCompiler___signature__eq(recv) ((native_interface___ni_tools___FunctionCompiler___signature__eq_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 2)))
#define CALL_native_interface___ni_tools___FunctionCompiler___decls(recv) ((native_interface___ni_tools___FunctionCompiler___decls_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 3)))
#define CALL_native_interface___ni_tools___FunctionCompiler___decls__eq(recv) ((native_interface___ni_tools___FunctionCompiler___decls__eq_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 4)))
#define CALL_native_interface___ni_tools___FunctionCompiler___exprs(recv) ((native_interface___ni_tools___FunctionCompiler___exprs_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 5)))
#define CALL_native_interface___ni_tools___FunctionCompiler___exprs__eq(recv) ((native_interface___ni_tools___FunctionCompiler___exprs__eq_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 6)))
#define CALL_native_interface___ni_tools___FunctionCompiler___to_writer(recv) ((native_interface___ni_tools___FunctionCompiler___to_writer_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 7)))
#define CALL_native_interface___ni_tools___FunctionCompiler___init(recv) ((native_interface___ni_tools___FunctionCompiler___init_t)CALL((recv), (SFT_native_interface___ni_tools[3] + 8)))
val_t native_interface___ni_tools___FunctionCompiler___signature(val_t p0);
typedef val_t (*native_interface___ni_tools___FunctionCompiler___signature_t)(val_t p0);
void native_interface___ni_tools___FunctionCompiler___signature__eq(val_t p0, val_t p1);
typedef void (*native_interface___ni_tools___FunctionCompiler___signature__eq_t)(val_t p0, val_t p1);
val_t native_interface___ni_tools___FunctionCompiler___decls(val_t p0);
typedef val_t (*native_interface___ni_tools___FunctionCompiler___decls_t)(val_t p0);
void native_interface___ni_tools___FunctionCompiler___decls__eq(val_t p0, val_t p1);
typedef void (*native_interface___ni_tools___FunctionCompiler___decls__eq_t)(val_t p0, val_t p1);
val_t native_interface___ni_tools___FunctionCompiler___exprs(val_t p0);
typedef val_t (*native_interface___ni_tools___FunctionCompiler___exprs_t)(val_t p0);
void native_interface___ni_tools___FunctionCompiler___exprs__eq(val_t p0, val_t p1);
typedef void (*native_interface___ni_tools___FunctionCompiler___exprs__eq_t)(val_t p0, val_t p1);
val_t native_interface___ni_tools___FunctionCompiler___to_writer(val_t p0);
typedef val_t (*native_interface___ni_tools___FunctionCompiler___to_writer_t)(val_t p0);
void native_interface___ni_tools___FunctionCompiler___init(val_t p0, val_t p1, int* init_table);
typedef void (*native_interface___ni_tools___FunctionCompiler___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_FunctionCompiler_native_interface___ni_tools___FunctionCompiler___init(val_t p0);
#endif
