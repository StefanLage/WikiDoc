/* This C header file is generated by NIT to compile modules and programs that requires ./global/global. */
#ifndef global_sep
#define global_sep
#include "abstracttool._sep.h"
#include "global___cha_analysis._sep.h"
#include "global___rta_analysis._sep.h"
#include "global___reachable_as_init_impl._sep.h"
#include "global___reachable_from_init_method_analysis_impl._sep.h"
#include "global___dead_method_removal._sep.h"
#include "global___inline_get_and_set._sep.h"
#include "global___remove_out_of_init_get_test._sep.h"
#include <nit_common.h>
extern const char LOCATE_global[];
extern const int SFT_global[];
#define ATTR_global___ToolContext____global_callgraph(recv) ATTR(recv, (SFT_global[0] + 0))
#define ATTR_global___ToolContext____opt_global(recv) ATTR(recv, (SFT_global[0] + 1))
#define ATTR_global___ToolContext____opt_global_no_STF_opt(recv) ATTR(recv, (SFT_global[0] + 2))
#define ATTR_global___ToolContext____opt_global_no_DMR_opt(recv) ATTR(recv, (SFT_global[0] + 3))
#define ATTR_global___ToolContext____opt_global_no_inline_get_set(recv) ATTR(recv, (SFT_global[0] + 4))
#define ATTR_global___ToolContext____opt_global_no_out_of_init_get_test_opt(recv) ATTR(recv, (SFT_global[0] + 5))
#define ATTR_global___ToolContext____opt_global_no_RFIMA(recv) ATTR(recv, (SFT_global[0] + 6))
#define ATTR_global___ToolContext____opt_global_callgraph(recv) ATTR(recv, (SFT_global[0] + 7))
#define CALL_global___ToolContext___global_callgraph(recv) ((global___ToolContext___global_callgraph_t)CALL((recv), (SFT_global[1] + 0)))
#define CALL_global___ToolContext___global_callgraph__eq(recv) ((global___ToolContext___global_callgraph__eq_t)CALL((recv), (SFT_global[1] + 1)))
#define CALL_global___ToolContext___opt_global(recv) ((global___ToolContext___opt_global_t)CALL((recv), (SFT_global[1] + 2)))
#define CALL_global___ToolContext___opt_global_no_STF_opt(recv) ((global___ToolContext___opt_global_no_STF_opt_t)CALL((recv), (SFT_global[1] + 3)))
#define CALL_global___ToolContext___opt_global_no_DMR_opt(recv) ((global___ToolContext___opt_global_no_DMR_opt_t)CALL((recv), (SFT_global[1] + 4)))
#define CALL_global___ToolContext___opt_global_no_inline_get_set(recv) ((global___ToolContext___opt_global_no_inline_get_set_t)CALL((recv), (SFT_global[1] + 5)))
#define CALL_global___ToolContext___opt_global_no_out_of_init_get_test_opt(recv) ((global___ToolContext___opt_global_no_out_of_init_get_test_opt_t)CALL((recv), (SFT_global[1] + 6)))
#define CALL_global___ToolContext___opt_global_no_RFIMA(recv) ((global___ToolContext___opt_global_no_RFIMA_t)CALL((recv), (SFT_global[1] + 7)))
#define CALL_global___ToolContext___opt_global_callgraph(recv) ((global___ToolContext___opt_global_callgraph_t)CALL((recv), (SFT_global[1] + 8)))
#define CALL_SUPER_global___ToolContext___init(recv) ((global___ToolContext___init_t)CALL((recv), (SFT_global[1] + 9)))
#define CALL_SUPER_global___AbstractCompiler___process_options(recv) ((global___AbstractCompiler___process_options_t)CALL((recv), (SFT_global[2] + 0)))
#define CALL_global___Program___do_global_analysis(recv) ((global___Program___do_global_analysis_t)CALL((recv), (SFT_global[3] + 0)))
#define CALL_global___Program___dump_global_optimizations_information(recv) ((global___Program___dump_global_optimizations_information_t)CALL((recv), (SFT_global[3] + 1)))
#define CALL_global___Program___dump_global_analysis_information(recv) ((global___Program___dump_global_analysis_information_t)CALL((recv), (SFT_global[3] + 2)))
val_t global___ToolContext___global_callgraph(val_t p0);
typedef val_t (*global___ToolContext___global_callgraph_t)(val_t p0);
void global___ToolContext___global_callgraph__eq(val_t p0, val_t p1);
typedef void (*global___ToolContext___global_callgraph__eq_t)(val_t p0, val_t p1);
val_t global___ToolContext___opt_global(val_t p0);
typedef val_t (*global___ToolContext___opt_global_t)(val_t p0);
val_t global___ToolContext___opt_global_no_STF_opt(val_t p0);
typedef val_t (*global___ToolContext___opt_global_no_STF_opt_t)(val_t p0);
val_t global___ToolContext___opt_global_no_DMR_opt(val_t p0);
typedef val_t (*global___ToolContext___opt_global_no_DMR_opt_t)(val_t p0);
val_t global___ToolContext___opt_global_no_inline_get_set(val_t p0);
typedef val_t (*global___ToolContext___opt_global_no_inline_get_set_t)(val_t p0);
val_t global___ToolContext___opt_global_no_out_of_init_get_test_opt(val_t p0);
typedef val_t (*global___ToolContext___opt_global_no_out_of_init_get_test_opt_t)(val_t p0);
val_t global___ToolContext___opt_global_no_RFIMA(val_t p0);
typedef val_t (*global___ToolContext___opt_global_no_RFIMA_t)(val_t p0);
val_t global___ToolContext___opt_global_callgraph(val_t p0);
typedef val_t (*global___ToolContext___opt_global_callgraph_t)(val_t p0);
void global___ToolContext___init(val_t p0, int* init_table);
typedef void (*global___ToolContext___init_t)(val_t p0, int* init_table);
val_t NEW_ToolContext_toolcontext___ToolContext___init();
void global___AbstractCompiler___process_options(val_t p0);
typedef void (*global___AbstractCompiler___process_options_t)(val_t p0);
val_t NEW_AbstractCompiler_abstracttool___AbstractCompiler___init(val_t p0);
void global___Program___do_global_analysis(val_t p0);
typedef void (*global___Program___do_global_analysis_t)(val_t p0);
void global___Program___dump_global_optimizations_information(val_t p0, val_t p1);
typedef void (*global___Program___dump_global_optimizations_information_t)(val_t p0, val_t p1);
void global___Program___dump_global_analysis_information(val_t p0, val_t p1);
typedef void (*global___Program___dump_global_analysis_information_t)(val_t p0, val_t p1);
val_t NEW_Program_program___Program___init(val_t p0, val_t p1);
#endif
