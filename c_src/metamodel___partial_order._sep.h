/* This C header file is generated by NIT to compile modules and programs that requires ./metamodel/partial_order. */
#ifndef metamodel___partial_order_sep
#define metamodel___partial_order_sep
#include "standard._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_metamodel___partial_order___PartialOrder[];

extern const classtable_elt_t VFT_metamodel___partial_order___PartialOrderElement[];
extern const char LOCATE_metamodel___partial_order[];
extern const int SFT_metamodel___partial_order[];
#define ID_metamodel___partial_order___PartialOrder (SFT_metamodel___partial_order[0])
#define COLOR_metamodel___partial_order___PartialOrder (SFT_metamodel___partial_order[1])
#define ATTR_metamodel___partial_order___PartialOrder____elements(recv) ATTR(recv, (SFT_metamodel___partial_order[2] + 0))
#define ATTR_metamodel___partial_order___PartialOrder____elements_list(recv) ATTR(recv, (SFT_metamodel___partial_order[2] + 1))
#define ATTR_metamodel___partial_order___PartialOrder____roots(recv) ATTR(recv, (SFT_metamodel___partial_order[2] + 2))
#define INIT_TABLE_POS_metamodel___partial_order___PartialOrder (SFT_metamodel___partial_order[3] + 0)
#define CALL_metamodel___partial_order___PartialOrder___roots(recv) ((metamodel___partial_order___PartialOrder___roots_t)CALL((recv), (SFT_metamodel___partial_order[3] + 1)))
#define CALL_metamodel___partial_order___PartialOrder_____bra(recv) ((metamodel___partial_order___PartialOrder_____bra_t)CALL((recv), (SFT_metamodel___partial_order[3] + 2)))
#define CALL_metamodel___partial_order___PartialOrder___to_dot(recv) ((metamodel___partial_order___PartialOrder___to_dot_t)CALL((recv), (SFT_metamodel___partial_order[3] + 3)))
#define CALL_metamodel___partial_order___PartialOrder___to_dot_header(recv) ((metamodel___partial_order___PartialOrder___to_dot_header_t)CALL((recv), (SFT_metamodel___partial_order[3] + 4)))
#define CALL_metamodel___partial_order___PartialOrder___to_dot_node(recv) ((metamodel___partial_order___PartialOrder___to_dot_node_t)CALL((recv), (SFT_metamodel___partial_order[3] + 5)))
#define CALL_metamodel___partial_order___PartialOrder___to_dot_edge(recv) ((metamodel___partial_order___PartialOrder___to_dot_edge_t)CALL((recv), (SFT_metamodel___partial_order[3] + 6)))
#define CALL_metamodel___partial_order___PartialOrder___select_smallests(recv) ((metamodel___partial_order___PartialOrder___select_smallests_t)CALL((recv), (SFT_metamodel___partial_order[3] + 7)))
#define CALL_metamodel___partial_order___PartialOrder___add(recv) ((metamodel___partial_order___PartialOrder___add_t)CALL((recv), (SFT_metamodel___partial_order[3] + 8)))
#define CALL_metamodel___partial_order___PartialOrder___has_all(recv) ((metamodel___partial_order___PartialOrder___has_all_t)CALL((recv), (SFT_metamodel___partial_order[3] + 9)))
#define CALL_metamodel___partial_order___PartialOrder___new_poe(recv) ((metamodel___partial_order___PartialOrder___new_poe_t)CALL((recv), (SFT_metamodel___partial_order[3] + 10)))
#define CALL_metamodel___partial_order___PartialOrder___add_to_smallests(recv) ((metamodel___partial_order___PartialOrder___add_to_smallests_t)CALL((recv), (SFT_metamodel___partial_order[3] + 11)))
#define CALL_metamodel___partial_order___PartialOrder___compute_smallers_for(recv) ((metamodel___partial_order___PartialOrder___compute_smallers_for_t)CALL((recv), (SFT_metamodel___partial_order[3] + 12)))
#define CALL_metamodel___partial_order___PartialOrder___init(recv) ((metamodel___partial_order___PartialOrder___init_t)CALL((recv), (SFT_metamodel___partial_order[3] + 13)))
#define ID_metamodel___partial_order___PartialOrderElement (SFT_metamodel___partial_order[4])
#define COLOR_metamodel___partial_order___PartialOrderElement (SFT_metamodel___partial_order[5])
#define ATTR_metamodel___partial_order___PartialOrderElement____order(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 0))
#define ATTR_metamodel___partial_order___PartialOrderElement____value(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 1))
#define ATTR_metamodel___partial_order___PartialOrderElement____rank(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 2))
#define ATTR_metamodel___partial_order___PartialOrderElement____direct_greaters(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 3))
#define ATTR_metamodel___partial_order___PartialOrderElement____direct_smallers(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 4))
#define ATTR_metamodel___partial_order___PartialOrderElement____greaters(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 5))
#define ATTR_metamodel___partial_order___PartialOrderElement____greaters_and_self_cache(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 6))
#define ATTR_metamodel___partial_order___PartialOrderElement____smallers_last_length(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 7))
#define ATTR_metamodel___partial_order___PartialOrderElement____smallers_cache(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 8))
#define ATTR_metamodel___partial_order___PartialOrderElement____linear_extension_cache(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 9))
#define ATTR_metamodel___partial_order___PartialOrderElement____reverse_linear_extension_cache(recv) ATTR(recv, (SFT_metamodel___partial_order[6] + 10))
#define INIT_TABLE_POS_metamodel___partial_order___PartialOrderElement (SFT_metamodel___partial_order[7] + 0)
#define CALL_metamodel___partial_order___PartialOrderElement___order(recv) ((metamodel___partial_order___PartialOrderElement___order_t)CALL((recv), (SFT_metamodel___partial_order[7] + 1)))
#define CALL_metamodel___partial_order___PartialOrderElement___value(recv) ((metamodel___partial_order___PartialOrderElement___value_t)CALL((recv), (SFT_metamodel___partial_order[7] + 2)))
#define CALL_metamodel___partial_order___PartialOrderElement___rank(recv) ((metamodel___partial_order___PartialOrderElement___rank_t)CALL((recv), (SFT_metamodel___partial_order[7] + 3)))
#define CALL_metamodel___partial_order___PartialOrderElement___direct_greaters(recv) ((metamodel___partial_order___PartialOrderElement___direct_greaters_t)CALL((recv), (SFT_metamodel___partial_order[7] + 4)))
#define CALL_metamodel___partial_order___PartialOrderElement___direct_smallers(recv) ((metamodel___partial_order___PartialOrderElement___direct_smallers_t)CALL((recv), (SFT_metamodel___partial_order[7] + 5)))
#define CALL_metamodel___partial_order___PartialOrderElement___greaters(recv) ((metamodel___partial_order___PartialOrderElement___greaters_t)CALL((recv), (SFT_metamodel___partial_order[7] + 6)))
#define CALL_metamodel___partial_order___PartialOrderElement___greaters_and_self(recv) ((metamodel___partial_order___PartialOrderElement___greaters_and_self_t)CALL((recv), (SFT_metamodel___partial_order[7] + 7)))
#define CALL_metamodel___partial_order___PartialOrderElement___smallers(recv) ((metamodel___partial_order___PartialOrderElement___smallers_t)CALL((recv), (SFT_metamodel___partial_order[7] + 8)))
#define CALL_metamodel___partial_order___PartialOrderElement___linear_extension(recv) ((metamodel___partial_order___PartialOrderElement___linear_extension_t)CALL((recv), (SFT_metamodel___partial_order[7] + 9)))
#define CALL_metamodel___partial_order___PartialOrderElement___reverse_linear_extension(recv) ((metamodel___partial_order___PartialOrderElement___reverse_linear_extension_t)CALL((recv), (SFT_metamodel___partial_order[7] + 10)))
#define CALL_metamodel___partial_order___PartialOrderElement_____l(recv) ((metamodel___partial_order___PartialOrderElement_____l_t)CALL((recv), (SFT_metamodel___partial_order[7] + 11)))
#define CALL_metamodel___partial_order___PartialOrderElement_____leq(recv) ((metamodel___partial_order___PartialOrderElement_____leq_t)CALL((recv), (SFT_metamodel___partial_order[7] + 12)))
#define CALL_metamodel___partial_order___PartialOrderElement_____g(recv) ((metamodel___partial_order___PartialOrderElement_____g_t)CALL((recv), (SFT_metamodel___partial_order[7] + 13)))
#define CALL_metamodel___partial_order___PartialOrderElement_____geq(recv) ((metamodel___partial_order___PartialOrderElement_____geq_t)CALL((recv), (SFT_metamodel___partial_order[7] + 14)))
#define CALL_metamodel___partial_order___PartialOrderElement___register_direct_smallers(recv) ((metamodel___partial_order___PartialOrderElement___register_direct_smallers_t)CALL((recv), (SFT_metamodel___partial_order[7] + 15)))
#define CALL_metamodel___partial_order___PartialOrderElement___init(recv) ((metamodel___partial_order___PartialOrderElement___init_t)CALL((recv), (SFT_metamodel___partial_order[7] + 16)))
val_t metamodel___partial_order___PartialOrder___roots(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___roots_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder___is_empty(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___is_empty_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder___length(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___length_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder___first(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___first_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder___has(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___has_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrder___has_only(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___has_only_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrder___count(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___count_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrder___iterator(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___iterator_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder_____bra(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder_____bra_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrder___to_dot(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___to_dot_t)(val_t p0);
  typedef void (*CLOS_OC_metamodel___partial_order___PartialOrder___to_dot_1_0)(struct stack_frame_t *);
  void OC_metamodel___partial_order___PartialOrder___to_dot_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___partial_order___PartialOrder___to_dot_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t metamodel___partial_order___PartialOrder___to_dot_header(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrder___to_dot_header_t)(val_t p0);
val_t metamodel___partial_order___PartialOrder___to_dot_node(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___to_dot_node_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrder___to_dot_edge(val_t p0, val_t p1, val_t p2);
typedef val_t (*metamodel___partial_order___PartialOrder___to_dot_edge_t)(val_t p0, val_t p1, val_t p2);
val_t metamodel___partial_order___PartialOrder___select_smallests(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___select_smallests_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_metamodel___partial_order___PartialOrder___select_smallests_2_0)(struct stack_frame_t *);
  void OC_metamodel___partial_order___PartialOrder___select_smallests_2(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___partial_order___PartialOrder___select_smallests_2_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t metamodel___partial_order___PartialOrder___add(val_t p0, val_t p1, val_t p2);
typedef val_t (*metamodel___partial_order___PartialOrder___add_t)(val_t p0, val_t p1, val_t p2);
val_t metamodel___partial_order___PartialOrder___has_all(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrder___has_all_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_metamodel___partial_order___PartialOrder___has_all_1_0)(struct stack_frame_t *);
  void OC_metamodel___partial_order___PartialOrder___has_all_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___partial_order___PartialOrder___has_all_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t metamodel___partial_order___PartialOrder___new_poe(val_t p0, val_t p1, val_t p2);
typedef val_t (*metamodel___partial_order___PartialOrder___new_poe_t)(val_t p0, val_t p1, val_t p2);
val_t metamodel___partial_order___PartialOrder___add_to_smallests(val_t p0, val_t p1, val_t p2, val_t p3);
typedef val_t (*metamodel___partial_order___PartialOrder___add_to_smallests_t)(val_t p0, val_t p1, val_t p2, val_t p3);
void metamodel___partial_order___PartialOrder___compute_smallers_for(val_t p0, val_t p1, val_t p2);
typedef void (*metamodel___partial_order___PartialOrder___compute_smallers_for_t)(val_t p0, val_t p1, val_t p2);
  typedef void (*CLOS_OC_metamodel___partial_order___PartialOrder___compute_smallers_for_1_0)(struct stack_frame_t *);
  void OC_metamodel___partial_order___PartialOrder___compute_smallers_for_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_metamodel___partial_order___PartialOrder___compute_smallers_for_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
void metamodel___partial_order___PartialOrder___init(val_t p0, int* init_table);
typedef void (*metamodel___partial_order___PartialOrder___init_t)(val_t p0, int* init_table);
val_t NEW_PartialOrder_metamodel___partial_order___PartialOrder___init();
val_t metamodel___partial_order___PartialOrderElement___order(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___order_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___value(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___value_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___rank(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___rank_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___direct_greaters(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___direct_greaters_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___direct_smallers(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___direct_smallers_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___greaters(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___greaters_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___greaters_and_self(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___greaters_and_self_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___smallers(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___smallers_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___linear_extension(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___linear_extension_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement___reverse_linear_extension(val_t p0);
typedef val_t (*metamodel___partial_order___PartialOrderElement___reverse_linear_extension_t)(val_t p0);
val_t metamodel___partial_order___PartialOrderElement_____l(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrderElement_____l_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrderElement_____leq(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrderElement_____leq_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrderElement_____g(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrderElement_____g_t)(val_t p0, val_t p1);
val_t metamodel___partial_order___PartialOrderElement_____geq(val_t p0, val_t p1);
typedef val_t (*metamodel___partial_order___PartialOrderElement_____geq_t)(val_t p0, val_t p1);
void metamodel___partial_order___PartialOrderElement___register_direct_smallers(val_t p0, val_t p1);
typedef void (*metamodel___partial_order___PartialOrderElement___register_direct_smallers_t)(val_t p0, val_t p1);
void metamodel___partial_order___PartialOrderElement___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*metamodel___partial_order___PartialOrderElement___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
      void OC_metamodel___partial_order___PartialOrderElement___init_1(struct stack_frame_t *closctx, val_t p0);
      typedef void (*OC_metamodel___partial_order___PartialOrderElement___init_1_t)(struct stack_frame_t *closctx, val_t p0);
val_t NEW_PartialOrderElement_metamodel___partial_order___PartialOrderElement___init(val_t p0, val_t p1, val_t p2);
#endif
