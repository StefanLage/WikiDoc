/* This C header file is generated by NIT to compile modules and programs that requires ./compiling/compiling_global. */
#ifndef compiling___compiling_global_sep
#define compiling___compiling_global_sep
#include "compiling___table_computation._sep.h"
#include "compiling___compiling_icode._sep.h"
#include <nit_common.h>
extern const char LOCATE_compiling___compiling_global[];
extern const int SFT_compiling___compiling_global[];
#define CALL_compiling___compiling_global___Program___compile_tables_to_c(recv) ((compiling___compiling_global___Program___compile_tables_to_c_t)CALL((recv), (SFT_compiling___compiling_global[0] + 0)))
#define CALL_compiling___compiling_global___Program___compile_main_part(recv) ((compiling___compiling_global___Program___compile_main_part_t)CALL((recv), (SFT_compiling___compiling_global[0] + 1)))
#define CALL_compiling___compiling_global___MMModule___declare_class_tables_to_c(recv) ((compiling___compiling_global___MMModule___declare_class_tables_to_c_t)CALL((recv), (SFT_compiling___compiling_global[1] + 0)))
#define CALL_compiling___compiling_global___MMModule___compile_mod_to_c(recv) ((compiling___compiling_global___MMModule___compile_mod_to_c_t)CALL((recv), (SFT_compiling___compiling_global[1] + 1)))
#define CALL_compiling___compiling_global___MMModule___compile_local_table_to_c(recv) ((compiling___compiling_global___MMModule___compile_local_table_to_c_t)CALL((recv), (SFT_compiling___compiling_global[1] + 2)))
#define CALL_compiling___compiling_global___AbsTableElt___compile_macros(recv) ((compiling___compiling_global___AbsTableElt___compile_macros_t)CALL((recv), (SFT_compiling___compiling_global[2] + 0)))
#define CALL_compiling___compiling_global___TableElt___compile_to_c(recv) ((compiling___compiling_global___TableElt___compile_to_c_t)CALL((recv), (SFT_compiling___compiling_global[3] + 0)))
#define CALL_compiling___compiling_global___ModuleTableElt___value(recv) ((compiling___compiling_global___ModuleTableElt___value_t)CALL((recv), (SFT_compiling___compiling_global[4] + 0)))
#define CALL_compiling___compiling_global___AbsTableEltClass___symbol(recv) ((compiling___compiling_global___AbsTableEltClass___symbol_t)CALL((recv), (SFT_compiling___compiling_global[5] + 0)))
#define CALL_compiling___compiling_global___MMLocalClass___declare_tables_to_c(recv) ((compiling___compiling_global___MMLocalClass___declare_tables_to_c_t)CALL((recv), (SFT_compiling___compiling_global[6] + 0)))
#define CALL_compiling___compiling_global___MMLocalClass___compile_tables_to_c(recv) ((compiling___compiling_global___MMLocalClass___compile_tables_to_c_t)CALL((recv), (SFT_compiling___compiling_global[6] + 1)))
#define CALL_compiling___compiling_global___MMMethod___compile_property_to_c(recv) ((compiling___compiling_global___MMMethod___compile_property_to_c_t)CALL((recv), (SFT_compiling___compiling_global[7] + 0)))
void compiling___compiling_global___Program___compile_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___Program___compile_tables_to_c_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_compiling___compiling_global___Program___compile_tables_to_c_1_0)(struct stack_frame_t *);
  void OC_compiling___compiling_global___Program___compile_tables_to_c_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_compiling___compiling_global___Program___compile_tables_to_c_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  void OC_compiling___compiling_global___Program___compile_tables_to_c_2(struct stack_frame_t *closctx, val_t p0);
  typedef void (*OC_compiling___compiling_global___Program___compile_tables_to_c_2_t)(struct stack_frame_t *closctx, val_t p0);
void compiling___compiling_global___Program___compile_main_part(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___Program___compile_main_part_t)(val_t p0, val_t p1);
val_t NEW_Program_program___Program___init(val_t p0, val_t p1);
void compiling___compiling_global___MMModule___declare_class_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMModule___declare_class_tables_to_c_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_compiling___compiling_global___MMModule___declare_class_tables_to_c_1_0)(struct stack_frame_t *);
  void OC_compiling___compiling_global___MMModule___declare_class_tables_to_c_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_compiling___compiling_global___MMModule___declare_class_tables_to_c_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
void compiling___compiling_global___MMModule___compile_mod_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMModule___compile_mod_to_c_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_compiling___compiling_global___MMModule___compile_mod_to_c_11_0)(struct stack_frame_t *);
  void OC_compiling___compiling_global___MMModule___compile_mod_to_c_11(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_compiling___compiling_global___MMModule___compile_mod_to_c_11_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
    typedef void (*CLOS_OC_compiling___compiling_global___MMModule___compile_mod_to_c_13_0)(struct stack_frame_t *);
    void OC_compiling___compiling_global___MMModule___compile_mod_to_c_13(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
    typedef void (*OC_compiling___compiling_global___MMModule___compile_mod_to_c_13_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
void compiling___compiling_global___MMModule___compile_local_table_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMModule___compile_local_table_to_c_t)(val_t p0, val_t p1);
val_t NEW_MMModule_metamodel___abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
void compiling___compiling_global___AbsTableElt___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___AbsTableElt___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableElt___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableElt___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___ModuleTableElt___value(val_t p0, val_t p1);
typedef val_t (*compiling___compiling_global___ModuleTableElt___value_t)(val_t p0, val_t p1);
val_t compiling___compiling_global___ModuleTableEltGroup___value(val_t p0, val_t p1);
typedef val_t (*compiling___compiling_global___ModuleTableEltGroup___value_t)(val_t p0, val_t p1);
void compiling___compiling_global___ModuleTableEltGroup___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___ModuleTableEltGroup___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_ModuleTableEltGroup_compiling___table_computation___ModuleTableEltGroup___init();
void compiling___compiling_global___TableEltMeth___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___TableEltMeth___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableEltMeth___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltMeth___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltMeth_compiling___table_computation___TableEltProp___init(val_t p0);
void compiling___compiling_global___TableEltSuper___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___TableEltSuper___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableEltSuper___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltSuper___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltSuper_compiling___table_computation___TableEltProp___init(val_t p0);
void compiling___compiling_global___TableEltVTClassColor___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___TableEltVTClassColor___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableEltVTClassColor___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltVTClassColor___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltVTClassColor_compiling___table_computation___TableEltProp___init(val_t p0);
void compiling___compiling_global___TableEltVTClassId___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___TableEltVTClassId___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableEltVTClassId___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltVTClassId___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltVTClassId_compiling___table_computation___TableEltProp___init(val_t p0);
void compiling___compiling_global___TableEltAttr___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___TableEltAttr___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_global___TableEltAttr___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltAttr___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltAttr_compiling___table_computation___TableEltProp___init(val_t p0);
val_t compiling___compiling_global___AbsTableEltClass___symbol(val_t p0);
typedef val_t (*compiling___compiling_global___AbsTableEltClass___symbol_t)(val_t p0);
void compiling___compiling_global___AbsTableEltClass___compile_macros(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_global___AbsTableEltClass___compile_macros_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_AbsTableEltClass_compiling___table_computation___AbsTableEltClass___init(val_t p0);
val_t compiling___compiling_global___TableEltClassId___symbol(val_t p0);
typedef val_t (*compiling___compiling_global___TableEltClassId___symbol_t)(val_t p0);
val_t compiling___compiling_global___TableEltClassId___value(val_t p0, val_t p1);
typedef val_t (*compiling___compiling_global___TableEltClassId___value_t)(val_t p0, val_t p1);
val_t NEW_TableEltClassId_compiling___table_computation___AbsTableEltClass___init(val_t p0);
val_t compiling___compiling_global___TableEltClassInitTable___symbol(val_t p0);
typedef val_t (*compiling___compiling_global___TableEltClassInitTable___symbol_t)(val_t p0);
val_t compiling___compiling_global___TableEltClassInitTable___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltClassInitTable___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassInitTable_compiling___table_computation___AbsTableEltClass___init(val_t p0);
val_t compiling___compiling_global___TableEltClassColor___symbol(val_t p0);
typedef val_t (*compiling___compiling_global___TableEltClassColor___symbol_t)(val_t p0);
val_t compiling___compiling_global___TableEltClassColor___value(val_t p0, val_t p1);
typedef val_t (*compiling___compiling_global___TableEltClassColor___value_t)(val_t p0, val_t p1);
val_t compiling___compiling_global___TableEltClassColor___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltClassColor___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassColor_compiling___table_computation___AbsTableEltClass___init(val_t p0);
val_t compiling___compiling_global___TableEltComposite___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltComposite___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltComposite_compiling___table_computation___TableEltComposite___init(val_t p0);
val_t compiling___compiling_global___TableEltClassSelfId___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltClassSelfId___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassSelfId_compiling___table_computation___TableEltClassSelfId___init();
val_t compiling___compiling_global___TableEltClassSelfName___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltClassSelfName___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassSelfName_compiling___table_computation___TableEltClassSelfName___init();
val_t compiling___compiling_global___TableEltClassObjectSize___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltClassObjectSize___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltClassObjectSize_compiling___table_computation___TableEltClassObjectSize___init();
val_t compiling___compiling_global___TableEltObjectId___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltObjectId___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltObjectId_compiling___table_computation___TableEltObjectId___init();
val_t compiling___compiling_global___TableEltVftPointer___compile_to_c(val_t p0, val_t p1, val_t p2);
typedef val_t (*compiling___compiling_global___TableEltVftPointer___compile_to_c_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_TableEltVftPointer_compiling___table_computation___TableEltVftPointer___init();
void compiling___compiling_global___MMLocalClass___declare_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMLocalClass___declare_tables_to_c_t)(val_t p0, val_t p1);
void compiling___compiling_global___MMLocalClass___compile_tables_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMLocalClass___compile_tables_to_c_t)(val_t p0, val_t p1);
      typedef void (*CLOS_OC_compiling___compiling_global___MMLocalClass___compile_tables_to_c_51_0)(struct stack_frame_t *);
      void OC_compiling___compiling_global___MMLocalClass___compile_tables_to_c_51(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
      typedef void (*OC_compiling___compiling_global___MMLocalClass___compile_tables_to_c_51_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_MMLocalClass_metamodel___abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
void compiling___compiling_global___MMMethod___compile_property_to_c(val_t p0, val_t p1);
typedef void (*compiling___compiling_global___MMMethod___compile_property_to_c_t)(val_t p0, val_t p1);
val_t NEW_MMMethod_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
#endif
