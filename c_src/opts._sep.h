/* This C header file is generated by NIT to compile modules and programs that requires ../lib/opts. */
#ifndef opts_sep
#define opts_sep
#include "standard._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_opts___Option[];

extern const classtable_elt_t VFT_opts___OptionText[];

extern const classtable_elt_t VFT_opts___OptionBool[];

extern const classtable_elt_t VFT_opts___OptionCount[];

extern const classtable_elt_t VFT_opts___OptionParameter[];

extern const classtable_elt_t VFT_opts___OptionString[];

extern const classtable_elt_t VFT_opts___OptionEnum[];

extern const classtable_elt_t VFT_opts___OptionInt[];

extern const classtable_elt_t VFT_opts___OptionArray[];

extern const classtable_elt_t VFT_opts___OptionContext[];
extern const char LOCATE_opts[];
extern const int SFT_opts[];
#define ID_opts___Option (SFT_opts[0])
#define COLOR_opts___Option (SFT_opts[1])
#define ATTR_opts___Option____names(recv) ATTR(recv, (SFT_opts[2] + 0))
#define ATTR_opts___Option____helptext(recv) ATTR(recv, (SFT_opts[2] + 1))
#define ATTR_opts___Option____errors(recv) ATTR(recv, (SFT_opts[2] + 2))
#define ATTR_opts___Option____mandatory(recv) ATTR(recv, (SFT_opts[2] + 3))
#define ATTR_opts___Option____read(recv) ATTR(recv, (SFT_opts[2] + 4))
#define ATTR_opts___Option____value(recv) ATTR(recv, (SFT_opts[2] + 5))
#define ATTR_opts___Option____default_value(recv) ATTR(recv, (SFT_opts[2] + 6))
#define INIT_TABLE_POS_opts___Option (SFT_opts[3] + 0)
#define CALL_opts___Option___names(recv) ((opts___Option___names_t)CALL((recv), (SFT_opts[3] + 1)))
#define VTID_opts___Option___VALUE(recv) (VAL2VFT(recv)[SFT_opts[3] + 2].i)
#define VTCOLOR_opts___Option___VALUE(recv) (VAL2VFT(recv)[SFT_opts[3] + 3].i)
#define CALL_opts___Option___helptext(recv) ((opts___Option___helptext_t)CALL((recv), (SFT_opts[3] + 4)))
#define CALL_opts___Option___errors(recv) ((opts___Option___errors_t)CALL((recv), (SFT_opts[3] + 5)))
#define CALL_opts___Option___mandatory(recv) ((opts___Option___mandatory_t)CALL((recv), (SFT_opts[3] + 6)))
#define CALL_opts___Option___mandatory__eq(recv) ((opts___Option___mandatory__eq_t)CALL((recv), (SFT_opts[3] + 7)))
#define CALL_opts___Option___read(recv) ((opts___Option___read_t)CALL((recv), (SFT_opts[3] + 8)))
#define CALL_opts___Option___value__eq(recv) ((opts___Option___value__eq_t)CALL((recv), (SFT_opts[3] + 9)))
#define CALL_opts___Option___value(recv) ((opts___Option___value_t)CALL((recv), (SFT_opts[3] + 10)))
#define CALL_opts___Option___default_value(recv) ((opts___Option___default_value_t)CALL((recv), (SFT_opts[3] + 11)))
#define CALL_opts___Option___default_value__eq(recv) ((opts___Option___default_value__eq_t)CALL((recv), (SFT_opts[3] + 12)))
#define CALL_opts___Option___init_opt(recv) ((opts___Option___init_opt_t)CALL((recv), (SFT_opts[3] + 13)))
#define CALL_opts___Option___add_aliases(recv) ((opts___Option___add_aliases_t)CALL((recv), (SFT_opts[3] + 14)))
#define CALL_opts___Option___pretty(recv) ((opts___Option___pretty_t)CALL((recv), (SFT_opts[3] + 15)))
#define CALL_opts___Option___pretty_default(recv) ((opts___Option___pretty_default_t)CALL((recv), (SFT_opts[3] + 16)))
#define CALL_opts___Option___read_param(recv) ((opts___Option___read_param_t)CALL((recv), (SFT_opts[3] + 17)))
#define ID_opts___OptionText (SFT_opts[4])
#define COLOR_opts___OptionText (SFT_opts[5])
#define INIT_TABLE_POS_opts___OptionText (SFT_opts[6] + 0)
#define CALL_opts___OptionText___init(recv) ((opts___OptionText___init_t)CALL((recv), (SFT_opts[6] + 1)))
#define ID_opts___OptionBool (SFT_opts[7])
#define COLOR_opts___OptionBool (SFT_opts[8])
#define INIT_TABLE_POS_opts___OptionBool (SFT_opts[9] + 0)
#define CALL_opts___OptionBool___init(recv) ((opts___OptionBool___init_t)CALL((recv), (SFT_opts[9] + 1)))
#define CALL_SUPER_opts___OptionBool___read_param(recv) ((opts___OptionBool___read_param_t)CALL((recv), (SFT_opts[9] + 2)))
#define ID_opts___OptionCount (SFT_opts[10])
#define COLOR_opts___OptionCount (SFT_opts[11])
#define INIT_TABLE_POS_opts___OptionCount (SFT_opts[12] + 0)
#define CALL_opts___OptionCount___init(recv) ((opts___OptionCount___init_t)CALL((recv), (SFT_opts[12] + 1)))
#define CALL_SUPER_opts___OptionCount___read_param(recv) ((opts___OptionCount___read_param_t)CALL((recv), (SFT_opts[12] + 2)))
#define ID_opts___OptionParameter (SFT_opts[13])
#define COLOR_opts___OptionParameter (SFT_opts[14])
#define ATTR_opts___OptionParameter____parameter_mandatory(recv) ATTR(recv, (SFT_opts[15] + 0))
#define INIT_TABLE_POS_opts___OptionParameter (SFT_opts[16] + 0)
#define CALL_opts___OptionParameter___convert(recv) ((opts___OptionParameter___convert_t)CALL((recv), (SFT_opts[16] + 1)))
#define CALL_opts___OptionParameter___parameter_mandatory(recv) ((opts___OptionParameter___parameter_mandatory_t)CALL((recv), (SFT_opts[16] + 2)))
#define CALL_opts___OptionParameter___parameter_mandatory__eq(recv) ((opts___OptionParameter___parameter_mandatory__eq_t)CALL((recv), (SFT_opts[16] + 3)))
#define CALL_SUPER_opts___OptionParameter___read_param(recv) ((opts___OptionParameter___read_param_t)CALL((recv), (SFT_opts[16] + 4)))
#define CALL_opts___OptionParameter___init_opt(recv) ((opts___OptionParameter___init_opt_t)CALL((recv), (SFT_opts[16] + 5)))
#define ID_opts___OptionString (SFT_opts[17])
#define COLOR_opts___OptionString (SFT_opts[18])
#define INIT_TABLE_POS_opts___OptionString (SFT_opts[19] + 0)
#define CALL_opts___OptionString___init(recv) ((opts___OptionString___init_t)CALL((recv), (SFT_opts[19] + 1)))
#define ID_opts___OptionEnum (SFT_opts[20])
#define COLOR_opts___OptionEnum (SFT_opts[21])
#define ATTR_opts___OptionEnum____values(recv) ATTR(recv, (SFT_opts[22] + 0))
#define INIT_TABLE_POS_opts___OptionEnum (SFT_opts[23] + 0)
#define CALL_opts___OptionEnum___init(recv) ((opts___OptionEnum___init_t)CALL((recv), (SFT_opts[23] + 1)))
#define CALL_opts___OptionEnum___value_name(recv) ((opts___OptionEnum___value_name_t)CALL((recv), (SFT_opts[23] + 2)))
#define ID_opts___OptionInt (SFT_opts[24])
#define COLOR_opts___OptionInt (SFT_opts[25])
#define INIT_TABLE_POS_opts___OptionInt (SFT_opts[26] + 0)
#define CALL_opts___OptionInt___init(recv) ((opts___OptionInt___init_t)CALL((recv), (SFT_opts[26] + 1)))
#define ID_opts___OptionArray (SFT_opts[27])
#define COLOR_opts___OptionArray (SFT_opts[28])
#define ATTR_opts___OptionArray____values(recv) ATTR(recv, (SFT_opts[29] + 0))
#define INIT_TABLE_POS_opts___OptionArray (SFT_opts[30] + 0)
#define CALL_opts___OptionArray___init(recv) ((opts___OptionArray___init_t)CALL((recv), (SFT_opts[30] + 1)))
#define ID_opts___OptionContext (SFT_opts[31])
#define COLOR_opts___OptionContext (SFT_opts[32])
#define ATTR_opts___OptionContext____options(recv) ATTR(recv, (SFT_opts[33] + 0))
#define ATTR_opts___OptionContext____rest(recv) ATTR(recv, (SFT_opts[33] + 1))
#define ATTR_opts___OptionContext____errors(recv) ATTR(recv, (SFT_opts[33] + 2))
#define ATTR_opts___OptionContext____optmap(recv) ATTR(recv, (SFT_opts[33] + 3))
#define INIT_TABLE_POS_opts___OptionContext (SFT_opts[34] + 0)
#define CALL_opts___OptionContext___options(recv) ((opts___OptionContext___options_t)CALL((recv), (SFT_opts[34] + 1)))
#define CALL_opts___OptionContext___rest(recv) ((opts___OptionContext___rest_t)CALL((recv), (SFT_opts[34] + 2)))
#define CALL_opts___OptionContext___errors(recv) ((opts___OptionContext___errors_t)CALL((recv), (SFT_opts[34] + 3)))
#define CALL_opts___OptionContext___usage(recv) ((opts___OptionContext___usage_t)CALL((recv), (SFT_opts[34] + 4)))
#define CALL_opts___OptionContext___parse(recv) ((opts___OptionContext___parse_t)CALL((recv), (SFT_opts[34] + 5)))
#define CALL_opts___OptionContext___parse_intern(recv) ((opts___OptionContext___parse_intern_t)CALL((recv), (SFT_opts[34] + 6)))
#define CALL_opts___OptionContext___add_option(recv) ((opts___OptionContext___add_option_t)CALL((recv), (SFT_opts[34] + 7)))
#define CALL_opts___OptionContext___init(recv) ((opts___OptionContext___init_t)CALL((recv), (SFT_opts[34] + 8)))
#define CALL_opts___OptionContext___build(recv) ((opts___OptionContext___build_t)CALL((recv), (SFT_opts[34] + 9)))
#define CALL_opts___OptionContext___get_errors(recv) ((opts___OptionContext___get_errors_t)CALL((recv), (SFT_opts[34] + 10)))
val_t opts___Option___names(val_t p0);
typedef val_t (*opts___Option___names_t)(val_t p0);
val_t opts___Option___helptext(val_t p0);
typedef val_t (*opts___Option___helptext_t)(val_t p0);
val_t opts___Option___errors(val_t p0);
typedef val_t (*opts___Option___errors_t)(val_t p0);
val_t opts___Option___mandatory(val_t p0);
typedef val_t (*opts___Option___mandatory_t)(val_t p0);
void opts___Option___mandatory__eq(val_t p0, val_t p1);
typedef void (*opts___Option___mandatory__eq_t)(val_t p0, val_t p1);
val_t opts___Option___read(val_t p0);
typedef val_t (*opts___Option___read_t)(val_t p0);
void opts___Option___value__eq(val_t p0, val_t p1);
typedef void (*opts___Option___value__eq_t)(val_t p0, val_t p1);
val_t opts___Option___value(val_t p0);
typedef val_t (*opts___Option___value_t)(val_t p0);
val_t opts___Option___default_value(val_t p0);
typedef val_t (*opts___Option___default_value_t)(val_t p0);
void opts___Option___default_value__eq(val_t p0, val_t p1);
typedef void (*opts___Option___default_value__eq_t)(val_t p0, val_t p1);
void opts___Option___init_opt(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*opts___Option___init_opt_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_Option_opts___Option___init_opt(val_t p0, val_t p1, val_t p2);
void opts___Option___add_aliases(val_t p0, val_t p1);
typedef void (*opts___Option___add_aliases_t)(val_t p0, val_t p1);
val_t opts___Option___to_s(val_t p0);
typedef val_t (*opts___Option___to_s_t)(val_t p0);
val_t opts___Option___pretty(val_t p0, val_t p1);
typedef val_t (*opts___Option___pretty_t)(val_t p0, val_t p1);
val_t opts___Option___pretty_default(val_t p0);
typedef val_t (*opts___Option___pretty_default_t)(val_t p0);
void opts___Option___read_param(val_t p0, val_t p1);
typedef void (*opts___Option___read_param_t)(val_t p0, val_t p1);
void opts___OptionText___init(val_t p0, val_t p1, int* init_table);
typedef void (*opts___OptionText___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_OptionText_opts___OptionText___init(val_t p0);
val_t opts___OptionText___pretty(val_t p0, val_t p1);
typedef val_t (*opts___OptionText___pretty_t)(val_t p0, val_t p1);
val_t opts___OptionText___to_s(val_t p0);
typedef val_t (*opts___OptionText___to_s_t)(val_t p0);
void opts___OptionBool___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*opts___OptionBool___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_OptionBool_opts___OptionBool___init(val_t p0, val_t p1);
void opts___OptionBool___read_param(val_t p0, val_t p1);
typedef void (*opts___OptionBool___read_param_t)(val_t p0, val_t p1);
void opts___OptionCount___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*opts___OptionCount___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_OptionCount_opts___OptionCount___init(val_t p0, val_t p1);
void opts___OptionCount___read_param(val_t p0, val_t p1);
typedef void (*opts___OptionCount___read_param_t)(val_t p0, val_t p1);
val_t opts___OptionParameter___convert(val_t p0, val_t p1);
typedef val_t (*opts___OptionParameter___convert_t)(val_t p0, val_t p1);
val_t opts___OptionParameter___parameter_mandatory(val_t p0);
typedef val_t (*opts___OptionParameter___parameter_mandatory_t)(val_t p0);
void opts___OptionParameter___parameter_mandatory__eq(val_t p0, val_t p1);
typedef void (*opts___OptionParameter___parameter_mandatory__eq_t)(val_t p0, val_t p1);
void opts___OptionParameter___read_param(val_t p0, val_t p1);
typedef void (*opts___OptionParameter___read_param_t)(val_t p0, val_t p1);
void opts___OptionParameter___init_opt(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*opts___OptionParameter___init_opt_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_OptionParameter_opts___OptionParameter___init_opt(val_t p0, val_t p1, val_t p2);
void opts___OptionString___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*opts___OptionString___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_OptionString_opts___OptionString___init(val_t p0, val_t p1);
val_t opts___OptionString___convert(val_t p0, val_t p1);
typedef val_t (*opts___OptionString___convert_t)(val_t p0, val_t p1);
void opts___OptionEnum___init(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, int* init_table);
typedef void (*opts___OptionEnum___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, int* init_table);
val_t NEW_OptionEnum_opts___OptionEnum___init(val_t p0, val_t p1, val_t p2, val_t p3);
val_t opts___OptionEnum___convert(val_t p0, val_t p1);
typedef val_t (*opts___OptionEnum___convert_t)(val_t p0, val_t p1);
val_t opts___OptionEnum___value_name(val_t p0);
typedef val_t (*opts___OptionEnum___value_name_t)(val_t p0);
val_t opts___OptionEnum___pretty_default(val_t p0);
typedef val_t (*opts___OptionEnum___pretty_default_t)(val_t p0);
void opts___OptionInt___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*opts___OptionInt___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_OptionInt_opts___OptionInt___init(val_t p0, val_t p1, val_t p2);
val_t opts___OptionInt___convert(val_t p0, val_t p1);
typedef val_t (*opts___OptionInt___convert_t)(val_t p0, val_t p1);
void opts___OptionArray___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*opts___OptionArray___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_OptionArray_opts___OptionArray___init(val_t p0, val_t p1);
val_t opts___OptionArray___convert(val_t p0, val_t p1);
typedef val_t (*opts___OptionArray___convert_t)(val_t p0, val_t p1);
val_t opts___OptionContext___options(val_t p0);
typedef val_t (*opts___OptionContext___options_t)(val_t p0);
val_t opts___OptionContext___rest(val_t p0);
typedef val_t (*opts___OptionContext___rest_t)(val_t p0);
val_t opts___OptionContext___errors(val_t p0);
typedef val_t (*opts___OptionContext___errors_t)(val_t p0);
void opts___OptionContext___usage(val_t p0);
typedef void (*opts___OptionContext___usage_t)(val_t p0);
void opts___OptionContext___parse(val_t p0, val_t p1);
typedef void (*opts___OptionContext___parse_t)(val_t p0, val_t p1);
void opts___OptionContext___parse_intern(val_t p0, val_t p1);
typedef void (*opts___OptionContext___parse_intern_t)(val_t p0, val_t p1);
void opts___OptionContext___add_option(val_t p0, val_t p1);
typedef void (*opts___OptionContext___add_option_t)(val_t p0, val_t p1);
void opts___OptionContext___init(val_t p0, int* init_table);
typedef void (*opts___OptionContext___init_t)(val_t p0, int* init_table);
val_t NEW_OptionContext_opts___OptionContext___init();
void opts___OptionContext___build(val_t p0);
typedef void (*opts___OptionContext___build_t)(val_t p0);
val_t opts___OptionContext___get_errors(val_t p0);
typedef val_t (*opts___OptionContext___get_errors_t)(val_t p0);
#endif
