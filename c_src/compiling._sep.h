/* This C header file is generated by NIT to compile modules and programs that requires ./compiling/compiling. */
#ifndef compiling_sep
#define compiling_sep
#include "compiling___icode_generator._sep.h"
#include "compiling___compiling_global._sep.h"
#include <nit_common.h>
extern const char LOCATE_compiling[];
extern const int SFT_compiling[];
#define ATTR_compiling___Program____output_format(recv) ATTR(recv, (SFT_compiling[0] + 0))
#define CALL_compiling___Program___output_format(recv) ((compiling___Program___output_format_t)CALL((recv), (SFT_compiling[1] + 0)))
#define CALL_compiling___Program___output_format__eq(recv) ((compiling___Program___output_format__eq_t)CALL((recv), (SFT_compiling[1] + 1)))
#define CALL_compiling___Program___compile_prog(recv) ((compiling___Program___compile_prog_t)CALL((recv), (SFT_compiling[1] + 2)))
#define CALL_compiling___Program___compile_prog_to_c(recv) ((compiling___Program___compile_prog_to_c_t)CALL((recv), (SFT_compiling[1] + 3)))
#define CALL_compiling___Program___compile_main(recv) ((compiling___Program___compile_main_t)CALL((recv), (SFT_compiling[1] + 4)))
#define CALL_compiling___MMModule___compile_separate_module(recv) ((compiling___MMModule___compile_separate_module_t)CALL((recv), (SFT_compiling[2] + 0)))
val_t compiling___Program___output_format(val_t p0);
typedef val_t (*compiling___Program___output_format_t)(val_t p0);
void compiling___Program___output_format__eq(val_t p0, val_t p1);
typedef void (*compiling___Program___output_format__eq_t)(val_t p0, val_t p1);
void compiling___Program___compile_prog(val_t p0);
typedef void (*compiling___Program___compile_prog_t)(val_t p0);
    void OC_compiling___Program___compile_prog_2(struct stack_frame_t *closctx, val_t p0, val_t p1);
    typedef void (*OC_compiling___Program___compile_prog_2_t)(struct stack_frame_t *closctx, val_t p0, val_t p1);
void compiling___Program___compile_prog_to_c(val_t p0);
typedef void (*compiling___Program___compile_prog_to_c_t)(val_t p0);
  typedef void (*CLOS_OC_compiling___Program___compile_prog_to_c_5_0)(struct stack_frame_t *);
  void OC_compiling___Program___compile_prog_to_c_5(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_compiling___Program___compile_prog_to_c_5_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
void compiling___Program___compile_main(val_t p0, val_t p1);
typedef void (*compiling___Program___compile_main_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_compiling___Program___compile_main_7_0)(struct stack_frame_t *);
  void OC_compiling___Program___compile_main_7(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_compiling___Program___compile_main_7_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_Program_program___Program___init(val_t p0, val_t p1);
void compiling___MMModule___compile_separate_module(val_t p0, val_t p1);
typedef void (*compiling___MMModule___compile_separate_module_t)(val_t p0, val_t p1);
val_t NEW_MMModule_metamodel___abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
#endif
