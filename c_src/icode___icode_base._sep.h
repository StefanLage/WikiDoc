/* This C header file is generated by NIT to compile modules and programs that requires ./icode/icode_base. */
#ifndef icode___icode_base_sep
#define icode___icode_base_sep
#include "metamodel._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_icode___icode_base___IRegister[];

extern const classtable_elt_t VFT_icode___icode_base___IEscapeMark[];

extern const classtable_elt_t VFT_icode___icode_base___IClosureDecl[];

extern const classtable_elt_t VFT_icode___icode_base___IRoutine[];

extern const classtable_elt_t VFT_icode___icode_base___IClosureDef[];

extern const classtable_elt_t VFT_icode___icode_base___ICode[];

extern const classtable_elt_t VFT_icode___icode_base___ICode0[];

extern const classtable_elt_t VFT_icode___icode_base___ICode1[];

extern const classtable_elt_t VFT_icode___icode_base___ICode2[];

extern const classtable_elt_t VFT_icode___icode_base___ICodeN[];

extern const classtable_elt_t VFT_icode___icode_base___ISeq[];

extern const classtable_elt_t VFT_icode___icode_base___ILoop[];

extern const classtable_elt_t VFT_icode___icode_base___IIf[];

extern const classtable_elt_t VFT_icode___icode_base___IEscape[];

extern const classtable_elt_t VFT_icode___icode_base___IAbort[];

extern const classtable_elt_t VFT_icode___icode_base___IAbsCall[];

extern const classtable_elt_t VFT_icode___icode_base___ICall[];

extern const classtable_elt_t VFT_icode___icode_base___ISuper[];

extern const classtable_elt_t VFT_icode___icode_base___INew[];

extern const classtable_elt_t VFT_icode___icode_base___IAllocateInstance[];

extern const classtable_elt_t VFT_icode___icode_base___IStaticCall[];

extern const classtable_elt_t VFT_icode___icode_base___ICheckInstance[];

extern const classtable_elt_t VFT_icode___icode_base___IInitAttributes[];

extern const classtable_elt_t VFT_icode___icode_base___IClosCall[];

extern const classtable_elt_t VFT_icode___icode_base___INative[];

extern const classtable_elt_t VFT_icode___icode_base___IIntValue[];

extern const classtable_elt_t VFT_icode___icode_base___IBoolValue[];

extern const classtable_elt_t VFT_icode___icode_base___IStringValue[];

extern const classtable_elt_t VFT_icode___icode_base___IFloatValue[];

extern const classtable_elt_t VFT_icode___icode_base___ICharValue[];

extern const classtable_elt_t VFT_icode___icode_base___IMove[];

extern const classtable_elt_t VFT_icode___icode_base___IAttrRead[];

extern const classtable_elt_t VFT_icode___icode_base___IAttrWrite[];

extern const classtable_elt_t VFT_icode___icode_base___IAttrIsset[];

extern const classtable_elt_t VFT_icode___icode_base___ITypeCheck[];

extern const classtable_elt_t VFT_icode___icode_base___IIs[];

extern const classtable_elt_t VFT_icode___icode_base___INot[];

extern const classtable_elt_t VFT_icode___icode_base___IOnce[];

extern const classtable_elt_t VFT_icode___icode_base___IHasClos[];
extern const char LOCATE_icode___icode_base[];
extern const int SFT_icode___icode_base[];
#define ID_icode___icode_base___IRegister (SFT_icode___icode_base[0])
#define COLOR_icode___icode_base___IRegister (SFT_icode___icode_base[1])
#define ATTR_icode___icode_base___IRegister____stype(recv) ATTR(recv, (SFT_icode___icode_base[2] + 0))
#define INIT_TABLE_POS_icode___icode_base___IRegister (SFT_icode___icode_base[3] + 0)
#define CALL_icode___icode_base___IRegister___stype(recv) ((icode___icode_base___IRegister___stype_t)CALL((recv), (SFT_icode___icode_base[3] + 1)))
#define CALL_icode___icode_base___IRegister___init(recv) ((icode___icode_base___IRegister___init_t)CALL((recv), (SFT_icode___icode_base[3] + 2)))
#define ID_icode___icode_base___IEscapeMark (SFT_icode___icode_base[4])
#define COLOR_icode___icode_base___IEscapeMark (SFT_icode___icode_base[5])
#define INIT_TABLE_POS_icode___icode_base___IEscapeMark (SFT_icode___icode_base[6] + 0)
#define CALL_icode___icode_base___IEscapeMark___init(recv) ((icode___icode_base___IEscapeMark___init_t)CALL((recv), (SFT_icode___icode_base[6] + 1)))
#define ID_icode___icode_base___IClosureDecl (SFT_icode___icode_base[7])
#define COLOR_icode___icode_base___IClosureDecl (SFT_icode___icode_base[8])
#define ATTR_icode___icode_base___IClosureDecl____closure(recv) ATTR(recv, (SFT_icode___icode_base[9] + 0))
#define ATTR_icode___icode_base___IClosureDecl____default(recv) ATTR(recv, (SFT_icode___icode_base[9] + 1))
#define INIT_TABLE_POS_icode___icode_base___IClosureDecl (SFT_icode___icode_base[10] + 0)
#define CALL_icode___icode_base___IClosureDecl___closure(recv) ((icode___icode_base___IClosureDecl___closure_t)CALL((recv), (SFT_icode___icode_base[10] + 1)))
#define CALL_icode___icode_base___IClosureDecl___default(recv) ((icode___icode_base___IClosureDecl___default_t)CALL((recv), (SFT_icode___icode_base[10] + 2)))
#define CALL_icode___icode_base___IClosureDecl___default__eq(recv) ((icode___icode_base___IClosureDecl___default__eq_t)CALL((recv), (SFT_icode___icode_base[10] + 3)))
#define CALL_icode___icode_base___IClosureDecl___init(recv) ((icode___icode_base___IClosureDecl___init_t)CALL((recv), (SFT_icode___icode_base[10] + 4)))
#define ID_icode___icode_base___IRoutine (SFT_icode___icode_base[11])
#define COLOR_icode___icode_base___IRoutine (SFT_icode___icode_base[12])
#define ATTR_icode___icode_base___IRoutine____params(recv) ATTR(recv, (SFT_icode___icode_base[13] + 0))
#define ATTR_icode___icode_base___IRoutine____closure_decls(recv) ATTR(recv, (SFT_icode___icode_base[13] + 1))
#define ATTR_icode___icode_base___IRoutine____registers(recv) ATTR(recv, (SFT_icode___icode_base[13] + 2))
#define ATTR_icode___icode_base___IRoutine____result(recv) ATTR(recv, (SFT_icode___icode_base[13] + 3))
#define ATTR_icode___icode_base___IRoutine____escape_marks(recv) ATTR(recv, (SFT_icode___icode_base[13] + 4))
#define ATTR_icode___icode_base___IRoutine____body(recv) ATTR(recv, (SFT_icode___icode_base[13] + 5))
#define ATTR_icode___icode_base___IRoutine____location(recv) ATTR(recv, (SFT_icode___icode_base[13] + 6))
#define INIT_TABLE_POS_icode___icode_base___IRoutine (SFT_icode___icode_base[14] + 0)
#define CALL_icode___icode_base___IRoutine___params(recv) ((icode___icode_base___IRoutine___params_t)CALL((recv), (SFT_icode___icode_base[14] + 1)))
#define CALL_icode___icode_base___IRoutine___closure_decls(recv) ((icode___icode_base___IRoutine___closure_decls_t)CALL((recv), (SFT_icode___icode_base[14] + 2)))
#define CALL_icode___icode_base___IRoutine___closure_decls__eq(recv) ((icode___icode_base___IRoutine___closure_decls__eq_t)CALL((recv), (SFT_icode___icode_base[14] + 3)))
#define CALL_icode___icode_base___IRoutine___registers(recv) ((icode___icode_base___IRoutine___registers_t)CALL((recv), (SFT_icode___icode_base[14] + 4)))
#define CALL_icode___icode_base___IRoutine___result(recv) ((icode___icode_base___IRoutine___result_t)CALL((recv), (SFT_icode___icode_base[14] + 5)))
#define CALL_icode___icode_base___IRoutine___escape_marks(recv) ((icode___icode_base___IRoutine___escape_marks_t)CALL((recv), (SFT_icode___icode_base[14] + 6)))
#define CALL_icode___icode_base___IRoutine___body(recv) ((icode___icode_base___IRoutine___body_t)CALL((recv), (SFT_icode___icode_base[14] + 7)))
#define CALL_icode___icode_base___IRoutine___location(recv) ((icode___icode_base___IRoutine___location_t)CALL((recv), (SFT_icode___icode_base[14] + 8)))
#define CALL_icode___icode_base___IRoutine___location__eq(recv) ((icode___icode_base___IRoutine___location__eq_t)CALL((recv), (SFT_icode___icode_base[14] + 9)))
#define CALL_icode___icode_base___IRoutine___init(recv) ((icode___icode_base___IRoutine___init_t)CALL((recv), (SFT_icode___icode_base[14] + 10)))
#define ID_icode___icode_base___IClosureDef (SFT_icode___icode_base[15])
#define COLOR_icode___icode_base___IClosureDef (SFT_icode___icode_base[16])
#define INIT_TABLE_POS_icode___icode_base___IClosureDef (SFT_icode___icode_base[17] + 0)
#define CALL_icode___icode_base___IClosureDef___init(recv) ((icode___icode_base___IClosureDef___init_t)CALL((recv), (SFT_icode___icode_base[17] + 1)))
#define ID_icode___icode_base___ICode (SFT_icode___icode_base[18])
#define COLOR_icode___icode_base___ICode (SFT_icode___icode_base[19])
#define ATTR_icode___icode_base___ICode____result(recv) ATTR(recv, (SFT_icode___icode_base[20] + 0))
#define ATTR_icode___icode_base___ICode____location(recv) ATTR(recv, (SFT_icode___icode_base[20] + 1))
#define INIT_TABLE_POS_icode___icode_base___ICode (SFT_icode___icode_base[21] + 0)
#define CALL_icode___icode_base___ICode___arity(recv) ((icode___icode_base___ICode___arity_t)CALL((recv), (SFT_icode___icode_base[21] + 1)))
#define CALL_icode___icode_base___ICode___result(recv) ((icode___icode_base___ICode___result_t)CALL((recv), (SFT_icode___icode_base[21] + 2)))
#define CALL_icode___icode_base___ICode___result__eq(recv) ((icode___icode_base___ICode___result__eq_t)CALL((recv), (SFT_icode___icode_base[21] + 3)))
#define CALL_icode___icode_base___ICode___location(recv) ((icode___icode_base___ICode___location_t)CALL((recv), (SFT_icode___icode_base[21] + 4)))
#define CALL_icode___icode_base___ICode___location__eq(recv) ((icode___icode_base___ICode___location__eq_t)CALL((recv), (SFT_icode___icode_base[21] + 5)))
#define CALL_icode___icode_base___ICode___is_pure(recv) ((icode___icode_base___ICode___is_pure_t)CALL((recv), (SFT_icode___icode_base[21] + 6)))
#define CALL_icode___icode_base___ICode___init(recv) ((icode___icode_base___ICode___init_t)CALL((recv), (SFT_icode___icode_base[21] + 7)))
#define ID_icode___icode_base___ICode0 (SFT_icode___icode_base[22])
#define COLOR_icode___icode_base___ICode0 (SFT_icode___icode_base[23])
#define INIT_TABLE_POS_icode___icode_base___ICode0 (SFT_icode___icode_base[24] + 0)
#define ID_icode___icode_base___ICode1 (SFT_icode___icode_base[25])
#define COLOR_icode___icode_base___ICode1 (SFT_icode___icode_base[26])
#define ATTR_icode___icode_base___ICode1____expr(recv) ATTR(recv, (SFT_icode___icode_base[27] + 0))
#define INIT_TABLE_POS_icode___icode_base___ICode1 (SFT_icode___icode_base[28] + 0)
#define CALL_icode___icode_base___ICode1___expr(recv) ((icode___icode_base___ICode1___expr_t)CALL((recv), (SFT_icode___icode_base[28] + 1)))
#define CALL_icode___icode_base___ICode1___init(recv) ((icode___icode_base___ICode1___init_t)CALL((recv), (SFT_icode___icode_base[28] + 2)))
#define ID_icode___icode_base___ICode2 (SFT_icode___icode_base[29])
#define COLOR_icode___icode_base___ICode2 (SFT_icode___icode_base[30])
#define ATTR_icode___icode_base___ICode2____expr1(recv) ATTR(recv, (SFT_icode___icode_base[31] + 0))
#define ATTR_icode___icode_base___ICode2____expr2(recv) ATTR(recv, (SFT_icode___icode_base[31] + 1))
#define INIT_TABLE_POS_icode___icode_base___ICode2 (SFT_icode___icode_base[32] + 0)
#define CALL_icode___icode_base___ICode2___expr1(recv) ((icode___icode_base___ICode2___expr1_t)CALL((recv), (SFT_icode___icode_base[32] + 1)))
#define CALL_icode___icode_base___ICode2___expr2(recv) ((icode___icode_base___ICode2___expr2_t)CALL((recv), (SFT_icode___icode_base[32] + 2)))
#define CALL_icode___icode_base___ICode2___init(recv) ((icode___icode_base___ICode2___init_t)CALL((recv), (SFT_icode___icode_base[32] + 3)))
#define ID_icode___icode_base___ICodeN (SFT_icode___icode_base[33])
#define COLOR_icode___icode_base___ICodeN (SFT_icode___icode_base[34])
#define ATTR_icode___icode_base___ICodeN____exprs(recv) ATTR(recv, (SFT_icode___icode_base[35] + 0))
#define ATTR_icode___icode_base___ICodeN____closure_defs(recv) ATTR(recv, (SFT_icode___icode_base[35] + 1))
#define INIT_TABLE_POS_icode___icode_base___ICodeN (SFT_icode___icode_base[36] + 0)
#define CALL_icode___icode_base___ICodeN___exprs(recv) ((icode___icode_base___ICodeN___exprs_t)CALL((recv), (SFT_icode___icode_base[36] + 1)))
#define CALL_icode___icode_base___ICodeN___closure_defs(recv) ((icode___icode_base___ICodeN___closure_defs_t)CALL((recv), (SFT_icode___icode_base[36] + 2)))
#define CALL_icode___icode_base___ICodeN___closure_defs__eq(recv) ((icode___icode_base___ICodeN___closure_defs__eq_t)CALL((recv), (SFT_icode___icode_base[36] + 3)))
#define CALL_icode___icode_base___ICodeN___init(recv) ((icode___icode_base___ICodeN___init_t)CALL((recv), (SFT_icode___icode_base[36] + 4)))
#define ID_icode___icode_base___ISeq (SFT_icode___icode_base[37])
#define COLOR_icode___icode_base___ISeq (SFT_icode___icode_base[38])
#define ATTR_icode___icode_base___ISeq____icodes(recv) ATTR(recv, (SFT_icode___icode_base[39] + 0))
#define ATTR_icode___icode_base___ISeq____iescape_mark(recv) ATTR(recv, (SFT_icode___icode_base[39] + 1))
#define INIT_TABLE_POS_icode___icode_base___ISeq (SFT_icode___icode_base[40] + 0)
#define CALL_icode___icode_base___ISeq___icodes(recv) ((icode___icode_base___ISeq___icodes_t)CALL((recv), (SFT_icode___icode_base[40] + 1)))
#define CALL_icode___icode_base___ISeq___iescape_mark(recv) ((icode___icode_base___ISeq___iescape_mark_t)CALL((recv), (SFT_icode___icode_base[40] + 2)))
#define CALL_icode___icode_base___ISeq___iescape_mark__eq(recv) ((icode___icode_base___ISeq___iescape_mark__eq_t)CALL((recv), (SFT_icode___icode_base[40] + 3)))
#define CALL_icode___icode_base___ISeq___init(recv) ((icode___icode_base___ISeq___init_t)CALL((recv), (SFT_icode___icode_base[40] + 4)))
#define ID_icode___icode_base___ILoop (SFT_icode___icode_base[41])
#define COLOR_icode___icode_base___ILoop (SFT_icode___icode_base[42])
#define INIT_TABLE_POS_icode___icode_base___ILoop (SFT_icode___icode_base[43] + 0)
#define CALL_icode___icode_base___ILoop___init(recv) ((icode___icode_base___ILoop___init_t)CALL((recv), (SFT_icode___icode_base[43] + 1)))
#define ID_icode___icode_base___IIf (SFT_icode___icode_base[44])
#define COLOR_icode___icode_base___IIf (SFT_icode___icode_base[45])
#define ATTR_icode___icode_base___IIf____then_seq(recv) ATTR(recv, (SFT_icode___icode_base[46] + 0))
#define ATTR_icode___icode_base___IIf____else_seq(recv) ATTR(recv, (SFT_icode___icode_base[46] + 1))
#define INIT_TABLE_POS_icode___icode_base___IIf (SFT_icode___icode_base[47] + 0)
#define CALL_icode___icode_base___IIf___then_seq(recv) ((icode___icode_base___IIf___then_seq_t)CALL((recv), (SFT_icode___icode_base[47] + 1)))
#define CALL_icode___icode_base___IIf___else_seq(recv) ((icode___icode_base___IIf___else_seq_t)CALL((recv), (SFT_icode___icode_base[47] + 2)))
#define CALL_icode___icode_base___IIf___init(recv) ((icode___icode_base___IIf___init_t)CALL((recv), (SFT_icode___icode_base[47] + 3)))
#define ID_icode___icode_base___IEscape (SFT_icode___icode_base[48])
#define COLOR_icode___icode_base___IEscape (SFT_icode___icode_base[49])
#define ATTR_icode___icode_base___IEscape____iescape_mark(recv) ATTR(recv, (SFT_icode___icode_base[50] + 0))
#define INIT_TABLE_POS_icode___icode_base___IEscape (SFT_icode___icode_base[51] + 0)
#define CALL_icode___icode_base___IEscape___iescape_mark(recv) ((icode___icode_base___IEscape___iescape_mark_t)CALL((recv), (SFT_icode___icode_base[51] + 1)))
#define CALL_icode___icode_base___IEscape___init(recv) ((icode___icode_base___IEscape___init_t)CALL((recv), (SFT_icode___icode_base[51] + 2)))
#define ID_icode___icode_base___IAbort (SFT_icode___icode_base[52])
#define COLOR_icode___icode_base___IAbort (SFT_icode___icode_base[53])
#define ATTR_icode___icode_base___IAbort____texts(recv) ATTR(recv, (SFT_icode___icode_base[54] + 0))
#define ATTR_icode___icode_base___IAbort____module_location(recv) ATTR(recv, (SFT_icode___icode_base[54] + 1))
#define INIT_TABLE_POS_icode___icode_base___IAbort (SFT_icode___icode_base[55] + 0)
#define CALL_icode___icode_base___IAbort___texts(recv) ((icode___icode_base___IAbort___texts_t)CALL((recv), (SFT_icode___icode_base[55] + 1)))
#define CALL_icode___icode_base___IAbort___module_location(recv) ((icode___icode_base___IAbort___module_location_t)CALL((recv), (SFT_icode___icode_base[55] + 2)))
#define CALL_icode___icode_base___IAbort___init(recv) ((icode___icode_base___IAbort___init_t)CALL((recv), (SFT_icode___icode_base[55] + 3)))
#define ID_icode___icode_base___IAbsCall (SFT_icode___icode_base[56])
#define COLOR_icode___icode_base___IAbsCall (SFT_icode___icode_base[57])
#define ATTR_icode___icode_base___IAbsCall____property(recv) ATTR(recv, (SFT_icode___icode_base[58] + 0))
#define ATTR_icode___icode_base___IAbsCall_____atis_explicit_from_extern(recv) ATTR(recv, (SFT_icode___icode_base[58] + 1))
#define INIT_TABLE_POS_icode___icode_base___IAbsCall (SFT_icode___icode_base[59] + 0)
#define CALL_icode___icode_base___IAbsCall___property(recv) ((icode___icode_base___IAbsCall___property_t)CALL((recv), (SFT_icode___icode_base[59] + 1)))
#define CALL_icode___icode_base___IAbsCall___is_explicit_from_extern(recv) ((icode___icode_base___IAbsCall___is_explicit_from_extern_t)CALL((recv), (SFT_icode___icode_base[59] + 2)))
#define CALL_icode___icode_base___IAbsCall___is_explicit_from_extern__eq(recv) ((icode___icode_base___IAbsCall___is_explicit_from_extern__eq_t)CALL((recv), (SFT_icode___icode_base[59] + 3)))
#define CALL_icode___icode_base___IAbsCall___init(recv) ((icode___icode_base___IAbsCall___init_t)CALL((recv), (SFT_icode___icode_base[59] + 4)))
#define ID_icode___icode_base___ICall (SFT_icode___icode_base[60])
#define COLOR_icode___icode_base___ICall (SFT_icode___icode_base[61])
#define INIT_TABLE_POS_icode___icode_base___ICall (SFT_icode___icode_base[62] + 0)
#define CALL_icode___icode_base___ICall___init(recv) ((icode___icode_base___ICall___init_t)CALL((recv), (SFT_icode___icode_base[62] + 1)))
#define ID_icode___icode_base___ISuper (SFT_icode___icode_base[63])
#define COLOR_icode___icode_base___ISuper (SFT_icode___icode_base[64])
#define INIT_TABLE_POS_icode___icode_base___ISuper (SFT_icode___icode_base[65] + 0)
#define CALL_icode___icode_base___ISuper___init(recv) ((icode___icode_base___ISuper___init_t)CALL((recv), (SFT_icode___icode_base[65] + 1)))
#define ID_icode___icode_base___INew (SFT_icode___icode_base[66])
#define COLOR_icode___icode_base___INew (SFT_icode___icode_base[67])
#define ATTR_icode___icode_base___INew____stype(recv) ATTR(recv, (SFT_icode___icode_base[68] + 0))
#define INIT_TABLE_POS_icode___icode_base___INew (SFT_icode___icode_base[69] + 0)
#define CALL_icode___icode_base___INew___stype(recv) ((icode___icode_base___INew___stype_t)CALL((recv), (SFT_icode___icode_base[69] + 1)))
#define CALL_icode___icode_base___INew___init(recv) ((icode___icode_base___INew___init_t)CALL((recv), (SFT_icode___icode_base[69] + 2)))
#define ID_icode___icode_base___IAllocateInstance (SFT_icode___icode_base[70])
#define COLOR_icode___icode_base___IAllocateInstance (SFT_icode___icode_base[71])
#define ATTR_icode___icode_base___IAllocateInstance____stype(recv) ATTR(recv, (SFT_icode___icode_base[72] + 0))
#define INIT_TABLE_POS_icode___icode_base___IAllocateInstance (SFT_icode___icode_base[73] + 0)
#define CALL_icode___icode_base___IAllocateInstance___stype(recv) ((icode___icode_base___IAllocateInstance___stype_t)CALL((recv), (SFT_icode___icode_base[73] + 1)))
#define CALL_icode___icode_base___IAllocateInstance___init(recv) ((icode___icode_base___IAllocateInstance___init_t)CALL((recv), (SFT_icode___icode_base[73] + 2)))
#define ID_icode___icode_base___IStaticCall (SFT_icode___icode_base[74])
#define COLOR_icode___icode_base___IStaticCall (SFT_icode___icode_base[75])
#define INIT_TABLE_POS_icode___icode_base___IStaticCall (SFT_icode___icode_base[76] + 0)
#define CALL_icode___icode_base___IStaticCall___init(recv) ((icode___icode_base___IStaticCall___init_t)CALL((recv), (SFT_icode___icode_base[76] + 1)))
#define ID_icode___icode_base___ICheckInstance (SFT_icode___icode_base[77])
#define COLOR_icode___icode_base___ICheckInstance (SFT_icode___icode_base[78])
#define ATTR_icode___icode_base___ICheckInstance____stype(recv) ATTR(recv, (SFT_icode___icode_base[79] + 0))
#define INIT_TABLE_POS_icode___icode_base___ICheckInstance (SFT_icode___icode_base[80] + 0)
#define CALL_icode___icode_base___ICheckInstance___stype(recv) ((icode___icode_base___ICheckInstance___stype_t)CALL((recv), (SFT_icode___icode_base[80] + 1)))
#define CALL_icode___icode_base___ICheckInstance___init(recv) ((icode___icode_base___ICheckInstance___init_t)CALL((recv), (SFT_icode___icode_base[80] + 2)))
#define ID_icode___icode_base___IInitAttributes (SFT_icode___icode_base[81])
#define COLOR_icode___icode_base___IInitAttributes (SFT_icode___icode_base[82])
#define ATTR_icode___icode_base___IInitAttributes____stype(recv) ATTR(recv, (SFT_icode___icode_base[83] + 0))
#define INIT_TABLE_POS_icode___icode_base___IInitAttributes (SFT_icode___icode_base[84] + 0)
#define CALL_icode___icode_base___IInitAttributes___stype(recv) ((icode___icode_base___IInitAttributes___stype_t)CALL((recv), (SFT_icode___icode_base[84] + 1)))
#define CALL_icode___icode_base___IInitAttributes___init(recv) ((icode___icode_base___IInitAttributes___init_t)CALL((recv), (SFT_icode___icode_base[84] + 2)))
#define ID_icode___icode_base___IClosCall (SFT_icode___icode_base[85])
#define COLOR_icode___icode_base___IClosCall (SFT_icode___icode_base[86])
#define ATTR_icode___icode_base___IClosCall____closure_decl(recv) ATTR(recv, (SFT_icode___icode_base[87] + 0))
#define ATTR_icode___icode_base___IClosCall____break_seq(recv) ATTR(recv, (SFT_icode___icode_base[87] + 1))
#define INIT_TABLE_POS_icode___icode_base___IClosCall (SFT_icode___icode_base[88] + 0)
#define CALL_icode___icode_base___IClosCall___closure_decl(recv) ((icode___icode_base___IClosCall___closure_decl_t)CALL((recv), (SFT_icode___icode_base[88] + 1)))
#define CALL_icode___icode_base___IClosCall___break_seq(recv) ((icode___icode_base___IClosCall___break_seq_t)CALL((recv), (SFT_icode___icode_base[88] + 2)))
#define CALL_icode___icode_base___IClosCall___break_seq__eq(recv) ((icode___icode_base___IClosCall___break_seq__eq_t)CALL((recv), (SFT_icode___icode_base[88] + 3)))
#define CALL_icode___icode_base___IClosCall___init(recv) ((icode___icode_base___IClosCall___init_t)CALL((recv), (SFT_icode___icode_base[88] + 4)))
#define ID_icode___icode_base___INative (SFT_icode___icode_base[89])
#define COLOR_icode___icode_base___INative (SFT_icode___icode_base[90])
#define ATTR_icode___icode_base___INative____method(recv) ATTR(recv, (SFT_icode___icode_base[91] + 0))
#define ATTR_icode___icode_base___INative____is_pure(recv) ATTR(recv, (SFT_icode___icode_base[91] + 1))
#define INIT_TABLE_POS_icode___icode_base___INative (SFT_icode___icode_base[92] + 0)
#define CALL_icode___icode_base___INative___method(recv) ((icode___icode_base___INative___method_t)CALL((recv), (SFT_icode___icode_base[92] + 1)))
#define CALL_icode___icode_base___INative___init(recv) ((icode___icode_base___INative___init_t)CALL((recv), (SFT_icode___icode_base[92] + 2)))
#define CALL_icode___icode_base___INative___is_pure__eq(recv) ((icode___icode_base___INative___is_pure__eq_t)CALL((recv), (SFT_icode___icode_base[92] + 3)))
#define ID_icode___icode_base___IIntValue (SFT_icode___icode_base[93])
#define COLOR_icode___icode_base___IIntValue (SFT_icode___icode_base[94])
#define ATTR_icode___icode_base___IIntValue____value(recv) ATTR(recv, (SFT_icode___icode_base[95] + 0))
#define INIT_TABLE_POS_icode___icode_base___IIntValue (SFT_icode___icode_base[96] + 0)
#define CALL_icode___icode_base___IIntValue___value(recv) ((icode___icode_base___IIntValue___value_t)CALL((recv), (SFT_icode___icode_base[96] + 1)))
#define CALL_icode___icode_base___IIntValue___init(recv) ((icode___icode_base___IIntValue___init_t)CALL((recv), (SFT_icode___icode_base[96] + 2)))
#define ID_icode___icode_base___IBoolValue (SFT_icode___icode_base[97])
#define COLOR_icode___icode_base___IBoolValue (SFT_icode___icode_base[98])
#define ATTR_icode___icode_base___IBoolValue____value(recv) ATTR(recv, (SFT_icode___icode_base[99] + 0))
#define INIT_TABLE_POS_icode___icode_base___IBoolValue (SFT_icode___icode_base[100] + 0)
#define CALL_icode___icode_base___IBoolValue___value(recv) ((icode___icode_base___IBoolValue___value_t)CALL((recv), (SFT_icode___icode_base[100] + 1)))
#define CALL_icode___icode_base___IBoolValue___init(recv) ((icode___icode_base___IBoolValue___init_t)CALL((recv), (SFT_icode___icode_base[100] + 2)))
#define ID_icode___icode_base___IStringValue (SFT_icode___icode_base[101])
#define COLOR_icode___icode_base___IStringValue (SFT_icode___icode_base[102])
#define ATTR_icode___icode_base___IStringValue____value(recv) ATTR(recv, (SFT_icode___icode_base[103] + 0))
#define INIT_TABLE_POS_icode___icode_base___IStringValue (SFT_icode___icode_base[104] + 0)
#define CALL_icode___icode_base___IStringValue___value(recv) ((icode___icode_base___IStringValue___value_t)CALL((recv), (SFT_icode___icode_base[104] + 1)))
#define CALL_icode___icode_base___IStringValue___init(recv) ((icode___icode_base___IStringValue___init_t)CALL((recv), (SFT_icode___icode_base[104] + 2)))
#define ID_icode___icode_base___IFloatValue (SFT_icode___icode_base[105])
#define COLOR_icode___icode_base___IFloatValue (SFT_icode___icode_base[106])
#define ATTR_icode___icode_base___IFloatValue____value(recv) ATTR(recv, (SFT_icode___icode_base[107] + 0))
#define INIT_TABLE_POS_icode___icode_base___IFloatValue (SFT_icode___icode_base[108] + 0)
#define CALL_icode___icode_base___IFloatValue___value(recv) ((icode___icode_base___IFloatValue___value_t)CALL((recv), (SFT_icode___icode_base[108] + 1)))
#define CALL_icode___icode_base___IFloatValue___init(recv) ((icode___icode_base___IFloatValue___init_t)CALL((recv), (SFT_icode___icode_base[108] + 2)))
#define ID_icode___icode_base___ICharValue (SFT_icode___icode_base[109])
#define COLOR_icode___icode_base___ICharValue (SFT_icode___icode_base[110])
#define ATTR_icode___icode_base___ICharValue____value(recv) ATTR(recv, (SFT_icode___icode_base[111] + 0))
#define INIT_TABLE_POS_icode___icode_base___ICharValue (SFT_icode___icode_base[112] + 0)
#define CALL_icode___icode_base___ICharValue___value(recv) ((icode___icode_base___ICharValue___value_t)CALL((recv), (SFT_icode___icode_base[112] + 1)))
#define CALL_icode___icode_base___ICharValue___init(recv) ((icode___icode_base___ICharValue___init_t)CALL((recv), (SFT_icode___icode_base[112] + 2)))
#define ID_icode___icode_base___IMove (SFT_icode___icode_base[113])
#define COLOR_icode___icode_base___IMove (SFT_icode___icode_base[114])
#define INIT_TABLE_POS_icode___icode_base___IMove (SFT_icode___icode_base[115] + 0)
#define CALL_icode___icode_base___IMove___init(recv) ((icode___icode_base___IMove___init_t)CALL((recv), (SFT_icode___icode_base[115] + 1)))
#define ID_icode___icode_base___IAttrRead (SFT_icode___icode_base[116])
#define COLOR_icode___icode_base___IAttrRead (SFT_icode___icode_base[117])
#define ATTR_icode___icode_base___IAttrRead____property(recv) ATTR(recv, (SFT_icode___icode_base[118] + 0))
#define INIT_TABLE_POS_icode___icode_base___IAttrRead (SFT_icode___icode_base[119] + 0)
#define CALL_icode___icode_base___IAttrRead___property(recv) ((icode___icode_base___IAttrRead___property_t)CALL((recv), (SFT_icode___icode_base[119] + 1)))
#define CALL_icode___icode_base___IAttrRead___init(recv) ((icode___icode_base___IAttrRead___init_t)CALL((recv), (SFT_icode___icode_base[119] + 2)))
#define ID_icode___icode_base___IAttrWrite (SFT_icode___icode_base[120])
#define COLOR_icode___icode_base___IAttrWrite (SFT_icode___icode_base[121])
#define ATTR_icode___icode_base___IAttrWrite____property(recv) ATTR(recv, (SFT_icode___icode_base[122] + 0))
#define INIT_TABLE_POS_icode___icode_base___IAttrWrite (SFT_icode___icode_base[123] + 0)
#define CALL_icode___icode_base___IAttrWrite___property(recv) ((icode___icode_base___IAttrWrite___property_t)CALL((recv), (SFT_icode___icode_base[123] + 1)))
#define CALL_icode___icode_base___IAttrWrite___init(recv) ((icode___icode_base___IAttrWrite___init_t)CALL((recv), (SFT_icode___icode_base[123] + 2)))
#define ID_icode___icode_base___IAttrIsset (SFT_icode___icode_base[124])
#define COLOR_icode___icode_base___IAttrIsset (SFT_icode___icode_base[125])
#define ATTR_icode___icode_base___IAttrIsset____property(recv) ATTR(recv, (SFT_icode___icode_base[126] + 0))
#define INIT_TABLE_POS_icode___icode_base___IAttrIsset (SFT_icode___icode_base[127] + 0)
#define CALL_icode___icode_base___IAttrIsset___property(recv) ((icode___icode_base___IAttrIsset___property_t)CALL((recv), (SFT_icode___icode_base[127] + 1)))
#define CALL_icode___icode_base___IAttrIsset___init(recv) ((icode___icode_base___IAttrIsset___init_t)CALL((recv), (SFT_icode___icode_base[127] + 2)))
#define ID_icode___icode_base___ITypeCheck (SFT_icode___icode_base[128])
#define COLOR_icode___icode_base___ITypeCheck (SFT_icode___icode_base[129])
#define ATTR_icode___icode_base___ITypeCheck____stype(recv) ATTR(recv, (SFT_icode___icode_base[130] + 0))
#define INIT_TABLE_POS_icode___icode_base___ITypeCheck (SFT_icode___icode_base[131] + 0)
#define CALL_icode___icode_base___ITypeCheck___stype(recv) ((icode___icode_base___ITypeCheck___stype_t)CALL((recv), (SFT_icode___icode_base[131] + 1)))
#define CALL_icode___icode_base___ITypeCheck___init(recv) ((icode___icode_base___ITypeCheck___init_t)CALL((recv), (SFT_icode___icode_base[131] + 2)))
#define ID_icode___icode_base___IIs (SFT_icode___icode_base[132])
#define COLOR_icode___icode_base___IIs (SFT_icode___icode_base[133])
#define INIT_TABLE_POS_icode___icode_base___IIs (SFT_icode___icode_base[134] + 0)
#define CALL_icode___icode_base___IIs___init(recv) ((icode___icode_base___IIs___init_t)CALL((recv), (SFT_icode___icode_base[134] + 1)))
#define ID_icode___icode_base___INot (SFT_icode___icode_base[135])
#define COLOR_icode___icode_base___INot (SFT_icode___icode_base[136])
#define INIT_TABLE_POS_icode___icode_base___INot (SFT_icode___icode_base[137] + 0)
#define CALL_icode___icode_base___INot___init(recv) ((icode___icode_base___INot___init_t)CALL((recv), (SFT_icode___icode_base[137] + 1)))
#define ID_icode___icode_base___IOnce (SFT_icode___icode_base[138])
#define COLOR_icode___icode_base___IOnce (SFT_icode___icode_base[139])
#define ATTR_icode___icode_base___IOnce____body(recv) ATTR(recv, (SFT_icode___icode_base[140] + 0))
#define INIT_TABLE_POS_icode___icode_base___IOnce (SFT_icode___icode_base[141] + 0)
#define CALL_icode___icode_base___IOnce___body(recv) ((icode___icode_base___IOnce___body_t)CALL((recv), (SFT_icode___icode_base[141] + 1)))
#define CALL_icode___icode_base___IOnce___init(recv) ((icode___icode_base___IOnce___init_t)CALL((recv), (SFT_icode___icode_base[141] + 2)))
#define ID_icode___icode_base___IHasClos (SFT_icode___icode_base[142])
#define COLOR_icode___icode_base___IHasClos (SFT_icode___icode_base[143])
#define ATTR_icode___icode_base___IHasClos____closure_decl(recv) ATTR(recv, (SFT_icode___icode_base[144] + 0))
#define INIT_TABLE_POS_icode___icode_base___IHasClos (SFT_icode___icode_base[145] + 0)
#define CALL_icode___icode_base___IHasClos___closure_decl(recv) ((icode___icode_base___IHasClos___closure_decl_t)CALL((recv), (SFT_icode___icode_base[145] + 1)))
#define CALL_icode___icode_base___IHasClos___init(recv) ((icode___icode_base___IHasClos___init_t)CALL((recv), (SFT_icode___icode_base[145] + 2)))
#define CALL_icode___icode_base___MMAttribute___iroutine(recv) ((icode___icode_base___MMAttribute___iroutine_t)CALL((recv), (SFT_icode___icode_base[146] + 0)))
#define CALL_icode___icode_base___MMMethod___iroutine(recv) ((icode___icode_base___MMMethod___iroutine_t)CALL((recv), (SFT_icode___icode_base[147] + 0)))
val_t icode___icode_base___IRegister___stype(val_t p0);
typedef val_t (*icode___icode_base___IRegister___stype_t)(val_t p0);
void icode___icode_base___IRegister___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IRegister___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IRegister_icode___icode_base___IRegister___init(val_t p0);
void icode___icode_base___IEscapeMark___init(val_t p0, int* init_table);
typedef void (*icode___icode_base___IEscapeMark___init_t)(val_t p0, int* init_table);
val_t NEW_IEscapeMark_icode___icode_base___IEscapeMark___init();
val_t icode___icode_base___IClosureDecl___closure(val_t p0);
typedef val_t (*icode___icode_base___IClosureDecl___closure_t)(val_t p0);
val_t icode___icode_base___IClosureDecl___default(val_t p0);
typedef val_t (*icode___icode_base___IClosureDecl___default_t)(val_t p0);
void icode___icode_base___IClosureDecl___default__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___IClosureDecl___default__eq_t)(val_t p0, val_t p1);
void icode___icode_base___IClosureDecl___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IClosureDecl___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IClosureDecl_icode___icode_base___IClosureDecl___init(val_t p0);
val_t icode___icode_base___IRoutine___params(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___params_t)(val_t p0);
val_t icode___icode_base___IRoutine___closure_decls(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___closure_decls_t)(val_t p0);
void icode___icode_base___IRoutine___closure_decls__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___IRoutine___closure_decls__eq_t)(val_t p0, val_t p1);
val_t icode___icode_base___IRoutine___registers(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___registers_t)(val_t p0);
val_t icode___icode_base___IRoutine___result(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___result_t)(val_t p0);
val_t icode___icode_base___IRoutine___escape_marks(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___escape_marks_t)(val_t p0);
val_t icode___icode_base___IRoutine___body(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___body_t)(val_t p0);
val_t icode___icode_base___IRoutine___location(val_t p0);
typedef val_t (*icode___icode_base___IRoutine___location_t)(val_t p0);
void icode___icode_base___IRoutine___location__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___IRoutine___location__eq_t)(val_t p0, val_t p1);
void icode___icode_base___IRoutine___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IRoutine___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IRoutine_icode___icode_base___IRoutine___init(val_t p0, val_t p1);
void icode___icode_base___IClosureDef___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IClosureDef___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IClosureDef_icode___icode_base___IClosureDef___init(val_t p0, val_t p1);
val_t icode___icode_base___ICode___arity(val_t p0);
typedef val_t (*icode___icode_base___ICode___arity_t)(val_t p0);
val_t icode___icode_base___ICode___result(val_t p0);
typedef val_t (*icode___icode_base___ICode___result_t)(val_t p0);
void icode___icode_base___ICode___result__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___ICode___result__eq_t)(val_t p0, val_t p1);
val_t icode___icode_base___ICode___location(val_t p0);
typedef val_t (*icode___icode_base___ICode___location_t)(val_t p0);
void icode___icode_base___ICode___location__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___ICode___location__eq_t)(val_t p0, val_t p1);
val_t icode___icode_base___ICode___is_pure(val_t p0);
typedef val_t (*icode___icode_base___ICode___is_pure_t)(val_t p0);
void icode___icode_base___ICode___init(val_t p0, int* init_table);
typedef void (*icode___icode_base___ICode___init_t)(val_t p0, int* init_table);
val_t NEW_ICode_icode___icode_base___ICode___init();
val_t icode___icode_base___ICode0___arity(val_t p0);
typedef val_t (*icode___icode_base___ICode0___arity_t)(val_t p0);
val_t NEW_ICode0_icode___icode_base___ICode___init();
val_t icode___icode_base___ICode1___arity(val_t p0);
typedef val_t (*icode___icode_base___ICode1___arity_t)(val_t p0);
val_t icode___icode_base___ICode1___expr(val_t p0);
typedef val_t (*icode___icode_base___ICode1___expr_t)(val_t p0);
void icode___icode_base___ICode1___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___ICode1___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_ICode1_icode___icode_base___ICode1___init(val_t p0);
val_t icode___icode_base___ICode2___arity(val_t p0);
typedef val_t (*icode___icode_base___ICode2___arity_t)(val_t p0);
val_t icode___icode_base___ICode2___expr1(val_t p0);
typedef val_t (*icode___icode_base___ICode2___expr1_t)(val_t p0);
val_t icode___icode_base___ICode2___expr2(val_t p0);
typedef val_t (*icode___icode_base___ICode2___expr2_t)(val_t p0);
void icode___icode_base___ICode2___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___ICode2___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_ICode2_icode___icode_base___ICode2___init(val_t p0, val_t p1);
val_t icode___icode_base___ICodeN___arity(val_t p0);
typedef val_t (*icode___icode_base___ICodeN___arity_t)(val_t p0);
val_t icode___icode_base___ICodeN___exprs(val_t p0);
typedef val_t (*icode___icode_base___ICodeN___exprs_t)(val_t p0);
val_t icode___icode_base___ICodeN___closure_defs(val_t p0);
typedef val_t (*icode___icode_base___ICodeN___closure_defs_t)(val_t p0);
void icode___icode_base___ICodeN___closure_defs__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___ICodeN___closure_defs__eq_t)(val_t p0, val_t p1);
void icode___icode_base___ICodeN___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___ICodeN___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_ICodeN_icode___icode_base___ICodeN___init(val_t p0);
val_t icode___icode_base___ISeq___icodes(val_t p0);
typedef val_t (*icode___icode_base___ISeq___icodes_t)(val_t p0);
val_t icode___icode_base___ISeq___iescape_mark(val_t p0);
typedef val_t (*icode___icode_base___ISeq___iescape_mark_t)(val_t p0);
void icode___icode_base___ISeq___iescape_mark__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___ISeq___iescape_mark__eq_t)(val_t p0, val_t p1);
void icode___icode_base___ISeq___init(val_t p0, int* init_table);
typedef void (*icode___icode_base___ISeq___init_t)(val_t p0, int* init_table);
val_t NEW_ISeq_icode___icode_base___ISeq___init();
void icode___icode_base___ILoop___init(val_t p0, int* init_table);
typedef void (*icode___icode_base___ILoop___init_t)(val_t p0, int* init_table);
val_t NEW_ILoop_icode___icode_base___ILoop___init();
val_t icode___icode_base___IIf___then_seq(val_t p0);
typedef val_t (*icode___icode_base___IIf___then_seq_t)(val_t p0);
val_t icode___icode_base___IIf___else_seq(val_t p0);
typedef val_t (*icode___icode_base___IIf___else_seq_t)(val_t p0);
void icode___icode_base___IIf___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IIf___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IIf_icode___icode_base___IIf___init(val_t p0);
val_t icode___icode_base___IEscape___iescape_mark(val_t p0);
typedef val_t (*icode___icode_base___IEscape___iescape_mark_t)(val_t p0);
void icode___icode_base___IEscape___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IEscape___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IEscape_icode___icode_base___IEscape___init(val_t p0);
val_t icode___icode_base___IAbort___texts(val_t p0);
typedef val_t (*icode___icode_base___IAbort___texts_t)(val_t p0);
val_t icode___icode_base___IAbort___module_location(val_t p0);
typedef val_t (*icode___icode_base___IAbort___module_location_t)(val_t p0);
void icode___icode_base___IAbort___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IAbort___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IAbort_icode___icode_base___IAbort___init(val_t p0, val_t p1);
val_t icode___icode_base___IAbsCall___property(val_t p0);
typedef val_t (*icode___icode_base___IAbsCall___property_t)(val_t p0);
val_t icode___icode_base___IAbsCall___is_explicit_from_extern(val_t p0);
typedef val_t (*icode___icode_base___IAbsCall___is_explicit_from_extern_t)(val_t p0);
void icode___icode_base___IAbsCall___is_explicit_from_extern__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___IAbsCall___is_explicit_from_extern__eq_t)(val_t p0, val_t p1);
void icode___icode_base___IAbsCall___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IAbsCall___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IAbsCall_icode___icode_base___IAbsCall___init(val_t p0, val_t p1);
void icode___icode_base___ICall___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___ICall___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_ICall_icode___icode_base___ICall___init(val_t p0, val_t p1);
void icode___icode_base___ISuper___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___ISuper___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_ISuper_icode___icode_base___ISuper___init(val_t p0, val_t p1);
val_t icode___icode_base___INew___stype(val_t p0);
typedef val_t (*icode___icode_base___INew___stype_t)(val_t p0);
void icode___icode_base___INew___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*icode___icode_base___INew___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_INew_icode___icode_base___INew___init(val_t p0, val_t p1, val_t p2);
val_t icode___icode_base___IAllocateInstance___stype(val_t p0);
typedef val_t (*icode___icode_base___IAllocateInstance___stype_t)(val_t p0);
void icode___icode_base___IAllocateInstance___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IAllocateInstance___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IAllocateInstance_icode___icode_base___IAllocateInstance___init(val_t p0);
void icode___icode_base___IStaticCall___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IStaticCall___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IStaticCall_icode___icode_base___IStaticCall___init(val_t p0, val_t p1);
val_t icode___icode_base___ICheckInstance___stype(val_t p0);
typedef val_t (*icode___icode_base___ICheckInstance___stype_t)(val_t p0);
void icode___icode_base___ICheckInstance___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___ICheckInstance___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_ICheckInstance_icode___icode_base___ICheckInstance___init(val_t p0, val_t p1);
val_t icode___icode_base___IInitAttributes___stype(val_t p0);
typedef val_t (*icode___icode_base___IInitAttributes___stype_t)(val_t p0);
void icode___icode_base___IInitAttributes___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IInitAttributes___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IInitAttributes_icode___icode_base___IInitAttributes___init(val_t p0, val_t p1);
val_t icode___icode_base___IClosCall___closure_decl(val_t p0);
typedef val_t (*icode___icode_base___IClosCall___closure_decl_t)(val_t p0);
val_t icode___icode_base___IClosCall___break_seq(val_t p0);
typedef val_t (*icode___icode_base___IClosCall___break_seq_t)(val_t p0);
void icode___icode_base___IClosCall___break_seq__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___IClosCall___break_seq__eq_t)(val_t p0, val_t p1);
void icode___icode_base___IClosCall___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IClosCall___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IClosCall_icode___icode_base___IClosCall___init(val_t p0, val_t p1);
val_t icode___icode_base___INative___method(val_t p0);
typedef val_t (*icode___icode_base___INative___method_t)(val_t p0);
void icode___icode_base___INative___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___INative___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_INative_icode___icode_base___INative___init(val_t p0, val_t p1);
val_t icode___icode_base___INative___is_pure(val_t p0);
typedef val_t (*icode___icode_base___INative___is_pure_t)(val_t p0);
void icode___icode_base___INative___is_pure__eq(val_t p0, val_t p1);
typedef void (*icode___icode_base___INative___is_pure__eq_t)(val_t p0, val_t p1);
val_t icode___icode_base___IIntValue___value(val_t p0);
typedef val_t (*icode___icode_base___IIntValue___value_t)(val_t p0);
void icode___icode_base___IIntValue___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IIntValue___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IIntValue_icode___icode_base___IIntValue___init(val_t p0);
val_t icode___icode_base___IIntValue___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IIntValue___is_pure_t)(val_t p0);
val_t icode___icode_base___IBoolValue___value(val_t p0);
typedef val_t (*icode___icode_base___IBoolValue___value_t)(val_t p0);
void icode___icode_base___IBoolValue___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IBoolValue___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IBoolValue_icode___icode_base___IBoolValue___init(val_t p0);
val_t icode___icode_base___IBoolValue___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IBoolValue___is_pure_t)(val_t p0);
val_t icode___icode_base___IStringValue___value(val_t p0);
typedef val_t (*icode___icode_base___IStringValue___value_t)(val_t p0);
void icode___icode_base___IStringValue___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IStringValue___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IStringValue_icode___icode_base___IStringValue___init(val_t p0);
val_t icode___icode_base___IStringValue___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IStringValue___is_pure_t)(val_t p0);
val_t icode___icode_base___IFloatValue___value(val_t p0);
typedef val_t (*icode___icode_base___IFloatValue___value_t)(val_t p0);
void icode___icode_base___IFloatValue___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IFloatValue___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IFloatValue_icode___icode_base___IFloatValue___init(val_t p0);
val_t icode___icode_base___IFloatValue___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IFloatValue___is_pure_t)(val_t p0);
val_t icode___icode_base___ICharValue___value(val_t p0);
typedef val_t (*icode___icode_base___ICharValue___value_t)(val_t p0);
void icode___icode_base___ICharValue___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___ICharValue___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_ICharValue_icode___icode_base___ICharValue___init(val_t p0);
val_t icode___icode_base___ICharValue___is_pure(val_t p0);
typedef val_t (*icode___icode_base___ICharValue___is_pure_t)(val_t p0);
void icode___icode_base___IMove___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IMove___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IMove_icode___icode_base___IMove___init(val_t p0, val_t p1);
val_t icode___icode_base___IMove___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IMove___is_pure_t)(val_t p0);
val_t icode___icode_base___IAttrRead___property(val_t p0);
typedef val_t (*icode___icode_base___IAttrRead___property_t)(val_t p0);
void icode___icode_base___IAttrRead___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IAttrRead___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IAttrRead_icode___icode_base___IAttrRead___init(val_t p0, val_t p1);
val_t icode___icode_base___IAttrRead___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IAttrRead___is_pure_t)(val_t p0);
val_t icode___icode_base___IAttrWrite___property(val_t p0);
typedef val_t (*icode___icode_base___IAttrWrite___property_t)(val_t p0);
void icode___icode_base___IAttrWrite___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*icode___icode_base___IAttrWrite___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_IAttrWrite_icode___icode_base___IAttrWrite___init(val_t p0, val_t p1, val_t p2);
val_t icode___icode_base___IAttrIsset___property(val_t p0);
typedef val_t (*icode___icode_base___IAttrIsset___property_t)(val_t p0);
void icode___icode_base___IAttrIsset___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IAttrIsset___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IAttrIsset_icode___icode_base___IAttrIsset___init(val_t p0, val_t p1);
val_t icode___icode_base___IAttrIsset___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IAttrIsset___is_pure_t)(val_t p0);
val_t icode___icode_base___ITypeCheck___stype(val_t p0);
typedef val_t (*icode___icode_base___ITypeCheck___stype_t)(val_t p0);
void icode___icode_base___ITypeCheck___init(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
typedef void (*icode___icode_base___ITypeCheck___init_t)(val_t p0, val_t p1, val_t p2, val_t p3, int* init_table);
val_t NEW_ITypeCheck_icode___icode_base___ITypeCheck___init(val_t p0, val_t p1, val_t p2);
val_t icode___icode_base___ITypeCheck___is_pure(val_t p0);
typedef val_t (*icode___icode_base___ITypeCheck___is_pure_t)(val_t p0);
void icode___icode_base___IIs___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*icode___icode_base___IIs___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_IIs_icode___icode_base___IIs___init(val_t p0, val_t p1);
val_t icode___icode_base___IIs___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IIs___is_pure_t)(val_t p0);
void icode___icode_base___INot___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___INot___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_INot_icode___icode_base___INot___init(val_t p0);
val_t icode___icode_base___INot___is_pure(val_t p0);
typedef val_t (*icode___icode_base___INot___is_pure_t)(val_t p0);
val_t icode___icode_base___IOnce___body(val_t p0);
typedef val_t (*icode___icode_base___IOnce___body_t)(val_t p0);
void icode___icode_base___IOnce___init(val_t p0, int* init_table);
typedef void (*icode___icode_base___IOnce___init_t)(val_t p0, int* init_table);
val_t NEW_IOnce_icode___icode_base___IOnce___init();
val_t icode___icode_base___IHasClos___closure_decl(val_t p0);
typedef val_t (*icode___icode_base___IHasClos___closure_decl_t)(val_t p0);
void icode___icode_base___IHasClos___init(val_t p0, val_t p1, int* init_table);
typedef void (*icode___icode_base___IHasClos___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_IHasClos_icode___icode_base___IHasClos___init(val_t p0);
val_t icode___icode_base___IHasClos___is_pure(val_t p0);
typedef val_t (*icode___icode_base___IHasClos___is_pure_t)(val_t p0);
val_t icode___icode_base___MMAttribute___iroutine(val_t p0);
typedef val_t (*icode___icode_base___MMAttribute___iroutine_t)(val_t p0);
val_t NEW_MMAttribute_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
val_t icode___icode_base___MMMethod___iroutine(val_t p0);
typedef val_t (*icode___icode_base___MMMethod___iroutine_t)(val_t p0);
val_t NEW_MMMethod_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
#endif
