/* This C header file is generated by NIT to compile modules and programs that requires ./syntax/typing. */
#ifndef syntax___typing_sep
#define syntax___typing_sep
#include "syntax___scope._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_syntax___typing___TypingVisitor[];

extern const classtable_elt_t VFT_syntax___typing___AAbsControl[];

extern const classtable_elt_t VFT_syntax___typing___ATypeCheckExpr[];
extern const char LOCATE_syntax___typing[];
extern const int SFT_syntax___typing[];
#define CALL_syntax___typing___MMSrcModule___do_typing(recv) ((syntax___typing___MMSrcModule___do_typing_t)CALL((recv), (SFT_syntax___typing[0] + 0)))
#define ID_syntax___typing___TypingVisitor (SFT_syntax___typing[1])
#define COLOR_syntax___typing___TypingVisitor (SFT_syntax___typing[2])
#define ATTR_syntax___typing___TypingVisitor____scope_ctx(recv) ATTR(recv, (SFT_syntax___typing[3] + 0))
#define ATTR_syntax___typing___TypingVisitor____flow_ctx(recv) ATTR(recv, (SFT_syntax___typing[3] + 1))
#define ATTR_syntax___typing___TypingVisitor____base_flow_ctx(recv) ATTR(recv, (SFT_syntax___typing[3] + 2))
#define ATTR_syntax___typing___TypingVisitor____self_var(recv) ATTR(recv, (SFT_syntax___typing[3] + 3))
#define ATTR_syntax___typing___TypingVisitor____top_block(recv) ATTR(recv, (SFT_syntax___typing[3] + 4))
#define ATTR_syntax___typing___TypingVisitor____explicit_super_init_calls(recv) ATTR(recv, (SFT_syntax___typing[3] + 5))
#define ATTR_syntax___typing___TypingVisitor____explicit_other_init_call(recv) ATTR(recv, (SFT_syntax___typing[3] + 6))
#define ATTR_syntax___typing___TypingVisitor____is_default_closure_definition(recv) ATTR(recv, (SFT_syntax___typing[3] + 7))
#define ATTR_syntax___typing___TypingVisitor____once_count(recv) ATTR(recv, (SFT_syntax___typing[3] + 8))
#define INIT_TABLE_POS_syntax___typing___TypingVisitor (SFT_syntax___typing[4] + 0)
#define CALL_syntax___typing___TypingVisitor___scope_ctx(recv) ((syntax___typing___TypingVisitor___scope_ctx_t)CALL((recv), (SFT_syntax___typing[4] + 1)))
#define CALL_syntax___typing___TypingVisitor___flow_ctx(recv) ((syntax___typing___TypingVisitor___flow_ctx_t)CALL((recv), (SFT_syntax___typing[4] + 2)))
#define CALL_syntax___typing___TypingVisitor___flow_ctx__eq(recv) ((syntax___typing___TypingVisitor___flow_ctx__eq_t)CALL((recv), (SFT_syntax___typing[4] + 3)))
#define CALL_syntax___typing___TypingVisitor___mark_is_set(recv) ((syntax___typing___TypingVisitor___mark_is_set_t)CALL((recv), (SFT_syntax___typing[4] + 4)))
#define CALL_syntax___typing___TypingVisitor___mark_unreash(recv) ((syntax___typing___TypingVisitor___mark_unreash_t)CALL((recv), (SFT_syntax___typing[4] + 5)))
#define CALL_syntax___typing___TypingVisitor___enter_visit_block(recv) ((syntax___typing___TypingVisitor___enter_visit_block_t)CALL((recv), (SFT_syntax___typing[4] + 6)))
#define CALL_syntax___typing___TypingVisitor___base_flow_ctx(recv) ((syntax___typing___TypingVisitor___base_flow_ctx_t)CALL((recv), (SFT_syntax___typing[4] + 7)))
#define CALL_syntax___typing___TypingVisitor___base_flow_ctx__eq(recv) ((syntax___typing___TypingVisitor___base_flow_ctx__eq_t)CALL((recv), (SFT_syntax___typing[4] + 8)))
#define CALL_syntax___typing___TypingVisitor___self_var(recv) ((syntax___typing___TypingVisitor___self_var_t)CALL((recv), (SFT_syntax___typing[4] + 9)))
#define CALL_syntax___typing___TypingVisitor___self_var__eq(recv) ((syntax___typing___TypingVisitor___self_var__eq_t)CALL((recv), (SFT_syntax___typing[4] + 10)))
#define CALL_syntax___typing___TypingVisitor___top_block(recv) ((syntax___typing___TypingVisitor___top_block_t)CALL((recv), (SFT_syntax___typing[4] + 11)))
#define CALL_syntax___typing___TypingVisitor___top_block__eq(recv) ((syntax___typing___TypingVisitor___top_block__eq_t)CALL((recv), (SFT_syntax___typing[4] + 12)))
#define CALL_syntax___typing___TypingVisitor___explicit_super_init_calls(recv) ((syntax___typing___TypingVisitor___explicit_super_init_calls_t)CALL((recv), (SFT_syntax___typing[4] + 13)))
#define CALL_syntax___typing___TypingVisitor___explicit_super_init_calls__eq(recv) ((syntax___typing___TypingVisitor___explicit_super_init_calls__eq_t)CALL((recv), (SFT_syntax___typing[4] + 14)))
#define CALL_syntax___typing___TypingVisitor___explicit_other_init_call(recv) ((syntax___typing___TypingVisitor___explicit_other_init_call_t)CALL((recv), (SFT_syntax___typing[4] + 15)))
#define CALL_syntax___typing___TypingVisitor___explicit_other_init_call__eq(recv) ((syntax___typing___TypingVisitor___explicit_other_init_call__eq_t)CALL((recv), (SFT_syntax___typing[4] + 16)))
#define CALL_syntax___typing___TypingVisitor___use_if_true_flow_ctx(recv) ((syntax___typing___TypingVisitor___use_if_true_flow_ctx_t)CALL((recv), (SFT_syntax___typing[4] + 17)))
#define CALL_syntax___typing___TypingVisitor___use_if_false_flow_ctx(recv) ((syntax___typing___TypingVisitor___use_if_false_flow_ctx_t)CALL((recv), (SFT_syntax___typing[4] + 18)))
#define CALL_syntax___typing___TypingVisitor___is_default_closure_definition(recv) ((syntax___typing___TypingVisitor___is_default_closure_definition_t)CALL((recv), (SFT_syntax___typing[4] + 19)))
#define CALL_syntax___typing___TypingVisitor___is_default_closure_definition__eq(recv) ((syntax___typing___TypingVisitor___is_default_closure_definition__eq_t)CALL((recv), (SFT_syntax___typing[4] + 20)))
#define CALL_syntax___typing___TypingVisitor___once_count(recv) ((syntax___typing___TypingVisitor___once_count_t)CALL((recv), (SFT_syntax___typing[4] + 21)))
#define CALL_syntax___typing___TypingVisitor___once_count__eq(recv) ((syntax___typing___TypingVisitor___once_count__eq_t)CALL((recv), (SFT_syntax___typing[4] + 22)))
#define CALL_syntax___typing___TypingVisitor___init(recv) ((syntax___typing___TypingVisitor___init_t)CALL((recv), (SFT_syntax___typing[4] + 23)))
#define CALL_syntax___typing___TypingVisitor___get_default_constructor_for(recv) ((syntax___typing___TypingVisitor___get_default_constructor_for_t)CALL((recv), (SFT_syntax___typing[4] + 24)))
#define CALL_syntax___typing___ANode___accept_typing(recv) ((syntax___typing___ANode___accept_typing_t)CALL((recv), (SFT_syntax___typing[5] + 0)))
#define CALL_syntax___typing___ANode___after_typing(recv) ((syntax___typing___ANode___after_typing_t)CALL((recv), (SFT_syntax___typing[5] + 1)))
#define CALL_SUPER_syntax___typing___AClassdef___accept_typing(recv) ((syntax___typing___AClassdef___accept_typing_t)CALL((recv), (SFT_syntax___typing[6] + 0)))
#define ATTR_syntax___typing___APropdef____self_var(recv) ATTR(recv, (SFT_syntax___typing[7] + 0))
#define CALL_SUPER_syntax___typing___AAttrPropdef___accept_typing(recv) ((syntax___typing___AAttrPropdef___accept_typing_t)CALL((recv), (SFT_syntax___typing[8] + 0)))
#define CALL_SUPER_syntax___typing___AMethPropdef___accept_typing(recv) ((syntax___typing___AMethPropdef___accept_typing_t)CALL((recv), (SFT_syntax___typing[9] + 0)))
#define CALL_SUPER_syntax___typing___AConcreteMethPropdef___after_typing(recv) ((syntax___typing___AConcreteMethPropdef___after_typing_t)CALL((recv), (SFT_syntax___typing[10] + 0)))
#define CALL_SUPER_syntax___typing___AConcreteInitPropdef___accept_typing(recv) ((syntax___typing___AConcreteInitPropdef___accept_typing_t)CALL((recv), (SFT_syntax___typing[11] + 0)))
#define CALL_SUPER_syntax___typing___AConcreteInitPropdef___after_typing(recv) ((syntax___typing___AConcreteInitPropdef___after_typing_t)CALL((recv), (SFT_syntax___typing[11] + 1)))
#define CALL_SUPER_syntax___typing___AExternInitPropdef___accept_typing(recv) ((syntax___typing___AExternInitPropdef___accept_typing_t)CALL((recv), (SFT_syntax___typing[12] + 0)))
#define CALL_SUPER_syntax___typing___AExternInitPropdef___after_typing(recv) ((syntax___typing___AExternInitPropdef___after_typing_t)CALL((recv), (SFT_syntax___typing[12] + 1)))
#define ATTR_syntax___typing___AClosureDecl____escapable(recv) ATTR(recv, (SFT_syntax___typing[13] + 0))
#define CALL_syntax___typing___AClosureDecl___escapable(recv) ((syntax___typing___AClosureDecl___escapable_t)CALL((recv), (SFT_syntax___typing[14] + 0)))
#define CALL_SUPER_syntax___typing___AClosureDecl___accept_typing(recv) ((syntax___typing___AClosureDecl___accept_typing_t)CALL((recv), (SFT_syntax___typing[14] + 1)))
#define ATTR_syntax___typing___AType____stype(recv) ATTR(recv, (SFT_syntax___typing[15] + 0))
#define ATTR_syntax___typing___AExpr____is_typed(recv) ATTR(recv, (SFT_syntax___typing[16] + 0))
#define ATTR_syntax___typing___AExpr____stype(recv) ATTR(recv, (SFT_syntax___typing[16] + 1))
#define ATTR_syntax___typing___AExpr____if_true_flow_ctx(recv) ATTR(recv, (SFT_syntax___typing[16] + 2))
#define ATTR_syntax___typing___AExpr____if_false_flow_ctx(recv) ATTR(recv, (SFT_syntax___typing[16] + 3))
#define CALL_syntax___typing___AExpr___is_implicit_self(recv) ((syntax___typing___AExpr___is_implicit_self_t)CALL((recv), (SFT_syntax___typing[17] + 0)))
#define CALL_syntax___typing___AExpr___is_self(recv) ((syntax___typing___AExpr___is_self_t)CALL((recv), (SFT_syntax___typing[17] + 1)))
#define CALL_syntax___typing___AExpr___its_variable(recv) ((syntax___typing___AExpr___its_variable_t)CALL((recv), (SFT_syntax___typing[17] + 2)))
#define CALL_syntax___typing___AExpr___if_true_flow_ctx(recv) ((syntax___typing___AExpr___if_true_flow_ctx_t)CALL((recv), (SFT_syntax___typing[17] + 3)))
#define CALL_syntax___typing___AExpr___if_false_flow_ctx(recv) ((syntax___typing___AExpr___if_false_flow_ctx_t)CALL((recv), (SFT_syntax___typing[17] + 4)))
#define CALL_syntax___typing___AExpr___warn_parentheses(recv) ((syntax___typing___AExpr___warn_parentheses_t)CALL((recv), (SFT_syntax___typing[17] + 5)))
#define ATTR_syntax___typing___AVardeclExpr____variable(recv) ATTR(recv, (SFT_syntax___typing[18] + 0))
#define ID_syntax___typing___AAbsControl (SFT_syntax___typing[19])
#define COLOR_syntax___typing___AAbsControl (SFT_syntax___typing[20])
#define ATTR_syntax___typing___AAbsControl____escapable(recv) ATTR(recv, (SFT_syntax___typing[21] + 0))
#define INIT_TABLE_POS_syntax___typing___AAbsControl (SFT_syntax___typing[22] + 0)
#define CALL_syntax___typing___AAbsControl___escapable(recv) ((syntax___typing___AAbsControl___escapable_t)CALL((recv), (SFT_syntax___typing[22] + 1)))
#define CALL_syntax___typing___AAbsControl___process_control(recv) ((syntax___typing___AAbsControl___process_control_t)CALL((recv), (SFT_syntax___typing[22] + 2)))
#define CALL_syntax___typing___AAbsControl___process_control_inside(recv) ((syntax___typing___AAbsControl___process_control_inside_t)CALL((recv), (SFT_syntax___typing[22] + 3)))
#define ATTR_syntax___typing___AForExpr____variables(recv) ATTR(recv, (SFT_syntax___typing[23] + 0))
#define CALL_syntax___typing___AForExpr___do_typing(recv) ((syntax___typing___AForExpr___do_typing_t)CALL((recv), (SFT_syntax___typing[24] + 0)))
#define ATTR_syntax___typing___AVarFormExpr____variable(recv) ATTR(recv, (SFT_syntax___typing[25] + 0))
#define ATTR_syntax___typing___AReassignFormExpr____assign_method(recv) ATTR(recv, (SFT_syntax___typing[26] + 0))
#define CALL_syntax___typing___AReassignFormExpr___do_rvalue_typing(recv) ((syntax___typing___AReassignFormExpr___do_rvalue_typing_t)CALL((recv), (SFT_syntax___typing[27] + 0)))
#define CALL_syntax___typing___AAssignOp___method_name(recv) ((syntax___typing___AAssignOp___method_name_t)CALL((recv), (SFT_syntax___typing[28] + 0)))
#define ATTR_syntax___typing___ASelfExpr____variable(recv) ATTR(recv, (SFT_syntax___typing[29] + 0))
#define ATTR_syntax___typing___ASuperstringExpr____atype(recv) ATTR(recv, (SFT_syntax___typing[30] + 0))
#define CALL_syntax___typing___AArrayExpr___do_typing(recv) ((syntax___typing___AArrayExpr___do_typing_t)CALL((recv), (SFT_syntax___typing[31] + 0)))
#define ATTR_syntax___typing___ASuperExpr____init_in_superclass(recv) ATTR(recv, (SFT_syntax___typing[32] + 0))
#define CALL_syntax___typing___AExternCall___target_class_name(recv) ((syntax___typing___AExternCall___target_class_name_t)CALL((recv), (SFT_syntax___typing[33] + 0)))
#define CALL_syntax___typing___AExternCall___target_method_name(recv) ((syntax___typing___AExternCall___target_method_name_t)CALL((recv), (SFT_syntax___typing[33] + 1)))
#define CALL_syntax___typing___ACastExternCall___from_type(recv) ((syntax___typing___ACastExternCall___from_type_t)CALL((recv), (SFT_syntax___typing[34] + 0)))
#define CALL_syntax___typing___ACastExternCall___to_type(recv) ((syntax___typing___ACastExternCall___to_type_t)CALL((recv), (SFT_syntax___typing[34] + 1)))
#define ATTR_syntax___typing___AAttrFormExpr____prop(recv) ATTR(recv, (SFT_syntax___typing[35] + 0))
#define ATTR_syntax___typing___AAttrFormExpr____attr_type(recv) ATTR(recv, (SFT_syntax___typing[35] + 1))
#define CALL_syntax___typing___AAttrFormExpr___do_typing(recv) ((syntax___typing___AAttrFormExpr___do_typing_t)CALL((recv), (SFT_syntax___typing[36] + 0)))
#define ATTR_syntax___typing___AAbsAbsSendExpr____prop_signature(recv) ATTR(recv, (SFT_syntax___typing[37] + 0))
#define ATTR_syntax___typing___AAbsAbsSendExpr____raw_arguments_cache(recv) ATTR(recv, (SFT_syntax___typing[37] + 1))
#define CALL_syntax___typing___AAbsAbsSendExpr___compute_raw_arguments(recv) ((syntax___typing___AAbsAbsSendExpr___compute_raw_arguments_t)CALL((recv), (SFT_syntax___typing[38] + 0)))
#define CALL_syntax___typing___AAbsAbsSendExpr___process_signature(recv) ((syntax___typing___AAbsAbsSendExpr___process_signature_t)CALL((recv), (SFT_syntax___typing[38] + 1)))
#define CALL_syntax___typing___AAbsAbsSendExpr___process_closures(recv) ((syntax___typing___AAbsAbsSendExpr___process_closures_t)CALL((recv), (SFT_syntax___typing[38] + 2)))
#define ATTR_syntax___typing___AAbsSendExpr____prop(recv) ATTR(recv, (SFT_syntax___typing[39] + 0))
#define ATTR_syntax___typing___AAbsSendExpr____return_type(recv) ATTR(recv, (SFT_syntax___typing[39] + 1))
#define CALL_syntax___typing___AAbsSendExpr___do_typing(recv) ((syntax___typing___AAbsSendExpr___do_typing_t)CALL((recv), (SFT_syntax___typing[40] + 0)))
#define CALL_syntax___typing___AAbsSendExpr___get_property(recv) ((syntax___typing___AAbsSendExpr___get_property_t)CALL((recv), (SFT_syntax___typing[40] + 1)))
#define CALL_syntax___typing___AAbsSendExpr___get_signature(recv) ((syntax___typing___AAbsSendExpr___get_signature_t)CALL((recv), (SFT_syntax___typing[40] + 2)))
#define CALL_syntax___typing___ASuperInitCall___register_super_init_call(recv) ((syntax___typing___ASuperInitCall___register_super_init_call_t)CALL((recv), (SFT_syntax___typing[41] + 0)))
#define CALL_syntax___typing___ASendExpr___name(recv) ((syntax___typing___ASendExpr___name_t)CALL((recv), (SFT_syntax___typing[42] + 0)))
#define CALL_syntax___typing___ASendExpr___do_all_typing(recv) ((syntax___typing___ASendExpr___do_all_typing_t)CALL((recv), (SFT_syntax___typing[42] + 1)))
#define ATTR_syntax___typing___ASendReassignExpr____read_prop(recv) ATTR(recv, (SFT_syntax___typing[43] + 0))
#define CALL_SUPER_syntax___typing___AEqExpr___after_typing(recv) ((syntax___typing___AEqExpr___after_typing_t)CALL((recv), (SFT_syntax___typing[44] + 0)))
#define CALL_syntax___typing___AEqExpr___try_to_isa(recv) ((syntax___typing___AEqExpr___try_to_isa_t)CALL((recv), (SFT_syntax___typing[44] + 1)))
#define CALL_SUPER_syntax___typing___ANeExpr___after_typing(recv) ((syntax___typing___ANeExpr___after_typing_t)CALL((recv), (SFT_syntax___typing[45] + 0)))
#define CALL_syntax___typing___ANeExpr___try_to_isa(recv) ((syntax___typing___ANeExpr___try_to_isa_t)CALL((recv), (SFT_syntax___typing[45] + 1)))
#define CALL_SUPER_syntax___typing___ACallFormExpr___after_typing(recv) ((syntax___typing___ACallFormExpr___after_typing_t)CALL((recv), (SFT_syntax___typing[46] + 0)))
#define CALL_syntax___typing___ACallFormExpr___variable_create(recv) ((syntax___typing___ACallFormExpr___variable_create_t)CALL((recv), (SFT_syntax___typing[46] + 1)))
#define ATTR_syntax___typing___AClosureCallExpr____variable(recv) ATTR(recv, (SFT_syntax___typing[47] + 0))
#define CALL_syntax___typing___AClosureId___to_symbol(recv) ((syntax___typing___AClosureId___to_symbol_t)CALL((recv), (SFT_syntax___typing[48] + 0)))
#define ATTR_syntax___typing___AClosureDef____closure(recv) ATTR(recv, (SFT_syntax___typing[49] + 0))
#define ATTR_syntax___typing___AClosureDef____escapable(recv) ATTR(recv, (SFT_syntax___typing[49] + 1))
#define ATTR_syntax___typing___AClosureDef____accept_typing2(recv) ATTR(recv, (SFT_syntax___typing[49] + 2))
#define CALL_syntax___typing___AClosureDef___escapable(recv) ((syntax___typing___AClosureDef___escapable_t)CALL((recv), (SFT_syntax___typing[50] + 0)))
#define CALL_SUPER_syntax___typing___AClosureDef___accept_typing(recv) ((syntax___typing___AClosureDef___accept_typing_t)CALL((recv), (SFT_syntax___typing[50] + 1)))
#define CALL_syntax___typing___AClosureDef___accept_typing2(recv) ((syntax___typing___AClosureDef___accept_typing2_t)CALL((recv), (SFT_syntax___typing[50] + 2)))
#define ID_syntax___typing___ATypeCheckExpr (SFT_syntax___typing[51])
#define COLOR_syntax___typing___ATypeCheckExpr (SFT_syntax___typing[52])
#define INIT_TABLE_POS_syntax___typing___ATypeCheckExpr (SFT_syntax___typing[53] + 0)
#define CALL_syntax___typing___ATypeCheckExpr___check_expr_cast(recv) ((syntax___typing___ATypeCheckExpr___check_expr_cast_t)CALL((recv), (SFT_syntax___typing[53] + 1)))
#define CALL_SUPER_syntax___typing___AOnceExpr___accept_typing(recv) ((syntax___typing___AOnceExpr___accept_typing_t)CALL((recv), (SFT_syntax___typing[54] + 0)))
void syntax___typing___MMSrcModule___do_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___MMSrcModule___do_typing_t)(val_t p0, val_t p1);
val_t NEW_MMSrcModule_syntax___syntax_base___MMSrcModule___init(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
void syntax___typing___TypingVisitor___visit(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___visit_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___scope_ctx(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___scope_ctx_t)(val_t p0);
val_t syntax___typing___TypingVisitor___flow_ctx(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___flow_ctx_t)(val_t p0);
void syntax___typing___TypingVisitor___flow_ctx__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___flow_ctx__eq_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___mark_is_set(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___mark_is_set_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___mark_unreash(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___mark_unreash_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___enter_visit_block(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___enter_visit_block_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___base_flow_ctx(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___base_flow_ctx_t)(val_t p0);
void syntax___typing___TypingVisitor___base_flow_ctx__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___base_flow_ctx__eq_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___self_var(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___self_var_t)(val_t p0);
void syntax___typing___TypingVisitor___self_var__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___self_var__eq_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___top_block(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___top_block_t)(val_t p0);
void syntax___typing___TypingVisitor___top_block__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___top_block__eq_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___explicit_super_init_calls(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___explicit_super_init_calls_t)(val_t p0);
void syntax___typing___TypingVisitor___explicit_super_init_calls__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___explicit_super_init_calls__eq_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___explicit_other_init_call(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___explicit_other_init_call_t)(val_t p0);
void syntax___typing___TypingVisitor___explicit_other_init_call__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___explicit_other_init_call__eq_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___use_if_true_flow_ctx(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___use_if_true_flow_ctx_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___use_if_false_flow_ctx(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___use_if_false_flow_ctx_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___is_default_closure_definition(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___is_default_closure_definition_t)(val_t p0);
void syntax___typing___TypingVisitor___is_default_closure_definition__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___is_default_closure_definition__eq_t)(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___once_count(val_t p0);
typedef val_t (*syntax___typing___TypingVisitor___once_count_t)(val_t p0);
void syntax___typing___TypingVisitor___once_count__eq(val_t p0, val_t p1);
typedef void (*syntax___typing___TypingVisitor___once_count__eq_t)(val_t p0, val_t p1);
void syntax___typing___TypingVisitor___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*syntax___typing___TypingVisitor___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_TypingVisitor_syntax___typing___TypingVisitor___init(val_t p0, val_t p1);
val_t syntax___typing___TypingVisitor___get_default_constructor_for(val_t p0, val_t p1, val_t p2, val_t p3);
typedef val_t (*syntax___typing___TypingVisitor___get_default_constructor_for_t)(val_t p0, val_t p1, val_t p2, val_t p3);
  typedef void (*CLOS_OC_syntax___typing___TypingVisitor___get_default_constructor_for_1_0)(struct stack_frame_t *);
  void OC_syntax___typing___TypingVisitor___get_default_constructor_for_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_syntax___typing___TypingVisitor___get_default_constructor_for_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
void syntax___typing___ANode___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANode___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___ANode___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANode___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ANode_parser___parser_nodes___ANode___init();
void syntax___typing___AClassdef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AClassdef___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AClassdef_parser___parser_nodes___ANode___init();
val_t syntax___typing___APropdef___self_var(val_t p0);
typedef val_t (*syntax___typing___APropdef___self_var_t)(val_t p0);
val_t NEW_APropdef_parser___parser_nodes___ANode___init();
void syntax___typing___AAttrPropdef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAttrPropdef___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AAttrPropdef_parser___parser_prod___AAttrPropdef___empty_init();
val_t NEW_AAttrPropdef_parser___parser_prod___AAttrPropdef___init_aattrpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6, val_t p7, val_t p8, val_t p9);
val_t NEW_AAttrPropdef_parser___parser_nodes___ANode___init();
void syntax___typing___AMethPropdef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AMethPropdef___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AMethPropdef_parser___parser_prod___AMethPropdef___empty_init();
val_t NEW_AMethPropdef_parser___parser_prod___AMethPropdef___init_amethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AMethPropdef_parser___parser_nodes___ANode___init();
void syntax___typing___AConcreteMethPropdef___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AConcreteMethPropdef___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AConcreteMethPropdef_parser___parser_prod___AMethPropdef___empty_init();
val_t NEW_AConcreteMethPropdef_parser___parser_prod___AConcreteMethPropdef___empty_init();
val_t NEW_AConcreteMethPropdef_parser___parser_prod___AConcreteMethPropdef___init_aconcretemethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6);
val_t NEW_AConcreteMethPropdef_parser___parser_nodes___ANode___init();
val_t NEW_AConcreteMethPropdef_parser___parser_prod___AMethPropdef___init_amethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
void syntax___typing___AConcreteInitPropdef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AConcreteInitPropdef___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___AConcreteInitPropdef___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AConcreteInitPropdef___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AConcreteMethPropdef___empty_init();
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AConcreteInitPropdef___empty_init();
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AConcreteInitPropdef___init_aconcreteinitpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6);
val_t NEW_AConcreteInitPropdef_parser___parser_nodes___ANode___init();
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AMethPropdef___empty_init();
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AConcreteMethPropdef___init_aconcretemethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6);
val_t NEW_AConcreteInitPropdef_parser___parser_prod___AMethPropdef___init_amethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
void syntax___typing___AExternInitPropdef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AExternInitPropdef___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___AExternInitPropdef___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AExternInitPropdef___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AExternInitPropdef_parser___parser_prod___AMethPropdef___empty_init();
val_t NEW_AExternInitPropdef_parser___parser_prod___AExternInitPropdef___empty_init();
val_t NEW_AExternInitPropdef_parser___parser_prod___AExternInitPropdef___init_aexterninitpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6, val_t p7, val_t p8);
val_t NEW_AExternInitPropdef_parser___parser_nodes___ANode___init();
val_t NEW_AExternInitPropdef_parser___parser_prod___AMethPropdef___init_amethpropdef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
void syntax___typing___ASignature___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASignature___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ASignature_parser___parser_prod___ASignature___empty_init();
val_t NEW_ASignature_parser___parser_prod___ASignature___init_asignature(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_ASignature_parser___parser_nodes___ANode___init();
void syntax___typing___AParam___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AParam___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AParam_parser___parser_prod___AParam___empty_init();
val_t NEW_AParam_parser___parser_prod___AParam___init_aparam(val_t p0, val_t p1, val_t p2);
val_t NEW_AParam_parser___parser_nodes___ANode___init();
val_t syntax___typing___AClosureDecl___escapable(val_t p0);
typedef val_t (*syntax___typing___AClosureDecl___escapable_t)(val_t p0);
void syntax___typing___AClosureDecl___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AClosureDecl___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AClosureDecl_parser___parser_prod___AClosureDecl___empty_init();
val_t NEW_AClosureDecl_parser___parser_prod___AClosureDecl___init_aclosuredecl(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AClosureDecl_parser___parser_nodes___ANode___init();
val_t syntax___typing___AType___stype(val_t p0);
typedef val_t (*syntax___typing___AType___stype_t)(val_t p0);
val_t syntax___typing___AType___is_typed(val_t p0);
typedef val_t (*syntax___typing___AType___is_typed_t)(val_t p0);
void syntax___typing___AType___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AType___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AType_parser___parser_prod___AType___empty_init();
val_t NEW_AType_parser___parser_prod___AType___init_atype(val_t p0, val_t p1, val_t p2);
val_t NEW_AType_parser___parser_nodes___ANode___init();
val_t syntax___typing___AExpr___is_typed(val_t p0);
typedef val_t (*syntax___typing___AExpr___is_typed_t)(val_t p0);
val_t syntax___typing___AExpr___is_statement(val_t p0);
typedef val_t (*syntax___typing___AExpr___is_statement_t)(val_t p0);
val_t syntax___typing___AExpr___stype(val_t p0);
typedef val_t (*syntax___typing___AExpr___stype_t)(val_t p0);
void syntax___typing___AExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AExpr___after_typing_t)(val_t p0, val_t p1);
val_t syntax___typing___AExpr___is_implicit_self(val_t p0);
typedef val_t (*syntax___typing___AExpr___is_implicit_self_t)(val_t p0);
val_t syntax___typing___AExpr___is_self(val_t p0);
typedef val_t (*syntax___typing___AExpr___is_self_t)(val_t p0);
val_t syntax___typing___AExpr___its_variable(val_t p0);
typedef val_t (*syntax___typing___AExpr___its_variable_t)(val_t p0);
val_t syntax___typing___AExpr___if_true_flow_ctx(val_t p0);
typedef val_t (*syntax___typing___AExpr___if_true_flow_ctx_t)(val_t p0);
val_t syntax___typing___AExpr___if_false_flow_ctx(val_t p0);
typedef val_t (*syntax___typing___AExpr___if_false_flow_ctx_t)(val_t p0);
void syntax___typing___AExpr___warn_parentheses(val_t p0, val_t p1);
typedef void (*syntax___typing___AExpr___warn_parentheses_t)(val_t p0, val_t p1);
val_t NEW_AExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AParExpr___warn_parentheses(val_t p0, val_t p1);
typedef void (*syntax___typing___AParExpr___warn_parentheses_t)(val_t p0, val_t p1);
val_t NEW_AParExpr_parser___parser_prod___AParExpr___empty_init();
val_t NEW_AParExpr_parser___parser_prod___AParExpr___init_aparexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AParExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AParExprs___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AParExprs___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AParExprs_parser___parser_prod___AParExprs___empty_init();
val_t NEW_AParExprs_parser___parser_prod___AParExprs___init_aparexprs(val_t p0, val_t p1, val_t p2);
val_t NEW_AParExprs_parser___parser_nodes___ANode___init();
val_t syntax___typing___AVardeclExpr___variable(val_t p0);
typedef val_t (*syntax___typing___AVardeclExpr___variable_t)(val_t p0);
void syntax___typing___AVardeclExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AVardeclExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AVardeclExpr_parser___parser_prod___AVardeclExpr___empty_init();
val_t NEW_AVardeclExpr_parser___parser_prod___AVardeclExpr___init_avardeclexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AVardeclExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ABlockExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ABlockExpr___accept_typing_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_syntax___typing___ABlockExpr___accept_typing_1_0)(struct stack_frame_t *);
  void OC_syntax___typing___ABlockExpr___accept_typing_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_syntax___typing___ABlockExpr___accept_typing_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_ABlockExpr_parser___parser_prod___ABlockExpr___empty_init();
val_t NEW_ABlockExpr_parser___parser_prod___ABlockExpr___init_ablockexpr(val_t p0, val_t p1);
val_t NEW_ABlockExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AReturnExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AReturnExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AReturnExpr_parser___parser_prod___AReturnExpr___empty_init();
val_t NEW_AReturnExpr_parser___parser_prod___AReturnExpr___init_areturnexpr(val_t p0, val_t p1);
val_t NEW_AReturnExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AContinueExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AContinueExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AContinueExpr_parser___parser_prod___AContinueExpr___empty_init();
val_t NEW_AContinueExpr_parser___parser_prod___AContinueExpr___init_acontinueexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AContinueExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ABreakExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ABreakExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ABreakExpr_parser___parser_prod___ABreakExpr___empty_init();
val_t NEW_ABreakExpr_parser___parser_prod___ABreakExpr___init_abreakexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_ABreakExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAbortExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAbortExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAbortExpr_parser___parser_prod___AAbortExpr___empty_init();
val_t NEW_AAbortExpr_parser___parser_prod___AAbortExpr___init_aabortexpr(val_t p0);
val_t NEW_AAbortExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AAbsControl___escapable(val_t p0);
typedef val_t (*syntax___typing___AAbsControl___escapable_t)(val_t p0);
void syntax___typing___AAbsControl___process_control(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
typedef void (*syntax___typing___AAbsControl___process_control_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
void syntax___typing___AAbsControl___process_control_inside(val_t p0, val_t p1);
typedef void (*syntax___typing___AAbsControl___process_control_inside_t)(val_t p0, val_t p1);
val_t NEW_AAbsControl_parser___parser_nodes___ANode___init();
void syntax___typing___ADoExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ADoExpr___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___ADoExpr___process_control_inside(val_t p0, val_t p1);
typedef void (*syntax___typing___ADoExpr___process_control_inside_t)(val_t p0, val_t p1);
val_t NEW_ADoExpr_parser___parser_prod___ADoExpr___empty_init();
val_t NEW_ADoExpr_parser___parser_prod___ADoExpr___init_adoexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_ADoExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AIfExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AIfExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AIfExpr_parser___parser_prod___AIfExpr___empty_init();
val_t NEW_AIfExpr_parser___parser_prod___AIfExpr___init_aifexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_AIfExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AWhileExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AWhileExpr___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___AWhileExpr___process_control_inside(val_t p0, val_t p1);
typedef void (*syntax___typing___AWhileExpr___process_control_inside_t)(val_t p0, val_t p1);
val_t NEW_AWhileExpr_parser___parser_prod___AWhileExpr___empty_init();
val_t NEW_AWhileExpr_parser___parser_prod___AWhileExpr___init_awhileexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AWhileExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ALoopExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ALoopExpr___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___ALoopExpr___process_control_inside(val_t p0, val_t p1);
typedef void (*syntax___typing___ALoopExpr___process_control_inside_t)(val_t p0, val_t p1);
val_t NEW_ALoopExpr_parser___parser_prod___ALoopExpr___empty_init();
val_t NEW_ALoopExpr_parser___parser_prod___ALoopExpr___init_aloopexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_ALoopExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AForExpr___variables(val_t p0);
typedef val_t (*syntax___typing___AForExpr___variables_t)(val_t p0);
void syntax___typing___AForExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AForExpr___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___AForExpr___process_control_inside(val_t p0, val_t p1);
typedef void (*syntax___typing___AForExpr___process_control_inside_t)(val_t p0, val_t p1);
void syntax___typing___AForExpr___do_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AForExpr___do_typing_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_syntax___typing___AForExpr___do_typing_1_0)(struct stack_frame_t *);
  void OC_syntax___typing___AForExpr___do_typing_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_syntax___typing___AForExpr___do_typing_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_AForExpr_parser___parser_prod___AForExpr___empty_init();
val_t NEW_AForExpr_parser___parser_prod___AForExpr___init_aforexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5);
val_t NEW_AForExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAssertExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAssertExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AAssertExpr_parser___parser_prod___AAssertExpr___empty_init();
val_t NEW_AAssertExpr_parser___parser_prod___AAssertExpr___init_aassertexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_AAssertExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AVarFormExpr___variable(val_t p0);
typedef val_t (*syntax___typing___AVarFormExpr___variable_t)(val_t p0);
val_t NEW_AVarFormExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AVarExpr___its_variable(val_t p0);
typedef val_t (*syntax___typing___AVarExpr___its_variable_t)(val_t p0);
void syntax___typing___AVarExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AVarExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AVarExpr_parser___parser_prod___AVarExpr___init_avarexpr(val_t p0);
val_t NEW_AVarExpr_parser___parser_prod___AVarExpr___empty_init();
val_t NEW_AVarExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AVarAssignExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AVarAssignExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AVarAssignExpr_parser___parser_prod___AVarAssignExpr___init_avarassignexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AVarAssignExpr_parser___parser_prod___AVarAssignExpr___empty_init();
val_t NEW_AVarAssignExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AReassignFormExpr___do_rvalue_typing(val_t p0, val_t p1, val_t p2);
typedef val_t (*syntax___typing___AReassignFormExpr___do_rvalue_typing_t)(val_t p0, val_t p1, val_t p2);
val_t syntax___typing___AReassignFormExpr___assign_method(val_t p0);
typedef val_t (*syntax___typing___AReassignFormExpr___assign_method_t)(val_t p0);
val_t NEW_AReassignFormExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AVarReassignExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AVarReassignExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AVarReassignExpr_parser___parser_prod___AVarReassignExpr___init_avarreassignexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AVarReassignExpr_parser___parser_prod___AVarReassignExpr___empty_init();
val_t NEW_AVarReassignExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AAssignOp___method_name(val_t p0);
typedef val_t (*syntax___typing___AAssignOp___method_name_t)(val_t p0);
val_t NEW_AAssignOp_parser___parser_nodes___ANode___init();
val_t syntax___typing___APlusAssignOp___method_name(val_t p0);
typedef val_t (*syntax___typing___APlusAssignOp___method_name_t)(val_t p0);
val_t NEW_APlusAssignOp_parser___parser_prod___APlusAssignOp___empty_init();
val_t NEW_APlusAssignOp_parser___parser_prod___APlusAssignOp___init_aplusassignop(val_t p0);
val_t NEW_APlusAssignOp_parser___parser_nodes___ANode___init();
val_t syntax___typing___AMinusAssignOp___method_name(val_t p0);
typedef val_t (*syntax___typing___AMinusAssignOp___method_name_t)(val_t p0);
val_t NEW_AMinusAssignOp_parser___parser_prod___AMinusAssignOp___empty_init();
val_t NEW_AMinusAssignOp_parser___parser_prod___AMinusAssignOp___init_aminusassignop(val_t p0);
val_t NEW_AMinusAssignOp_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASelfExpr___variable(val_t p0);
typedef val_t (*syntax___typing___ASelfExpr___variable_t)(val_t p0);
val_t syntax___typing___ASelfExpr___its_variable(val_t p0);
typedef val_t (*syntax___typing___ASelfExpr___its_variable_t)(val_t p0);
void syntax___typing___ASelfExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASelfExpr___after_typing_t)(val_t p0, val_t p1);
val_t syntax___typing___ASelfExpr___is_self(val_t p0);
typedef val_t (*syntax___typing___ASelfExpr___is_self_t)(val_t p0);
val_t NEW_ASelfExpr_parser___parser_prod___ASelfExpr___empty_init();
val_t NEW_ASelfExpr_parser___parser_prod___ASelfExpr___init_aselfexpr(val_t p0);
val_t NEW_ASelfExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AImplicitSelfExpr___is_implicit_self(val_t p0);
typedef val_t (*syntax___typing___AImplicitSelfExpr___is_implicit_self_t)(val_t p0);
val_t NEW_AImplicitSelfExpr_parser___parser_prod___ASelfExpr___empty_init();
val_t NEW_AImplicitSelfExpr_parser___parser_prod___AImplicitSelfExpr___empty_init();
val_t NEW_AImplicitSelfExpr_parser___parser_prod___AImplicitSelfExpr___init_aimplicitselfexpr();
val_t NEW_AImplicitSelfExpr_parser___parser_nodes___ANode___init();
val_t NEW_AImplicitSelfExpr_parser___parser_prod___ASelfExpr___init_aselfexpr(val_t p0);
void syntax___typing___AIfexprExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AIfexprExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AIfexprExpr_parser___parser_prod___AIfexprExpr___empty_init();
val_t NEW_AIfexprExpr_parser___parser_prod___AIfexprExpr___init_aifexprexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5);
val_t NEW_AIfexprExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ABoolExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ABoolExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ABoolExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AOrExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AOrExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AOrExpr_parser___parser_prod___AOrExpr___empty_init();
val_t NEW_AOrExpr_parser___parser_prod___AOrExpr___init_aorexpr(val_t p0, val_t p1);
val_t NEW_AOrExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAndExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAndExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AAndExpr_parser___parser_prod___AAndExpr___empty_init();
val_t NEW_AAndExpr_parser___parser_prod___AAndExpr___init_aandexpr(val_t p0, val_t p1);
val_t NEW_AAndExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ANotExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANotExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ANotExpr_parser___parser_prod___ANotExpr___empty_init();
val_t NEW_ANotExpr_parser___parser_prod___ANotExpr___init_anotexpr(val_t p0, val_t p1);
val_t NEW_ANotExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AOrElseExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AOrElseExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AOrElseExpr_parser___parser_prod___AOrElseExpr___empty_init();
val_t NEW_AOrElseExpr_parser___parser_prod___AOrElseExpr___init_aorelseexpr(val_t p0, val_t p1);
val_t NEW_AOrElseExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AIntExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AIntExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AIntExpr_parser___parser_prod___AIntExpr___empty_init();
val_t NEW_AIntExpr_parser___parser_prod___AIntExpr___init_aintexpr(val_t p0);
val_t NEW_AIntExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AFloatExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AFloatExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AFloatExpr_parser___parser_prod___AFloatExpr___empty_init();
val_t NEW_AFloatExpr_parser___parser_prod___AFloatExpr___init_afloatexpr(val_t p0);
val_t NEW_AFloatExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ACharExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ACharExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ACharExpr_parser___parser_prod___ACharExpr___empty_init();
val_t NEW_ACharExpr_parser___parser_prod___ACharExpr___init_acharexpr(val_t p0);
val_t NEW_ACharExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AStringFormExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AStringFormExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AStringFormExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASuperstringExpr___atype(val_t p0);
typedef val_t (*syntax___typing___ASuperstringExpr___atype_t)(val_t p0);
void syntax___typing___ASuperstringExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASuperstringExpr___after_typing_t)(val_t p0, val_t p1);
  typedef void (*CLOS_OC_syntax___typing___ASuperstringExpr___after_typing_1_0)(struct stack_frame_t *);
  void OC_syntax___typing___ASuperstringExpr___after_typing_1(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
  typedef void (*OC_syntax___typing___ASuperstringExpr___after_typing_1_t)(struct stack_frame_t *closctx, val_t p0, struct stack_frame_t *closctx_param, fun_t clos_fun0);
val_t NEW_ASuperstringExpr_parser___parser_prod___ASuperstringExpr___empty_init();
val_t NEW_ASuperstringExpr_parser___parser_prod___ASuperstringExpr___init_asuperstringexpr(val_t p0);
val_t NEW_ASuperstringExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ANullExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANullExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ANullExpr_parser___parser_prod___ANullExpr___empty_init();
val_t NEW_ANullExpr_parser___parser_prod___ANullExpr___init_anullexpr(val_t p0);
val_t NEW_ANullExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AArrayExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AArrayExpr___after_typing_t)(val_t p0, val_t p1);
void syntax___typing___AArrayExpr___do_typing(val_t p0, val_t p1, val_t p2);
typedef void (*syntax___typing___AArrayExpr___do_typing_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_AArrayExpr_parser___parser_prod___AArrayExpr___empty_init();
val_t NEW_AArrayExpr_parser___parser_prod___AArrayExpr___init_aarrayexpr(val_t p0);
val_t NEW_AArrayExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ARangeExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ARangeExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ARangeExpr_parser___parser_prod___ARangeExpr___empty_init();
val_t NEW_ARangeExpr_parser___parser_prod___ARangeExpr___init_arangeexpr(val_t p0, val_t p1);
val_t NEW_ARangeExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASuperExpr___init_in_superclass(val_t p0);
typedef val_t (*syntax___typing___ASuperExpr___init_in_superclass_t)(val_t p0);
val_t syntax___typing___ASuperExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ASuperExpr___compute_raw_arguments_t)(val_t p0);
void syntax___typing___ASuperExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASuperExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ASuperExpr_parser___parser_prod___ASuperExpr___empty_init();
val_t NEW_ASuperExpr_parser___parser_prod___ASuperExpr___init_asuperexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_ASuperExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AExternCall___target_class_name(val_t p0);
typedef val_t (*syntax___typing___AExternCall___target_class_name_t)(val_t p0);
val_t syntax___typing___AExternCall___target_method_name(val_t p0);
typedef val_t (*syntax___typing___AExternCall___target_method_name_t)(val_t p0);
void syntax___typing___AExternCall___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AExternCall___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_AExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t NEW_AExternCall_parser___parser_nodes___ANode___init();
val_t syntax___typing___ALocalPropExternCall___target_class_name(val_t p0);
typedef val_t (*syntax___typing___ALocalPropExternCall___target_class_name_t)(val_t p0);
val_t syntax___typing___ALocalPropExternCall___target_method_name(val_t p0);
typedef val_t (*syntax___typing___ALocalPropExternCall___target_method_name_t)(val_t p0);
val_t NEW_ALocalPropExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_ALocalPropExternCall_parser___parser_prod___ALocalPropExternCall___empty_init();
val_t NEW_ALocalPropExternCall_parser___parser_prod___ALocalPropExternCall___init_alocalpropexterncall(val_t p0);
val_t NEW_ALocalPropExternCall_parser___parser_nodes___ANode___init();
val_t NEW_ALocalPropExternCall_parser___parser_prod___AExternCall___init_aexterncall();
void syntax___typing___ASuperExternCall___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASuperExternCall___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ASuperExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_ASuperExternCall_parser___parser_prod___ASuperExternCall___empty_init();
val_t NEW_ASuperExternCall_parser___parser_prod___ASuperExternCall___init_asuperexterncall(val_t p0);
val_t NEW_ASuperExternCall_parser___parser_nodes___ANode___init();
val_t NEW_ASuperExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___AFullPropExternCall___target_class_name(val_t p0);
typedef val_t (*syntax___typing___AFullPropExternCall___target_class_name_t)(val_t p0);
val_t syntax___typing___AFullPropExternCall___target_method_name(val_t p0);
typedef val_t (*syntax___typing___AFullPropExternCall___target_method_name_t)(val_t p0);
val_t NEW_AFullPropExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_AFullPropExternCall_parser___parser_prod___AFullPropExternCall___empty_init();
val_t NEW_AFullPropExternCall_parser___parser_prod___AFullPropExternCall___init_afullpropexterncall(val_t p0, val_t p1, val_t p2);
val_t NEW_AFullPropExternCall_parser___parser_nodes___ANode___init();
val_t NEW_AFullPropExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___AInitPropExternCall___target_class_name(val_t p0);
typedef val_t (*syntax___typing___AInitPropExternCall___target_class_name_t)(val_t p0);
val_t syntax___typing___AInitPropExternCall___target_method_name(val_t p0);
typedef val_t (*syntax___typing___AInitPropExternCall___target_method_name_t)(val_t p0);
val_t NEW_AInitPropExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_AInitPropExternCall_parser___parser_prod___AInitPropExternCall___empty_init();
val_t NEW_AInitPropExternCall_parser___parser_prod___AInitPropExternCall___init_ainitpropexterncall(val_t p0);
val_t NEW_AInitPropExternCall_parser___parser_nodes___ANode___init();
val_t NEW_AInitPropExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___ACastExternCall___from_type(val_t p0);
typedef val_t (*syntax___typing___ACastExternCall___from_type_t)(val_t p0);
val_t syntax___typing___ACastExternCall___to_type(val_t p0);
typedef val_t (*syntax___typing___ACastExternCall___to_type_t)(val_t p0);
void syntax___typing___ACastExternCall___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ACastExternCall___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ACastExternCall_parser___parser_nodes___ANode___init();
val_t NEW_ACastExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_ACastExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___ACastAsExternCall___from_type(val_t p0);
typedef val_t (*syntax___typing___ACastAsExternCall___from_type_t)(val_t p0);
val_t syntax___typing___ACastAsExternCall___to_type(val_t p0);
typedef val_t (*syntax___typing___ACastAsExternCall___to_type_t)(val_t p0);
val_t NEW_ACastAsExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_ACastAsExternCall_parser___parser_prod___ACastAsExternCall___empty_init();
val_t NEW_ACastAsExternCall_parser___parser_prod___ACastAsExternCall___init_acastasexterncall(val_t p0, val_t p1, val_t p2);
val_t NEW_ACastAsExternCall_parser___parser_nodes___ANode___init();
val_t NEW_ACastAsExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___AAsNullableExternCall___from_type(val_t p0);
typedef val_t (*syntax___typing___AAsNullableExternCall___from_type_t)(val_t p0);
val_t syntax___typing___AAsNullableExternCall___to_type(val_t p0);
typedef val_t (*syntax___typing___AAsNullableExternCall___to_type_t)(val_t p0);
val_t NEW_AAsNullableExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_AAsNullableExternCall_parser___parser_prod___AAsNullableExternCall___empty_init();
val_t NEW_AAsNullableExternCall_parser___parser_prod___AAsNullableExternCall___init_aasnullableexterncall(val_t p0, val_t p1, val_t p2);
val_t NEW_AAsNullableExternCall_parser___parser_nodes___ANode___init();
val_t NEW_AAsNullableExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___AAsNotNullableExternCall___from_type(val_t p0);
typedef val_t (*syntax___typing___AAsNotNullableExternCall___from_type_t)(val_t p0);
val_t syntax___typing___AAsNotNullableExternCall___to_type(val_t p0);
typedef val_t (*syntax___typing___AAsNotNullableExternCall___to_type_t)(val_t p0);
val_t NEW_AAsNotNullableExternCall_parser___parser_prod___AExternCall___empty_init();
val_t NEW_AAsNotNullableExternCall_parser___parser_prod___AAsNotNullableExternCall___empty_init();
val_t NEW_AAsNotNullableExternCall_parser___parser_prod___AAsNotNullableExternCall___init_aasnotnullableexterncall(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_AAsNotNullableExternCall_parser___parser_nodes___ANode___init();
val_t NEW_AAsNotNullableExternCall_parser___parser_prod___AExternCall___init_aexterncall();
val_t syntax___typing___AAttrFormExpr___prop(val_t p0);
typedef val_t (*syntax___typing___AAttrFormExpr___prop_t)(val_t p0);
val_t syntax___typing___AAttrFormExpr___attr_type(val_t p0);
typedef val_t (*syntax___typing___AAttrFormExpr___attr_type_t)(val_t p0);
void syntax___typing___AAttrFormExpr___do_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAttrFormExpr___do_typing_t)(val_t p0, val_t p1);
val_t NEW_AAttrFormExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAttrExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAttrExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAttrExpr_parser___parser_prod___AAttrExpr___empty_init();
val_t NEW_AAttrExpr_parser___parser_prod___AAttrExpr___init_aattrexpr(val_t p0, val_t p1);
val_t NEW_AAttrExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAttrAssignExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAttrAssignExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAttrAssignExpr_parser___parser_prod___AAttrAssignExpr___empty_init();
val_t NEW_AAttrAssignExpr_parser___parser_prod___AAttrAssignExpr___init_aattrassignexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_AAttrAssignExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAttrReassignExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAttrReassignExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAttrReassignExpr_parser___parser_prod___AAttrReassignExpr___empty_init();
val_t NEW_AAttrReassignExpr_parser___parser_prod___AAttrReassignExpr___init_aattrreassignexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_AAttrReassignExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AIssetAttrExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AIssetAttrExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AIssetAttrExpr_parser___parser_prod___AIssetAttrExpr___empty_init();
val_t NEW_AIssetAttrExpr_parser___parser_prod___AIssetAttrExpr___init_aissetattrexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AIssetAttrExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AAbsAbsSendExpr___prop_signature(val_t p0);
typedef val_t (*syntax___typing___AAbsAbsSendExpr___prop_signature_t)(val_t p0);
val_t syntax___typing___AAbsAbsSendExpr___raw_arguments(val_t p0);
typedef val_t (*syntax___typing___AAbsAbsSendExpr___raw_arguments_t)(val_t p0);
val_t syntax___typing___AAbsAbsSendExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___AAbsAbsSendExpr___compute_raw_arguments_t)(val_t p0);
val_t syntax___typing___AAbsAbsSendExpr___process_signature(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
typedef val_t (*syntax___typing___AAbsAbsSendExpr___process_signature_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t syntax___typing___AAbsAbsSendExpr___process_closures(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
typedef val_t (*syntax___typing___AAbsAbsSendExpr___process_closures_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AAbsAbsSendExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAbsSendExpr___do_typing(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6, val_t p7);
typedef void (*syntax___typing___AAbsSendExpr___do_typing_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5, val_t p6, val_t p7);
val_t syntax___typing___AAbsSendExpr___get_property(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
typedef val_t (*syntax___typing___AAbsSendExpr___get_property_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t syntax___typing___AAbsSendExpr___get_signature(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
typedef val_t (*syntax___typing___AAbsSendExpr___get_signature_t)(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t syntax___typing___AAbsSendExpr___prop(val_t p0);
typedef val_t (*syntax___typing___AAbsSendExpr___prop_t)(val_t p0);
val_t syntax___typing___AAbsSendExpr___return_type(val_t p0);
typedef val_t (*syntax___typing___AAbsSendExpr___return_type_t)(val_t p0);
val_t NEW_AAbsSendExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ASuperInitCall___register_super_init_call(val_t p0, val_t p1, val_t p2);
typedef void (*syntax___typing___ASuperInitCall___register_super_init_call_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_ASuperInitCall_parser___parser_nodes___ANode___init();
val_t syntax___typing___ANewExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ANewExpr___compute_raw_arguments_t)(val_t p0);
void syntax___typing___ANewExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANewExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ANewExpr_parser___parser_prod___ANewExpr___empty_init();
val_t NEW_ANewExpr_parser___parser_prod___ANewExpr___init_anewexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ANewExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASendExpr___name(val_t p0);
typedef val_t (*syntax___typing___ASendExpr___name_t)(val_t p0);
val_t syntax___typing___ASendExpr___closure_defs(val_t p0);
typedef val_t (*syntax___typing___ASendExpr___closure_defs_t)(val_t p0);
void syntax___typing___ASendExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASendExpr___after_typing_t)(val_t p0, val_t p1);
void syntax___typing___ASendExpr___do_all_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASendExpr___do_all_typing_t)(val_t p0, val_t p1);
val_t NEW_ASendExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ASendExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t NEW_ASendExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASendReassignExpr___read_prop(val_t p0);
typedef val_t (*syntax___typing___ASendReassignExpr___read_prop_t)(val_t p0);
void syntax___typing___ASendReassignExpr___do_all_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ASendReassignExpr___do_all_typing_t)(val_t p0, val_t p1);
val_t NEW_ASendReassignExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ASendReassignExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t NEW_ASendReassignExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___ABinopExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ABinopExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ABinopExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ABinopExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ABinopExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ABinopExpr_parser___parser_nodes___ANode___init();
val_t NEW_ABinopExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AEqExpr___name(val_t p0);
typedef val_t (*syntax___typing___AEqExpr___name_t)(val_t p0);
void syntax___typing___AEqExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AEqExpr___after_typing_t)(val_t p0, val_t p1);
void syntax___typing___AEqExpr___try_to_isa(val_t p0, val_t p1, val_t p2);
typedef void (*syntax___typing___AEqExpr___try_to_isa_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_AEqExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AEqExpr_parser___parser_prod___AEqExpr___empty_init();
val_t NEW_AEqExpr_parser___parser_prod___AEqExpr___init_aeqexpr(val_t p0, val_t p1);
val_t NEW_AEqExpr_parser___parser_nodes___ANode___init();
val_t NEW_AEqExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AEqExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AEqExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ANeExpr___name(val_t p0);
typedef val_t (*syntax___typing___ANeExpr___name_t)(val_t p0);
void syntax___typing___ANeExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ANeExpr___after_typing_t)(val_t p0, val_t p1);
void syntax___typing___ANeExpr___try_to_isa(val_t p0, val_t p1, val_t p2);
typedef void (*syntax___typing___ANeExpr___try_to_isa_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_ANeExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ANeExpr_parser___parser_prod___ANeExpr___empty_init();
val_t NEW_ANeExpr_parser___parser_prod___ANeExpr___init_aneexpr(val_t p0, val_t p1);
val_t NEW_ANeExpr_parser___parser_nodes___ANode___init();
val_t NEW_ANeExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ANeExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ANeExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ALtExpr___name(val_t p0);
typedef val_t (*syntax___typing___ALtExpr___name_t)(val_t p0);
val_t NEW_ALtExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ALtExpr_parser___parser_prod___ALtExpr___empty_init();
val_t NEW_ALtExpr_parser___parser_prod___ALtExpr___init_altexpr(val_t p0, val_t p1);
val_t NEW_ALtExpr_parser___parser_nodes___ANode___init();
val_t NEW_ALtExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ALtExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ALtExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ALeExpr___name(val_t p0);
typedef val_t (*syntax___typing___ALeExpr___name_t)(val_t p0);
val_t NEW_ALeExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ALeExpr_parser___parser_prod___ALeExpr___empty_init();
val_t NEW_ALeExpr_parser___parser_prod___ALeExpr___init_aleexpr(val_t p0, val_t p1);
val_t NEW_ALeExpr_parser___parser_nodes___ANode___init();
val_t NEW_ALeExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ALeExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ALeExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ALlExpr___name(val_t p0);
typedef val_t (*syntax___typing___ALlExpr___name_t)(val_t p0);
val_t NEW_ALlExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ALlExpr_parser___parser_prod___ALlExpr___empty_init();
val_t NEW_ALlExpr_parser___parser_prod___ALlExpr___init_allexpr(val_t p0, val_t p1);
val_t NEW_ALlExpr_parser___parser_nodes___ANode___init();
val_t NEW_ALlExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ALlExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ALlExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AGtExpr___name(val_t p0);
typedef val_t (*syntax___typing___AGtExpr___name_t)(val_t p0);
val_t NEW_AGtExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AGtExpr_parser___parser_prod___AGtExpr___empty_init();
val_t NEW_AGtExpr_parser___parser_prod___AGtExpr___init_agtexpr(val_t p0, val_t p1);
val_t NEW_AGtExpr_parser___parser_nodes___ANode___init();
val_t NEW_AGtExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AGtExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AGtExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AGeExpr___name(val_t p0);
typedef val_t (*syntax___typing___AGeExpr___name_t)(val_t p0);
val_t NEW_AGeExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AGeExpr_parser___parser_prod___AGeExpr___empty_init();
val_t NEW_AGeExpr_parser___parser_prod___AGeExpr___init_ageexpr(val_t p0, val_t p1);
val_t NEW_AGeExpr_parser___parser_nodes___ANode___init();
val_t NEW_AGeExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AGeExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AGeExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AGgExpr___name(val_t p0);
typedef val_t (*syntax___typing___AGgExpr___name_t)(val_t p0);
val_t NEW_AGgExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AGgExpr_parser___parser_prod___AGgExpr___empty_init();
val_t NEW_AGgExpr_parser___parser_prod___AGgExpr___init_aggexpr(val_t p0, val_t p1);
val_t NEW_AGgExpr_parser___parser_nodes___ANode___init();
val_t NEW_AGgExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AGgExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AGgExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___APlusExpr___name(val_t p0);
typedef val_t (*syntax___typing___APlusExpr___name_t)(val_t p0);
val_t NEW_APlusExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_APlusExpr_parser___parser_prod___APlusExpr___empty_init();
val_t NEW_APlusExpr_parser___parser_prod___APlusExpr___init_aplusexpr(val_t p0, val_t p1);
val_t NEW_APlusExpr_parser___parser_nodes___ANode___init();
val_t NEW_APlusExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_APlusExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_APlusExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AMinusExpr___name(val_t p0);
typedef val_t (*syntax___typing___AMinusExpr___name_t)(val_t p0);
val_t NEW_AMinusExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AMinusExpr_parser___parser_prod___AMinusExpr___empty_init();
val_t NEW_AMinusExpr_parser___parser_prod___AMinusExpr___init_aminusexpr(val_t p0, val_t p1);
val_t NEW_AMinusExpr_parser___parser_nodes___ANode___init();
val_t NEW_AMinusExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AMinusExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AMinusExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AStarshipExpr___name(val_t p0);
typedef val_t (*syntax___typing___AStarshipExpr___name_t)(val_t p0);
val_t NEW_AStarshipExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AStarshipExpr_parser___parser_prod___AStarshipExpr___empty_init();
val_t NEW_AStarshipExpr_parser___parser_prod___AStarshipExpr___init_astarshipexpr(val_t p0, val_t p1);
val_t NEW_AStarshipExpr_parser___parser_nodes___ANode___init();
val_t NEW_AStarshipExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AStarshipExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AStarshipExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AStarExpr___name(val_t p0);
typedef val_t (*syntax___typing___AStarExpr___name_t)(val_t p0);
val_t NEW_AStarExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_AStarExpr_parser___parser_prod___AStarExpr___empty_init();
val_t NEW_AStarExpr_parser___parser_prod___AStarExpr___init_astarexpr(val_t p0, val_t p1);
val_t NEW_AStarExpr_parser___parser_nodes___ANode___init();
val_t NEW_AStarExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AStarExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_AStarExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ASlashExpr___name(val_t p0);
typedef val_t (*syntax___typing___ASlashExpr___name_t)(val_t p0);
val_t NEW_ASlashExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_ASlashExpr_parser___parser_prod___ASlashExpr___empty_init();
val_t NEW_ASlashExpr_parser___parser_prod___ASlashExpr___init_aslashexpr(val_t p0, val_t p1);
val_t NEW_ASlashExpr_parser___parser_nodes___ANode___init();
val_t NEW_ASlashExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ASlashExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_ASlashExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___APercentExpr___name(val_t p0);
typedef val_t (*syntax___typing___APercentExpr___name_t)(val_t p0);
val_t NEW_APercentExpr_parser___parser_prod___ABinopExpr___empty_init();
val_t NEW_APercentExpr_parser___parser_prod___APercentExpr___empty_init();
val_t NEW_APercentExpr_parser___parser_prod___APercentExpr___init_apercentexpr(val_t p0, val_t p1);
val_t NEW_APercentExpr_parser___parser_nodes___ANode___init();
val_t NEW_APercentExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_APercentExpr_parser___parser_prod___ABinopExpr___init_abinopexpr(val_t p0, val_t p1);
val_t NEW_APercentExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AUminusExpr___name(val_t p0);
typedef val_t (*syntax___typing___AUminusExpr___name_t)(val_t p0);
val_t syntax___typing___AUminusExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___AUminusExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_AUminusExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AUminusExpr_parser___parser_prod___AUminusExpr___empty_init();
val_t NEW_AUminusExpr_parser___parser_prod___AUminusExpr___init_auminusexpr(val_t p0, val_t p1);
val_t NEW_AUminusExpr_parser___parser_nodes___ANode___init();
val_t NEW_AUminusExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
void syntax___typing___ACallFormExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ACallFormExpr___after_typing_t)(val_t p0, val_t p1);
val_t syntax___typing___ACallFormExpr___closure_defs(val_t p0);
typedef val_t (*syntax___typing___ACallFormExpr___closure_defs_t)(val_t p0);
val_t syntax___typing___ACallFormExpr___variable_create(val_t p0, val_t p1);
typedef val_t (*syntax___typing___ACallFormExpr___variable_create_t)(val_t p0, val_t p1);
val_t NEW_ACallFormExpr_parser___parser_nodes___ANode___init();
val_t NEW_ACallFormExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ACallFormExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ACallExpr___variable_create(val_t p0, val_t p1);
typedef val_t (*syntax___typing___ACallExpr___variable_create_t)(val_t p0, val_t p1);
val_t syntax___typing___ACallExpr___name(val_t p0);
typedef val_t (*syntax___typing___ACallExpr___name_t)(val_t p0);
val_t syntax___typing___ACallExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ACallExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ACallExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ACallExpr_parser___parser_prod___ACallExpr___empty_init();
val_t NEW_ACallExpr_parser___parser_prod___ACallExpr___init_acallexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ACallExpr_parser___parser_nodes___ANode___init();
val_t NEW_ACallExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ACallAssignExpr___variable_create(val_t p0, val_t p1);
typedef val_t (*syntax___typing___ACallAssignExpr___variable_create_t)(val_t p0, val_t p1);
val_t syntax___typing___ACallAssignExpr___name(val_t p0);
typedef val_t (*syntax___typing___ACallAssignExpr___name_t)(val_t p0);
val_t syntax___typing___ACallAssignExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ACallAssignExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ACallAssignExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ACallAssignExpr_parser___parser_prod___ACallAssignExpr___empty_init();
val_t NEW_ACallAssignExpr_parser___parser_prod___ACallAssignExpr___init_acallassignexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_ACallAssignExpr_parser___parser_nodes___ANode___init();
val_t NEW_ACallAssignExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ACallReassignExpr___variable_create(val_t p0, val_t p1);
typedef val_t (*syntax___typing___ACallReassignExpr___variable_create_t)(val_t p0, val_t p1);
val_t syntax___typing___ACallReassignExpr___name(val_t p0);
typedef val_t (*syntax___typing___ACallReassignExpr___name_t)(val_t p0);
val_t syntax___typing___ACallReassignExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ACallReassignExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ACallReassignExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ACallReassignExpr_parser___parser_prod___ACallReassignExpr___empty_init();
val_t NEW_ACallReassignExpr_parser___parser_prod___ACallReassignExpr___init_acallreassignexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_ACallReassignExpr_parser___parser_nodes___ANode___init();
val_t NEW_ACallReassignExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ABraExpr___name(val_t p0);
typedef val_t (*syntax___typing___ABraExpr___name_t)(val_t p0);
val_t syntax___typing___ABraExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ABraExpr___compute_raw_arguments_t)(val_t p0);
val_t syntax___typing___ABraExpr___closure_defs(val_t p0);
typedef val_t (*syntax___typing___ABraExpr___closure_defs_t)(val_t p0);
val_t NEW_ABraExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ABraExpr_parser___parser_prod___ABraExpr___empty_init();
val_t NEW_ABraExpr_parser___parser_prod___ABraExpr___init_abraexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_ABraExpr_parser___parser_nodes___ANode___init();
val_t NEW_ABraExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ABraAssignExpr___name(val_t p0);
typedef val_t (*syntax___typing___ABraAssignExpr___name_t)(val_t p0);
val_t syntax___typing___ABraAssignExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ABraAssignExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ABraAssignExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ABraAssignExpr_parser___parser_prod___ABraAssignExpr___empty_init();
val_t NEW_ABraAssignExpr_parser___parser_prod___ABraAssignExpr___init_abraassignexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ABraAssignExpr_parser___parser_nodes___ANode___init();
val_t NEW_ABraAssignExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___ABraReassignExpr___name(val_t p0);
typedef val_t (*syntax___typing___ABraReassignExpr___name_t)(val_t p0);
val_t syntax___typing___ABraReassignExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___ABraReassignExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_ABraReassignExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_ABraReassignExpr_parser___parser_prod___ABraReassignExpr___empty_init();
val_t NEW_ABraReassignExpr_parser___parser_prod___ABraReassignExpr___init_abrareassignexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ABraReassignExpr_parser___parser_nodes___ANode___init();
val_t NEW_ABraReassignExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AInitExpr___name(val_t p0);
typedef val_t (*syntax___typing___AInitExpr___name_t)(val_t p0);
val_t syntax___typing___AInitExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___AInitExpr___compute_raw_arguments_t)(val_t p0);
val_t NEW_AInitExpr_parser___parser_prod___ASendExpr___empty_init();
val_t NEW_AInitExpr_parser___parser_prod___AInitExpr___empty_init();
val_t NEW_AInitExpr_parser___parser_prod___AInitExpr___init_ainitexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AInitExpr_parser___parser_nodes___ANode___init();
val_t NEW_AInitExpr_parser___parser_prod___ASendExpr___init_asendexpr(val_t p0);
val_t syntax___typing___AClosureCallExpr___variable(val_t p0);
typedef val_t (*syntax___typing___AClosureCallExpr___variable_t)(val_t p0);
val_t syntax___typing___AClosureCallExpr___compute_raw_arguments(val_t p0);
typedef val_t (*syntax___typing___AClosureCallExpr___compute_raw_arguments_t)(val_t p0);
void syntax___typing___AClosureCallExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AClosureCallExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AClosureCallExpr_parser___parser_prod___AClosureCallExpr___init_aclosurecallexpr(val_t p0, val_t p1, val_t p2);
val_t NEW_AClosureCallExpr_parser___parser_prod___AClosureCallExpr___empty_init();
val_t NEW_AClosureCallExpr_parser___parser_nodes___ANode___init();
val_t syntax___typing___AClosureId___to_symbol(val_t p0);
typedef val_t (*syntax___typing___AClosureId___to_symbol_t)(val_t p0);
val_t NEW_AClosureId_parser___parser_nodes___ANode___init();
val_t syntax___typing___ASimpleClosureId___to_symbol(val_t p0);
typedef val_t (*syntax___typing___ASimpleClosureId___to_symbol_t)(val_t p0);
val_t NEW_ASimpleClosureId_parser___parser_prod___ASimpleClosureId___empty_init();
val_t NEW_ASimpleClosureId_parser___parser_prod___ASimpleClosureId___init_asimpleclosureid(val_t p0);
val_t NEW_ASimpleClosureId_parser___parser_nodes___ANode___init();
val_t syntax___typing___ABreakClosureId___to_symbol(val_t p0);
typedef val_t (*syntax___typing___ABreakClosureId___to_symbol_t)(val_t p0);
val_t NEW_ABreakClosureId_parser___parser_prod___ABreakClosureId___empty_init();
val_t NEW_ABreakClosureId_parser___parser_prod___ABreakClosureId___init_abreakclosureid(val_t p0);
val_t NEW_ABreakClosureId_parser___parser_nodes___ANode___init();
val_t syntax___typing___AClosureDef___closure(val_t p0);
typedef val_t (*syntax___typing___AClosureDef___closure_t)(val_t p0);
val_t syntax___typing___AClosureDef___escapable(val_t p0);
typedef val_t (*syntax___typing___AClosureDef___escapable_t)(val_t p0);
void syntax___typing___AClosureDef___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AClosureDef___accept_typing_t)(val_t p0, val_t p1);
void syntax___typing___AClosureDef___accept_typing2(val_t p0, val_t p1, val_t p2);
typedef void (*syntax___typing___AClosureDef___accept_typing2_t)(val_t p0, val_t p1, val_t p2);
val_t NEW_AClosureDef_parser___parser_prod___AClosureDef___empty_init();
val_t NEW_AClosureDef_parser___parser_prod___AClosureDef___init_aclosuredef(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5);
val_t NEW_AClosureDef_parser___parser_nodes___ANode___init();
void syntax___typing___ATypeCheckExpr___check_expr_cast(val_t p0, val_t p1, val_t p2, val_t p3);
typedef void (*syntax___typing___ATypeCheckExpr___check_expr_cast_t)(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ATypeCheckExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AIsaExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AIsaExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AIsaExpr_parser___parser_prod___AIsaExpr___empty_init();
val_t NEW_AIsaExpr_parser___parser_prod___AIsaExpr___init_aisaexpr(val_t p0, val_t p1);
val_t NEW_AIsaExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAsCastExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAsCastExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAsCastExpr_parser___parser_prod___AAsCastExpr___empty_init();
val_t NEW_AAsCastExpr_parser___parser_prod___AAsCastExpr___init_aascastexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4);
val_t NEW_AAsCastExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AAsNotnullExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AAsNotnullExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_AAsNotnullExpr_parser___parser_prod___AAsNotnullExpr___empty_init();
val_t NEW_AAsNotnullExpr_parser___parser_prod___AAsNotnullExpr___init_aasnotnullexpr(val_t p0, val_t p1, val_t p2, val_t p3, val_t p4, val_t p5);
val_t NEW_AAsNotnullExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AProxyExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AProxyExpr___after_typing_t)(val_t p0, val_t p1);
val_t syntax___typing___AProxyExpr___is_self(val_t p0);
typedef val_t (*syntax___typing___AProxyExpr___is_self_t)(val_t p0);
val_t syntax___typing___AProxyExpr___its_variable(val_t p0);
typedef val_t (*syntax___typing___AProxyExpr___its_variable_t)(val_t p0);
val_t NEW_AProxyExpr_parser___parser_nodes___ANode___init();
void syntax___typing___AOnceExpr___accept_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___AOnceExpr___accept_typing_t)(val_t p0, val_t p1);
val_t NEW_AOnceExpr_parser___parser_prod___AOnceExpr___empty_init();
val_t NEW_AOnceExpr_parser___parser_prod___AOnceExpr___init_aonceexpr(val_t p0, val_t p1);
val_t NEW_AOnceExpr_parser___parser_nodes___ANode___init();
void syntax___typing___ADebugTypeExpr___after_typing(val_t p0, val_t p1);
typedef void (*syntax___typing___ADebugTypeExpr___after_typing_t)(val_t p0, val_t p1);
val_t NEW_ADebugTypeExpr_parser___parser_prod___ADebugTypeExpr___empty_init();
val_t NEW_ADebugTypeExpr_parser___parser_prod___ADebugTypeExpr___init_adebugtypeexpr(val_t p0, val_t p1, val_t p2, val_t p3);
val_t NEW_ADebugTypeExpr_parser___parser_nodes___ANode___init();
#endif
