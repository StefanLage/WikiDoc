/* This C header file is generated by NIT to compile modules and programs that requires ./compiling/compiling_base. */
#ifndef compiling___compiling_base_sep
#define compiling___compiling_base_sep
#include "utils._sep.h"
#include "program._sep.h"
#include "compiling_writer._sep.h"
#include <nit_common.h>

extern const classtable_elt_t VFT_compiling___compiling_base___CProgram[];

extern const classtable_elt_t VFT_compiling___compiling_base___CompilerVisitor[];
extern const char LOCATE_compiling___compiling_base[];
extern const int SFT_compiling___compiling_base[];
#define ATTR_compiling___compiling_base___ToolContext____compdir(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 0))
#define ATTR_compiling___compiling_base___ToolContext____clibdir(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 1))
#define ATTR_compiling___compiling_base___ToolContext____bindir(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 2))
#define ATTR_compiling___compiling_base___ToolContext____output_file(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 3))
#define ATTR_compiling___compiling_base___ToolContext____boost(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 4))
#define ATTR_compiling___compiling_base___ToolContext____no_cc(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 5))
#define ATTR_compiling___compiling_base___ToolContext____cc_link(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 6))
#define ATTR_compiling___compiling_base___ToolContext____cc_libs(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 7))
#define ATTR_compiling___compiling_base___ToolContext____cc_lib_paths(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 8))
#define ATTR_compiling___compiling_base___ToolContext____cc_include_paths(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 9))
#define ATTR_compiling___compiling_base___ToolContext____ext_prefix(recv) ATTR(recv, (SFT_compiling___compiling_base[0] + 10))
#define CALL_compiling___compiling_base___ToolContext___compdir(recv) ((compiling___compiling_base___ToolContext___compdir_t)CALL((recv), (SFT_compiling___compiling_base[1] + 0)))
#define CALL_compiling___compiling_base___ToolContext___compdir__eq(recv) ((compiling___compiling_base___ToolContext___compdir__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 1)))
#define CALL_compiling___compiling_base___ToolContext___clibdir(recv) ((compiling___compiling_base___ToolContext___clibdir_t)CALL((recv), (SFT_compiling___compiling_base[1] + 2)))
#define CALL_compiling___compiling_base___ToolContext___clibdir__eq(recv) ((compiling___compiling_base___ToolContext___clibdir__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 3)))
#define CALL_compiling___compiling_base___ToolContext___bindir(recv) ((compiling___compiling_base___ToolContext___bindir_t)CALL((recv), (SFT_compiling___compiling_base[1] + 4)))
#define CALL_compiling___compiling_base___ToolContext___bindir__eq(recv) ((compiling___compiling_base___ToolContext___bindir__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 5)))
#define CALL_compiling___compiling_base___ToolContext___output_file(recv) ((compiling___compiling_base___ToolContext___output_file_t)CALL((recv), (SFT_compiling___compiling_base[1] + 6)))
#define CALL_compiling___compiling_base___ToolContext___output_file__eq(recv) ((compiling___compiling_base___ToolContext___output_file__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 7)))
#define CALL_compiling___compiling_base___ToolContext___boost(recv) ((compiling___compiling_base___ToolContext___boost_t)CALL((recv), (SFT_compiling___compiling_base[1] + 8)))
#define CALL_compiling___compiling_base___ToolContext___boost__eq(recv) ((compiling___compiling_base___ToolContext___boost__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 9)))
#define CALL_compiling___compiling_base___ToolContext___no_cc(recv) ((compiling___compiling_base___ToolContext___no_cc_t)CALL((recv), (SFT_compiling___compiling_base[1] + 10)))
#define CALL_compiling___compiling_base___ToolContext___no_cc__eq(recv) ((compiling___compiling_base___ToolContext___no_cc__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 11)))
#define CALL_compiling___compiling_base___ToolContext___cc_link(recv) ((compiling___compiling_base___ToolContext___cc_link_t)CALL((recv), (SFT_compiling___compiling_base[1] + 12)))
#define CALL_compiling___compiling_base___ToolContext___cc_link__eq(recv) ((compiling___compiling_base___ToolContext___cc_link__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 13)))
#define CALL_compiling___compiling_base___ToolContext___cc_libs(recv) ((compiling___compiling_base___ToolContext___cc_libs_t)CALL((recv), (SFT_compiling___compiling_base[1] + 14)))
#define CALL_compiling___compiling_base___ToolContext___cc_libs__eq(recv) ((compiling___compiling_base___ToolContext___cc_libs__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 15)))
#define CALL_compiling___compiling_base___ToolContext___cc_lib_paths(recv) ((compiling___compiling_base___ToolContext___cc_lib_paths_t)CALL((recv), (SFT_compiling___compiling_base[1] + 16)))
#define CALL_compiling___compiling_base___ToolContext___cc_lib_paths__eq(recv) ((compiling___compiling_base___ToolContext___cc_lib_paths__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 17)))
#define CALL_compiling___compiling_base___ToolContext___cc_include_paths(recv) ((compiling___compiling_base___ToolContext___cc_include_paths_t)CALL((recv), (SFT_compiling___compiling_base[1] + 18)))
#define CALL_compiling___compiling_base___ToolContext___cc_include_paths__eq(recv) ((compiling___compiling_base___ToolContext___cc_include_paths__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 19)))
#define CALL_compiling___compiling_base___ToolContext___ext_prefix(recv) ((compiling___compiling_base___ToolContext___ext_prefix_t)CALL((recv), (SFT_compiling___compiling_base[1] + 20)))
#define CALL_compiling___compiling_base___ToolContext___ext_prefix__eq(recv) ((compiling___compiling_base___ToolContext___ext_prefix__eq_t)CALL((recv), (SFT_compiling___compiling_base[1] + 21)))
#define ID_compiling___compiling_base___CProgram (SFT_compiling___compiling_base[2])
#define COLOR_compiling___compiling_base___CProgram (SFT_compiling___compiling_base[3])
#define ATTR_compiling___compiling_base___CProgram____program(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 0))
#define ATTR_compiling___compiling_base___CProgram____files(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 1))
#define ATTR_compiling___compiling_base___CProgram____include_dirs(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 2))
#define ATTR_compiling___compiling_base___CProgram____build_file(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 3))
#define ATTR_compiling___compiling_base___CProgram____compdir(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 4))
#define ATTR_compiling___compiling_base___CProgram____module_include(recv) ATTR(recv, (SFT_compiling___compiling_base[4] + 5))
#define INIT_TABLE_POS_compiling___compiling_base___CProgram (SFT_compiling___compiling_base[5] + 0)
#define CALL_compiling___compiling_base___CProgram___init(recv) ((compiling___compiling_base___CProgram___init_t)CALL((recv), (SFT_compiling___compiling_base[5] + 1)))
#define CALL_compiling___compiling_base___CProgram___program(recv) ((compiling___compiling_base___CProgram___program_t)CALL((recv), (SFT_compiling___compiling_base[5] + 2)))
#define CALL_compiling___compiling_base___CProgram___files(recv) ((compiling___compiling_base___CProgram___files_t)CALL((recv), (SFT_compiling___compiling_base[5] + 3)))
#define CALL_compiling___compiling_base___CProgram___include_dirs(recv) ((compiling___compiling_base___CProgram___include_dirs_t)CALL((recv), (SFT_compiling___compiling_base[5] + 4)))
#define CALL_compiling___compiling_base___CProgram___build_file(recv) ((compiling___compiling_base___CProgram___build_file_t)CALL((recv), (SFT_compiling___compiling_base[5] + 5)))
#define CALL_compiling___compiling_base___CProgram___compdir(recv) ((compiling___compiling_base___CProgram___compdir_t)CALL((recv), (SFT_compiling___compiling_base[5] + 6)))
#define CALL_compiling___compiling_base___CProgram___module_header_name(recv) ((compiling___compiling_base___CProgram___module_header_name_t)CALL((recv), (SFT_compiling___compiling_base[5] + 7)))
#define CALL_compiling___compiling_base___CProgram___get_file_ending(recv) ((compiling___compiling_base___CProgram___get_file_ending_t)CALL((recv), (SFT_compiling___compiling_base[5] + 8)))
#define CALL_compiling___compiling_base___CProgram___generate_build_file(recv) ((compiling___compiling_base___CProgram___generate_build_file_t)CALL((recv), (SFT_compiling___compiling_base[5] + 9)))
#define CALL_compiling___compiling_base___CProgram___run_c_compiler(recv) ((compiling___compiling_base___CProgram___run_c_compiler_t)CALL((recv), (SFT_compiling___compiling_base[5] + 10)))
#define ID_compiling___compiling_base___CompilerVisitor (SFT_compiling___compiling_base[6])
#define COLOR_compiling___compiling_base___CompilerVisitor (SFT_compiling___compiling_base[7])
#define ATTR_compiling___compiling_base___CompilerVisitor____number_cpt(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 0))
#define ATTR_compiling___compiling_base___CompilerVisitor____mmmodule(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 1))
#define ATTR_compiling___compiling_base___CompilerVisitor____header_writer(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 2))
#define ATTR_compiling___compiling_base___CompilerVisitor____writer(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 3))
#define ATTR_compiling___compiling_base___CompilerVisitor____decl_writer(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 4))
#define ATTR_compiling___compiling_base___CompilerVisitor____top_writer(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 5))
#define ATTR_compiling___compiling_base___CompilerVisitor____top_decl_writer(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 6))
#define ATTR_compiling___compiling_base___CompilerVisitor____indent_level(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 7))
#define ATTR_compiling___compiling_base___CompilerVisitor____program(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 8))
#define ATTR_compiling___compiling_base___CompilerVisitor____cprogram(recv) ATTR(recv, (SFT_compiling___compiling_base[8] + 9))
#define INIT_TABLE_POS_compiling___compiling_base___CompilerVisitor (SFT_compiling___compiling_base[9] + 0)
#define CALL_compiling___compiling_base___CompilerVisitor___add_decl(recv) ((compiling___compiling_base___CompilerVisitor___add_decl_t)CALL((recv), (SFT_compiling___compiling_base[9] + 1)))
#define CALL_compiling___compiling_base___CompilerVisitor___add_instr(recv) ((compiling___compiling_base___CompilerVisitor___add_instr_t)CALL((recv), (SFT_compiling___compiling_base[9] + 2)))
#define CALL_compiling___compiling_base___CompilerVisitor___add_indent(recv) ((compiling___compiling_base___CompilerVisitor___add_indent_t)CALL((recv), (SFT_compiling___compiling_base[9] + 3)))
#define CALL_compiling___compiling_base___CompilerVisitor___add_line_to(recv) ((compiling___compiling_base___CompilerVisitor___add_line_to_t)CALL((recv), (SFT_compiling___compiling_base[9] + 4)))
#define CALL_compiling___compiling_base___CompilerVisitor___add_assignment(recv) ((compiling___compiling_base___CompilerVisitor___add_assignment_t)CALL((recv), (SFT_compiling___compiling_base[9] + 5)))
#define CALL_compiling___compiling_base___CompilerVisitor___new_number(recv) ((compiling___compiling_base___CompilerVisitor___new_number_t)CALL((recv), (SFT_compiling___compiling_base[9] + 6)))
#define CALL_compiling___compiling_base___CompilerVisitor___indent(recv) ((compiling___compiling_base___CompilerVisitor___indent_t)CALL((recv), (SFT_compiling___compiling_base[9] + 7)))
#define CALL_compiling___compiling_base___CompilerVisitor___unindent(recv) ((compiling___compiling_base___CompilerVisitor___unindent_t)CALL((recv), (SFT_compiling___compiling_base[9] + 8)))
#define CALL_compiling___compiling_base___CompilerVisitor___mmmodule(recv) ((compiling___compiling_base___CompilerVisitor___mmmodule_t)CALL((recv), (SFT_compiling___compiling_base[9] + 9)))
#define CALL_compiling___compiling_base___CompilerVisitor___header_writer(recv) ((compiling___compiling_base___CompilerVisitor___header_writer_t)CALL((recv), (SFT_compiling___compiling_base[9] + 10)))
#define CALL_compiling___compiling_base___CompilerVisitor___header_writer__eq(recv) ((compiling___compiling_base___CompilerVisitor___header_writer__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 11)))
#define CALL_compiling___compiling_base___CompilerVisitor___writer(recv) ((compiling___compiling_base___CompilerVisitor___writer_t)CALL((recv), (SFT_compiling___compiling_base[9] + 12)))
#define CALL_compiling___compiling_base___CompilerVisitor___writer__eq(recv) ((compiling___compiling_base___CompilerVisitor___writer__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 13)))
#define CALL_compiling___compiling_base___CompilerVisitor___decl_writer(recv) ((compiling___compiling_base___CompilerVisitor___decl_writer_t)CALL((recv), (SFT_compiling___compiling_base[9] + 14)))
#define CALL_compiling___compiling_base___CompilerVisitor___decl_writer__eq(recv) ((compiling___compiling_base___CompilerVisitor___decl_writer__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 15)))
#define CALL_compiling___compiling_base___CompilerVisitor___top_writer(recv) ((compiling___compiling_base___CompilerVisitor___top_writer_t)CALL((recv), (SFT_compiling___compiling_base[9] + 16)))
#define CALL_compiling___compiling_base___CompilerVisitor___top_writer__eq(recv) ((compiling___compiling_base___CompilerVisitor___top_writer__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 17)))
#define CALL_compiling___compiling_base___CompilerVisitor___top_decl_writer(recv) ((compiling___compiling_base___CompilerVisitor___top_decl_writer_t)CALL((recv), (SFT_compiling___compiling_base[9] + 18)))
#define CALL_compiling___compiling_base___CompilerVisitor___top_decl_writer__eq(recv) ((compiling___compiling_base___CompilerVisitor___top_decl_writer__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 19)))
#define CALL_compiling___compiling_base___CompilerVisitor___indent_level(recv) ((compiling___compiling_base___CompilerVisitor___indent_level_t)CALL((recv), (SFT_compiling___compiling_base[9] + 20)))
#define CALL_compiling___compiling_base___CompilerVisitor___indent_level__eq(recv) ((compiling___compiling_base___CompilerVisitor___indent_level__eq_t)CALL((recv), (SFT_compiling___compiling_base[9] + 21)))
#define CALL_compiling___compiling_base___CompilerVisitor___program(recv) ((compiling___compiling_base___CompilerVisitor___program_t)CALL((recv), (SFT_compiling___compiling_base[9] + 22)))
#define CALL_compiling___compiling_base___CompilerVisitor___cprogram(recv) ((compiling___compiling_base___CompilerVisitor___cprogram_t)CALL((recv), (SFT_compiling___compiling_base[9] + 23)))
#define CALL_compiling___compiling_base___CompilerVisitor___init(recv) ((compiling___compiling_base___CompilerVisitor___init_t)CALL((recv), (SFT_compiling___compiling_base[9] + 24)))
#define CALL_compiling___compiling_base___MMGlobalProperty___meth_call(recv) ((compiling___compiling_base___MMGlobalProperty___meth_call_t)CALL((recv), (SFT_compiling___compiling_base[10] + 0)))
#define CALL_compiling___compiling_base___MMGlobalProperty___attr_access(recv) ((compiling___compiling_base___MMGlobalProperty___attr_access_t)CALL((recv), (SFT_compiling___compiling_base[10] + 1)))
#define CALL_compiling___compiling_base___MMGlobalProperty___vt_class_color(recv) ((compiling___compiling_base___MMGlobalProperty___vt_class_color_t)CALL((recv), (SFT_compiling___compiling_base[10] + 2)))
#define CALL_compiling___compiling_base___MMGlobalProperty___vt_class_id(recv) ((compiling___compiling_base___MMGlobalProperty___vt_class_id_t)CALL((recv), (SFT_compiling___compiling_base[10] + 3)))
#define ATTR_compiling___compiling_base___MMGlobalClass____cname_cache(recv) ATTR(recv, (SFT_compiling___compiling_base[11] + 0))
#define CALL_compiling___compiling_base___MMGlobalClass___cname(recv) ((compiling___compiling_base___MMGlobalClass___cname_t)CALL((recv), (SFT_compiling___compiling_base[12] + 0)))
#define CALL_compiling___compiling_base___MMGlobalClass___id_id(recv) ((compiling___compiling_base___MMGlobalClass___id_id_t)CALL((recv), (SFT_compiling___compiling_base[12] + 1)))
#define CALL_compiling___compiling_base___MMGlobalClass___color_id(recv) ((compiling___compiling_base___MMGlobalClass___color_id_t)CALL((recv), (SFT_compiling___compiling_base[12] + 2)))
#define CALL_compiling___compiling_base___MMGlobalClass___init_table_pos_id(recv) ((compiling___compiling_base___MMGlobalClass___init_table_pos_id_t)CALL((recv), (SFT_compiling___compiling_base[12] + 3)))
#define ATTR_compiling___compiling_base___MMModule____cname_cache(recv) ATTR(recv, (SFT_compiling___compiling_base[13] + 0))
#define CALL_compiling___compiling_base___MMModule___cname(recv) ((compiling___compiling_base___MMModule___cname_t)CALL((recv), (SFT_compiling___compiling_base[14] + 0)))
#define CALL_compiling___compiling_base___MMLocalClass___cname(recv) ((compiling___compiling_base___MMLocalClass___cname_t)CALL((recv), (SFT_compiling___compiling_base[15] + 0)))
#define ATTR_compiling___compiling_base___MMLocalProperty____cname_cache(recv) ATTR(recv, (SFT_compiling___compiling_base[16] + 0))
#define CALL_compiling___compiling_base___MMLocalProperty___cname(recv) ((compiling___compiling_base___MMLocalProperty___cname_t)CALL((recv), (SFT_compiling___compiling_base[17] + 0)))
#define CALL_compiling___compiling_base___MMLocalProperty___super_meth_call(recv) ((compiling___compiling_base___MMLocalProperty___super_meth_call_t)CALL((recv), (SFT_compiling___compiling_base[17] + 1)))
val_t compiling___compiling_base___ToolContext___compdir(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___compdir_t)(val_t p0);
void compiling___compiling_base___ToolContext___compdir__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___compdir__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___clibdir(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___clibdir_t)(val_t p0);
void compiling___compiling_base___ToolContext___clibdir__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___clibdir__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___bindir(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___bindir_t)(val_t p0);
void compiling___compiling_base___ToolContext___bindir__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___bindir__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___output_file(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___output_file_t)(val_t p0);
void compiling___compiling_base___ToolContext___output_file__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___output_file__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___boost(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___boost_t)(val_t p0);
void compiling___compiling_base___ToolContext___boost__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___boost__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___no_cc(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___no_cc_t)(val_t p0);
void compiling___compiling_base___ToolContext___no_cc__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___no_cc__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___cc_link(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___cc_link_t)(val_t p0);
void compiling___compiling_base___ToolContext___cc_link__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___cc_link__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___cc_libs(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___cc_libs_t)(val_t p0);
void compiling___compiling_base___ToolContext___cc_libs__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___cc_libs__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___cc_lib_paths(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___cc_lib_paths_t)(val_t p0);
void compiling___compiling_base___ToolContext___cc_lib_paths__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___cc_lib_paths__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___cc_include_paths(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___cc_include_paths_t)(val_t p0);
void compiling___compiling_base___ToolContext___cc_include_paths__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___cc_include_paths__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___ToolContext___ext_prefix(val_t p0);
typedef val_t (*compiling___compiling_base___ToolContext___ext_prefix_t)(val_t p0);
void compiling___compiling_base___ToolContext___ext_prefix__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___ToolContext___ext_prefix__eq_t)(val_t p0, val_t p1);
val_t NEW_ToolContext_toolcontext___ToolContext___init();
void compiling___compiling_base___CProgram___init(val_t p0, val_t p1, int* init_table);
typedef void (*compiling___compiling_base___CProgram___init_t)(val_t p0, val_t p1, int* init_table);
val_t NEW_CProgram_compiling___compiling_base___CProgram___init(val_t p0);
val_t compiling___compiling_base___CProgram___program(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___program_t)(val_t p0);
val_t compiling___compiling_base___CProgram___files(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___files_t)(val_t p0);
val_t compiling___compiling_base___CProgram___include_dirs(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___include_dirs_t)(val_t p0);
val_t compiling___compiling_base___CProgram___build_file(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___build_file_t)(val_t p0);
val_t compiling___compiling_base___CProgram___compdir(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___compdir_t)(val_t p0);
val_t compiling___compiling_base___CProgram___module_header_name(val_t p0, val_t p1);
typedef val_t (*compiling___compiling_base___CProgram___module_header_name_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CProgram___get_file_ending(val_t p0);
typedef val_t (*compiling___compiling_base___CProgram___get_file_ending_t)(val_t p0);
void compiling___compiling_base___CProgram___generate_build_file(val_t p0);
typedef void (*compiling___compiling_base___CProgram___generate_build_file_t)(val_t p0);
void compiling___compiling_base___CProgram___run_c_compiler(val_t p0);
typedef void (*compiling___compiling_base___CProgram___run_c_compiler_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___add_decl(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___add_decl_t)(val_t p0, val_t p1);
void compiling___compiling_base___CompilerVisitor___add_instr(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___add_instr_t)(val_t p0, val_t p1);
void compiling___compiling_base___CompilerVisitor___add_indent(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___add_indent_t)(val_t p0, val_t p1);
void compiling___compiling_base___CompilerVisitor___add_line_to(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_base___CompilerVisitor___add_line_to_t)(val_t p0, val_t p1, val_t p2);
void compiling___compiling_base___CompilerVisitor___add_assignment(val_t p0, val_t p1, val_t p2);
typedef void (*compiling___compiling_base___CompilerVisitor___add_assignment_t)(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_base___CompilerVisitor___new_number(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___new_number_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___indent(val_t p0);
typedef void (*compiling___compiling_base___CompilerVisitor___indent_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___unindent(val_t p0);
typedef void (*compiling___compiling_base___CompilerVisitor___unindent_t)(val_t p0);
val_t compiling___compiling_base___CompilerVisitor___mmmodule(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___mmmodule_t)(val_t p0);
val_t compiling___compiling_base___CompilerVisitor___header_writer(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___header_writer_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___header_writer__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___header_writer__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___writer(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___writer_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___writer__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___writer__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___decl_writer(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___decl_writer_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___decl_writer__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___decl_writer__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___top_writer(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___top_writer_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___top_writer__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___top_writer__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___top_decl_writer(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___top_decl_writer_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___top_decl_writer__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___top_decl_writer__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___indent_level(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___indent_level_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___indent_level__eq(val_t p0, val_t p1);
typedef void (*compiling___compiling_base___CompilerVisitor___indent_level__eq_t)(val_t p0, val_t p1);
val_t compiling___compiling_base___CompilerVisitor___program(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___program_t)(val_t p0);
val_t compiling___compiling_base___CompilerVisitor___cprogram(val_t p0);
typedef val_t (*compiling___compiling_base___CompilerVisitor___cprogram_t)(val_t p0);
void compiling___compiling_base___CompilerVisitor___init(val_t p0, val_t p1, val_t p2, int* init_table);
typedef void (*compiling___compiling_base___CompilerVisitor___init_t)(val_t p0, val_t p1, val_t p2, int* init_table);
val_t NEW_CompilerVisitor_compiling___compiling_base___CompilerVisitor___init(val_t p0, val_t p1);
val_t compiling___compiling_base___MMGlobalProperty___meth_call(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalProperty___meth_call_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalProperty___attr_access(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalProperty___attr_access_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalProperty___vt_class_color(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalProperty___vt_class_color_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalProperty___vt_class_id(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalProperty___vt_class_id_t)(val_t p0);
val_t NEW_MMGlobalProperty_metamodel___abstractmetamodel___MMGlobalProperty___init(val_t p0);
val_t compiling___compiling_base___MMGlobalClass___cname(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalClass___cname_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalClass___id_id(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalClass___id_id_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalClass___color_id(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalClass___color_id_t)(val_t p0);
val_t compiling___compiling_base___MMGlobalClass___init_table_pos_id(val_t p0);
typedef val_t (*compiling___compiling_base___MMGlobalClass___init_table_pos_id_t)(val_t p0);
val_t NEW_MMGlobalClass_metamodel___abstractmetamodel___MMGlobalClass___init(val_t p0);
val_t compiling___compiling_base___MMModule___cname(val_t p0);
typedef val_t (*compiling___compiling_base___MMModule___cname_t)(val_t p0);
val_t NEW_MMModule_metamodel___abstractmetamodel___MMModule___init(val_t p0, val_t p1, val_t p2, val_t p3);
val_t compiling___compiling_base___MMLocalClass___cname(val_t p0);
typedef val_t (*compiling___compiling_base___MMLocalClass___cname_t)(val_t p0);
val_t NEW_MMLocalClass_metamodel___abstractmetamodel___MMLocalClass___init(val_t p0, val_t p1, val_t p2);
val_t compiling___compiling_base___MMLocalProperty___cname(val_t p0);
typedef val_t (*compiling___compiling_base___MMLocalProperty___cname_t)(val_t p0);
val_t compiling___compiling_base___MMLocalProperty___super_meth_call(val_t p0);
typedef val_t (*compiling___compiling_base___MMLocalProperty___super_meth_call_t)(val_t p0);
val_t NEW_MMLocalProperty_metamodel___abstractmetamodel___MMLocalProperty___init(val_t p0, val_t p1);
#endif
